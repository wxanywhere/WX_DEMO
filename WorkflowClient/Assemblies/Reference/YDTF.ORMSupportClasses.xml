<?xml version="1.0"?>
<doc>
    <assembly>
        <name>YDTF.ORMSupportClasses</name>
    </assembly>
    <members>
        <member name="T:YDTF.ORMSupportClasses.Shared">
            <summary>
            公共静态类
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Shared.CanNotNullException(System.String)">
            <summary>
            name不能为Null
            </summary>
            <param name="name">名称</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Shared.CollectionIsReadOnly">
            <summary>
            集合是只读的
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Shared.ClassErrorException(System.String)">
            <summary>
            name+类型错误,类型必须是当前泛型的实体
            </summary>
            <param name="name">名称</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Shared.EntityRemoveException">
            <summary>
            实体移除失败
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Shared.EntityNotRightTypeException(System.String)">
            <summary>
            name + 不是正确的类型
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Shared.NullReferenceException(System.String)">
            <summary>
            name+是 null
            </summary>
            <param name="name"></param>
        </member>
        <member name="T:YDTF.ORMSupportClasses.IPredicateExpression">
            <summary>
            断言表达式接口
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.IPredicate">
            <summary>
            断言接口
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IPredicate.GetFrameworkElementsInPredicate">
            <summary>
            获取框架元素
            </summary>
            <returns>列表集合</returns>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IPredicate.InstanceType">
            <summary>
            获取或设置实例类型
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IPredicate.Negate">
            <summary>
            获取或设置是否是无效
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IPredicate.ObjectAlias">
            <summary>
            获取或设置对象别名
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IPredicateExpression.Add(YDTF.ORMSupportClasses.IPredicate)">
            <summary>
            新增
            </summary>
            <param name="predicateToAdd">新增表达式接口</param>
            <returns>断言表达式接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IPredicateExpression.AddWithAnd(YDTF.ORMSupportClasses.IPredicate)">
            <summary>
            新增And操作
            </summary>
            <param name="predicateToAdd">新增表达式接口</param>
            <returns>断言表达式接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IPredicateExpression.AddWithOr(YDTF.ORMSupportClasses.IPredicate)">
            <summary>
            新增Or操作
            </summary>
            <param name="predicateToAdd">新增表达式接口</param>
            <returns>断言表达式接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IPredicateExpression.Clear">
            <summary>
            从集合中移除所有元素。
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IPredicateExpression.Count">
            <summary>
            获取集合中实际包含的元素数。
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IPredicateExpression.Item(System.Int32)">
            <summary>
            获取或设置指定索引处的元素。
            </summary>
            <param name="index">要获得或设置的元素从零开始的索引。</param>
            <returns>指定索引处的元素。</returns>
        </member>
        <member name="T:YDTF.ORMSupportClasses.IEntityFieldsCore">
            <summary>
            实体字段集合核心接口
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFieldsCore.Clone">
            <summary>
            克隆对象
            </summary>
            <returns>实体字段几集合接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFieldsCore.CloneAsDirty">
            <summary>
            克隆对象并且标记脏数据
            </summary>
            <returns>实体字段几集合接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFieldsCore.DeserializeData(System.Runtime.Serialization.SerializationInfo)">
            <summary>
            反序列化数据
            </summary>
            <param name="info">要填充数据的</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFieldsCore.SerializeData(System.Runtime.Serialization.SerializationInfo)">
            <summary>
            序列化数据
            </summary>
            <param name="info">要填充数据的</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFieldsCore.Compact">
            <summary>
            刷新缓存字段集合        
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFieldsCore.Contract">
            <summary>
            收缩字段
            </summary>
            <returns>收缩后的长度</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFieldsCore.DefineField(YDTF.ORMSupportClasses.IEntityFieldCore,System.Int32)">
            <summary>
            定义字段
            </summary>
            <param name="fieldToAdd">字段</param>
            <param name="indexInFields">字段索引</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFieldsCore.DefineField(YDTF.ORMSupportClasses.IEntityFieldCore,System.Int32,YDTF.ORMSupportClasses.AggregateFunction)">
            <summary>
            定义字段
            </summary>
            <param name="fieldToAdd">字段</param>
            <param name="indexInFields">字段索引</param>
            <param name="aggregateFunctionToApply">聚合标志</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFieldsCore.DefineField(YDTF.ORMSupportClasses.IEntityFieldCore,System.Int32,System.String)">
            <summary>
            定义字段
            </summary>
            <param name="fieldToAdd">字段</param>
            <param name="indexInFields">字段索引</param>
            <param name="alias">别名</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFieldsCore.DefineField(YDTF.ORMSupportClasses.IEntityFieldCore,System.Int32,System.String,YDTF.ORMSupportClasses.AggregateFunction)">
            <summary>
            定义字段
            </summary>
            <param name="fieldToAdd">字段</param>
            <param name="indexInFields">字段索引</param>
            <param name="alias">别名</param>
            <param name="aggregateFunctionToApply">聚合标志</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFieldsCore.DefineField(YDTF.ORMSupportClasses.IEntityFieldCore,System.Int32,System.String,System.String)">
            <summary>
            定义字段
            </summary>
            <param name="fieldToAdd">字段</param>
            <param name="indexInFields">字段索引</param>
            <param name="alias">别名</param>
            <param name="entityAlias">实体别名</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFieldsCore.DefineField(YDTF.ORMSupportClasses.IEntityFieldCore,System.Int32,System.String,System.String,YDTF.ORMSupportClasses.AggregateFunction)">
            <summary>
            定义字段
            </summary>
            <param name="fieldToAdd">字段</param>
            <param name="indexInFields">字段索引</param>
            <param name="alias">别名</param>
            <param name="entityAlias">实体别名</param>
            <param name="aggregateFunctionToApply">聚合标志</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFieldsCore.Expand(System.Int32)">
            <summary>
            扩展大小
            </summary>
            <param name="numberOfNewCells">扩展的个数</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFieldsCore.GetAsEntityFieldCoreArray">
            <summary>
            获取实体字段数组
            </summary>
            <returns>实体字段数组接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFieldsCore.GetEntityFieldStates">
            <summary>
            获取实体字段状态
            </summary>
            <returns>实体字段数组状态</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFieldsCore.GetEntityNamesOfFields">
            <summary>
            获取实体字段名
            </summary>
            <returns>字段名集合</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFieldsCore.GetHashCode">
            <summary>
            用作特定类型的哈希函数。
            </summary>
            <returns>当前 System.Object 的哈希代码。</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFieldsCore.SetEntityFieldStates(YDTF.ORMSupportClasses.FieldStateBucket[])">
            <summary>
            设置实体字段状态
            </summary>
            <param name="fieldStates">状态数组</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFieldsCore.ShallowClone">
            <summary>
            浅克隆
            </summary>
            <returns>浅克隆成功对象</returns>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityFieldsCore.Count">
            <summary>
            获取中实际包含的元素数。
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityFieldsCore.IsChangedInThisEditCycle">
            <summary>
            获取或设置是否在正在修改中
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityFieldsCore.IsDirty">
            <summary>
            获取是否脏数据
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityFieldsCore.Item(System.Int32)">
            <summary>
            获取或设置指定索引处的元素。
            </summary>
            <param name="index">要获得或设置的元素从零开始的索引。</param>
            <returns>指定索引处的元素。</returns>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityFieldsCore.Item(System.String)">
            <summary>
            获取指定字段名的元素。
            </summary>
            <param name="name">字段名</param>
            <returns>指定字段名处的元素。</returns>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityFieldsCore.PrimaryKeyFields">
            <summary>
            主键字段集合
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityFieldsCore.State">
            <summary>
            实体状态
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.FieldCompareNullPredicate">
            <summary>
            字段比较null断言类
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.Predicate">
            <summary>
            断言类 
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.IPredicateInterpret">
            <summary>
            断言解析接口
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IPredicateInterpret.Interpret(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            解析
            </summary>
            <param name="entity">实体</param>
            <returns>true 成功 false 失败</returns>
        </member>
        <member name="F:YDTF.ORMSupportClasses.Predicate._instanceType">
            <summary>
            实例类型
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.Predicate._negate">
            <summary>
            是否是无效的
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.Predicate._objectAlias">
            <summary>
            对象别名
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.Predicate._selfServicing">
            <summary>
            是否是自己维护
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Predicate.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Predicate.GetFrameworkElementsInPredicate">
            <summary>
            获取框架元素
            </summary>
            <returns>列表集合</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Predicate.InterpretPredicate(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            解析刷选条件  比如解析> == != 这样的
            </summary>
            <param name="entity">实体</param>
            <returns>true 成功 false 失败</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Predicate.op_BitwiseAnd(YDTF.ORMSupportClasses.Predicate,YDTF.ORMSupportClasses.Predicate)">
            <summary>
            和 操作
            </summary>
            <param name="leftHandSide">左规则对象</param>
            <param name="rightHandSide">右规则对象</param>
            <returns>断言表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Predicate.op_BitwiseOr(YDTF.ORMSupportClasses.Predicate,YDTF.ORMSupportClasses.Predicate)">
            <summary>
            或 操作
            </summary>
            <param name="leftHandSide">左规则对象</param>
            <param name="rightHandSide">右规则对象</param>
            <returns>断言表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Predicate.YDTF#ORMSupportClasses#IPredicateInterpret#Interpret(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            解析值 值是否符合条件
            </summary>
            <param name="entity">实体</param>
            <returns>true 符合 false 不符合</returns>
        </member>
        <member name="P:YDTF.ORMSupportClasses.Predicate.InstanceType">
            <summary>
            获取或设置实例类型
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.Predicate.Negate">
            <summary>
            获取或设置是否是无效
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.Predicate.ObjectAlias">
            <summary>
            获取或设置对象别名
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.Predicate.SelfServicing">
            <summary>
            获取或设置是否自己维护
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldCompareNullPredicate._field">
            <summary>
            实体字段
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldCompareNullPredicate._persistenceInfo">
            <summary>
            字段保留信息
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldCompareNullPredicate.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldCompareNullPredicate.#ctor(YDTF.ORMSupportClasses.IEntityFieldCore,YDTF.ORMSupportClasses.IFieldPersistenceInfo)">
            <summary>
            构造函数
            </summary>
            <param name="field">字段</param>
            <param name="persistenceInfo">字段保留信息</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldCompareNullPredicate.#ctor(YDTF.ORMSupportClasses.IEntityFieldCore,YDTF.ORMSupportClasses.IFieldPersistenceInfo,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="field">字段</param>
            <param name="persistenceInfo">字段保留信息</param>
            <param name="negate">是否无效</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldCompareNullPredicate.#ctor(YDTF.ORMSupportClasses.IEntityFieldCore,YDTF.ORMSupportClasses.IFieldPersistenceInfo,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="field">字段</param>
            <param name="persistenceInfo">字段保留信息</param>
            <param name="objectAlias">对象别名</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldCompareNullPredicate.#ctor(YDTF.ORMSupportClasses.IEntityFieldCore,YDTF.ORMSupportClasses.IFieldPersistenceInfo,System.String,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="field">字段</param>
            <param name="persistenceInfo">字段保留信息</param>
            <param name="objectAlias">对象别名</param>
            <param name="negate">是否无效</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldCompareNullPredicate.GetFrameworkElementsInPredicate">
            <summary>
            获取框架元素
            </summary>
            <returns>列表集合</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldCompareNullPredicate.InitClass(YDTF.ORMSupportClasses.IEntityFieldCore,YDTF.ORMSupportClasses.IFieldPersistenceInfo,System.Boolean,System.Boolean,System.String)">
            <summary>
            初始化类
            </summary>
            <param name="field">字段</param>
            <param name="persistenceInfo">字段保留信息</param>
            <param name="negate">是否无效</param>
            <param name="selfServicing">自己维护</param>
            <param name="objectAlias">对象别名</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldCompareNullPredicate.InterpretPredicate(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            解析刷选条件  比如解析> == != 这样的
            </summary>
            <param name="entity">实体</param>
            <returns>true 成功 false 失败</returns>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldCompareNullPredicate.FieldCore">
            <summary>
            获取或设置字段
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldCompareNullPredicate.PersistenceInfo">
            <summary>
            获取或设置保留信息
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.EntityState">
            <summary>
            实体状态
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityState.New">
            <summary>
            新增
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityState.Fetched">
            <summary>
            循环
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityState.OutOfSync">
            <summary>
            同步
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityState.Deleted">
            <summary>
            删除
            </summary>
        </member>
        <member name="T:YDTF.VO.VOCollection`1">
            <summary>
            实体集合泛型
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
        </member>
        <member name="T:YDTF.ORMSupportClasses.EntityCollectionBase2`1">
            <summary>
            实体集合基类
            </summary>
            <typeparam name="TEntity">实体</typeparam>
        </member>
        <member name="T:YDTF.ORMSupportClasses.CollectionCore`1">
            <summary>
            泛型实体集合核心类
            </summary>
            <typeparam name="T">Entity</typeparam>
        </member>
        <member name="T:YDTF.ORMSupportClasses.IEntityCollectionCore">
            <summary>
            实体集合核心接口
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityCollectionCore.Add(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            新增实体
            </summary>
            <param name="entityToAdd">实体</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityCollectionCore.Contains(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            确定某元素是否在。
            </summary>
            <param name="entity">对于引用类型，该值可以为 null</param>
            <returns>找到 item，则为 true，否则为 false</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityCollectionCore.FindMatchesI(YDTF.ORMSupportClasses.IPredicate)">
            <summary>
            根据条件查询数据
            </summary>
            <param name="filter">刷选条件</param>
            <returns>返回匹配集合的索引</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityCollectionCore.IndexOf(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            搜索指定的对象，并返回整个集合中第一个匹配项的从零开始的索引。
            </summary>
            <param name="entity">对于引用类型，该值可以为 null。</param>
            <returns>如果在整个集合中找到 item 的第一个匹配项，则为该项的从零开始的索引；否则为-1。</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityCollectionCore.Insert(System.Int32,YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            将元素插入指定索引处。
            </summary>
            <param name="index">从零开始的索引，应在该位置插入 item。</param>
            <param name="entityToAdd">要插入的对象。对于引用类型，该值可以为 null。</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityCollectionCore.Remove(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            移除特定对象的第一个匹配项
            </summary>
            <param name="entityToRemove">移除的对象,对于引用类型，该值可以为 null</param>
            <returns>如果成功移除 item，则为 true 否则为 false</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityCollectionCore.Sort(System.Int32,System.ComponentModel.ListSortDirection)">
            <summary>
            排序
            </summary>
            <param name="fieldIndex">字段索引</param>
            <param name="direction">排序操作方向</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityCollectionCore.Sort(System.Int32,System.ComponentModel.ListSortDirection,System.Collections.Generic.IComparer{System.Object})">
            <summary>
            排序
            </summary>
            <param name="fieldIndex">字段索引</param>
            <param name="direction">排序操作方向</param>
            <param name="comparerToUse">比较器</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityCollectionCore.Sort(System.String,System.ComponentModel.ListSortDirection,System.Collections.Generic.IComparer{System.Object})">
            <summary>
            排序
            </summary>
            <param name="propertyName">属性的抽象化</param>
            <param name="direction">排序操作方向</param>
            <param name="comparerToUse">比较器</param>
        </member>
        <member name="E:YDTF.ORMSupportClasses.IEntityCollectionCore.EntityAdded">
            <summary>
            新增实体后事件
            </summary>
        </member>
        <member name="E:YDTF.ORMSupportClasses.IEntityCollectionCore.EntityAdding">
            <summary>
            新增实体前事件
            </summary>
        </member>
        <member name="E:YDTF.ORMSupportClasses.IEntityCollectionCore.EntityRemoved">
            <summary>
            移除实体后事件
            </summary>
        </member>
        <member name="E:YDTF.ORMSupportClasses.IEntityCollectionCore.EntityRemoving">
            <summary>
            移除实体前事件
            </summary>
        </member>
        <member name="E:YDTF.ORMSupportClasses.IEntityCollectionCore.ListChanged">
            <summary>
            集合修改事件
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityCollectionCore.AllowEdit">
            <summary>
            获取和设置是否允许修改
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityCollectionCore.AllowNew">
            <summary>
            获取和设置是否允许新增
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityCollectionCore.AllowRemove">
            <summary>
            获取和设置是否允许移除
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityCollectionCore.Count">
            <summary>
            获取实际包含的元素数。
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityCollectionCore.IsReadOnly">
            <summary>
            获取和设置是否只读
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityCollectionCore.Item(System.Int32)">
            <summary>
            获取或设置指定索引处的元素。
            </summary>
            <param name="index">要获得或设置的元素从零开始的索引。</param>
            <returns>指定索引处的元素。</returns>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityCollectionCore.ValidatorChange">
            <summary>
            获取或设置验证修改接口
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.CollectionCore`1._allowEdit">
            <summary>
            获取和设置是否允许修改
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.CollectionCore`1._allowNew">
            <summary>
            获取和设置是否允许新增
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.CollectionCore`1._allowRemove">
            <summary>
            获取和设置是否允许删除
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.CollectionCore`1._isReadOnly">
            <summary>
            获取和设置是否是否只读
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.CollectionCore`1._contents">
            <summary>
            真实的实体集合
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.CollectionCore`1._entityIndices">
            <summary>
            实体索引
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.CollectionCore`1._isDisposed">
            <summary>
            是否释放过资源
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.CollectionCore`1._site">
            <summary>
            站点地图
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.CollectionCore`1._suppressListChangedEvents">
            <summary>
            支持修改事件
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.CollectionCore`1._listOperationInProgress">
            <summary>
            集合是否在执行方法中 多线程操作时用到
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.CollectionCore`1._validatorChange">
            <summary>
            验证修改接口
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            构造函数反序列化
            </summary>
            <param name="info">要填充数据的</param>
            <param name="context">此序列化的目标</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
             使用将目标对象序列化所需的数据填充
            </summary>
            <param name="info">要填充数据的</param>
            <param name="context">此序列化的目标</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.YDTF#ORMSupportClasses#IEntityCollectionCore#FindMatchesI(YDTF.ORMSupportClasses.IPredicate)">
            <summary>
            根据条件查询数据
            </summary>
            <param name="filter">刷选条件</param>
            <returns>返回匹配集合的索引</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.FindMatchesI(YDTF.ORMSupportClasses.IPredicate)">
            <summary>
            根据条件查询数据
            </summary>
            <param name="filter">刷选条件</param>
            <returns>返回匹配集合的索引</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.FindMatchesE(YDTF.ORMSupportClasses.IPredicate)">
            <summary>
            根据条件查询数据
            </summary>
            <param name="filter">刷选条件</param>
            <returns>返回匹配的集合</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.PlaceInRemovedEntitiesTracker(`0)">
            <summary>
            添加移除实体
            </summary>
            <param name="item">实体</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.AddNew">
            <summary>
            新增 
            </summary>
            <returns>实体对象</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.YDTF#ORMSupportClasses#IEntityCollectionCore#Add(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            新增实体
            </summary>
            <param name="entityToAdd">实体</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.YDTF#ORMSupportClasses#IEntityCollectionCore#Contains(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            确定某元素是否在。
            </summary>
            <param name="entity">对于引用类型，该值可以为 null</param>
            <returns>找到 item，则为 true，否则为 false</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.YDTF#ORMSupportClasses#IEntityCollectionCore#IndexOf(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            搜索指定的对象，并返回整个集合中第一个匹配项的从零开始的索引。
            </summary>
            <param name="entity">对于引用类型，该值可以为 null。</param>
            <returns>如果在整个集合中找到 item 的第一个匹配项，则为该项的从零开始的索引；否则为-1。</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.YDTF#ORMSupportClasses#IEntityCollectionCore#Insert(System.Int32,YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            将元素插入指定索引处。
            </summary>
            <param name="index">从零开始的索引，应在该位置插入 item。</param>
            <param name="entityToAdd">要插入的对象。对于引用类型，该值可以为 null。</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.YDTF#ORMSupportClasses#IEntityCollectionCore#Remove(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            移除特定对象的第一个匹配项
            </summary>
            <param name="entityToRemove">移除的对象,对于引用类型，该值可以为 null</param>
            <returns>如果成功移除 item，则为 true 否则为 false</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.Sort(System.Int32,System.ComponentModel.ListSortDirection)">
            <summary>
            排序
            </summary>
            <param name="fieldIndex">字段索引</param>
            <param name="direction">排序操作方向</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.Sort(System.Int32,System.ComponentModel.ListSortDirection,System.Collections.Generic.IComparer{System.Object})">
            <summary>
            排序
            </summary>
            <param name="fieldIndex">字段索引</param>
            <param name="direction">排序操作方向</param>
            <param name="comparerToUse">比较器</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.Sort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection,System.Collections.Generic.IComparer{System.Object})">
            <summary>
            排序
            </summary>
            <param name="descriptor">属性的抽象化</param>
            <param name="direction">排序操作方向</param>
            <param name="comparerToUse">比较器</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.Sort(System.String,System.ComponentModel.ListSortDirection,System.Collections.Generic.IComparer{System.Object})">
            <summary>
            排序
            </summary>
            <param name="propertyName">属性名称</param>
            <param name="direction">排序操作方向</param>
            <param name="comparerToUse">比较器</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.Add(`0)">
            <summary>
            新增实体
            </summary>
            <param name="item">实体</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            将指定集合元素添加到末尾
            </summary>
            <param name="c">集合</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.IndexOf(`0)">
            <summary>
            搜索指定的对象，并返回整个集合中第一个匹配项的从零开始的索引。
            </summary>
            <param name="item">对于引用类型，该值可以为 null。</param>
            <returns>如果在整集合中找到 item 的第一个匹配项，则为该项的从零开始的索引；否则为-1。</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.Insert(System.Int32,`0)">
            <summary>
            将元素插入指定索引处。
            </summary>
            <param name="index">从零开始的索引，应在该位置插入 item。</param>
            <param name="item">要插入的对象。对于引用类型，该值可以为 null。</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.Remove(`0)">
            <summary>
            移除特定对象的第一个匹配项
            </summary>
            <param name="item">移除的对象,对于引用类型，该值可以为 null</param>
            <returns>如果成功移除 item，则为 true 否则为 false</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.RemoveAt(System.Int32)">
            <summary>
             移除指定索引处的元素。
            </summary>
            <param name="index">要移除的元素的从零开始的索引。</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            移除集合
            </summary>
            <param name="toRemove">集合对象</param>
            <returns>移除个数</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.Clear">
            <summary>
            清空集合
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.Contains(`0)">
            <summary>
            确定某元素是否在。
            </summary>
            <param name="item">对于引用类型，该值可以为 null</param>
            <returns>找到 item，则为 true，否则为 false</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.CopyTo(`0[],System.Int32)">
            <summary>
            将对象复制到数组中
            </summary>
            <param name="array">数组</param>
            <param name="arrayIndex">中从零开始的索引，从此处开始复制</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.GetEnumerator">
            <summary>
            返回循环访问集合的枚举数。
            </summary>
            <returns>用于集合Enumerator。</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            返回循环访问的枚举器。
            </summary>
            <returns>IEnumerator</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.System#Collections#IList#Add(System.Object)">
            <summary>
            新增对象
            </summary>
            <param name="value">对象</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.System#Collections#IList#Clear">
            <summary>
            清空集合
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.System#Collections#IList#Contains(System.Object)">
            <summary>
            确定某元素是否在。
            </summary>
            <param name="value">对于引用类型，该值可以为 null</param>
            <returns>找到 item，则为 true，否则为 false</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            搜索指定的对象，并返回整个集合中第一个匹配项的从零开始的索引。
            </summary>
            <param name="value">对于引用类型，该值可以为 null。</param>
            <returns>如果在整个集合 中找到 item 的第一个匹配项，则为该项的从零开始的索引；否则为-1。</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            将元素插入指定索引处。
            </summary>
            <param name="index">从零开始的索引，应在该位置插入 item。</param>
            <param name="value">要插入的对象。对于引用类型，该值不可以为 null。</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.System#Collections#IList#Remove(System.Object)">
            <summary>
            移除特定对象的第一个匹配项
            </summary>
            <param name="value">移除的对象,对于引用类型，该值不可以为 null</param>
            <returns>如果成功移除 item，则为 true 否则为 false</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
             移除指定索引处的元素。
            </summary>
            <param name="index">要移除的元素的从零开始的索引。</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            将对象复制到数组中
            </summary>
            <param name="array">数组</param>
            <param name="index">中从零开始的索引，从此处开始复制</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.Dispose(System.Boolean)">
            <summary>
            释放资源
            </summary>
            <param name="isDisposing">是否释放</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.ToString">
            <summary>
            将此实例的数值转换为其等效的字符串表示形式。
            </summary>
            <returns>此实例的值的字符串表示形式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.PerformAdd(`0)">
            <summary>
            执行新增
            </summary>
            <param name="item">新增项</param>
            <returns>新增项的索引</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.PerformRemove(`0,System.Boolean,System.Boolean)">
            <summary>
            执行移除
            </summary>
            <param name="item">移除对象</param>
            <param name="silentRemove">是否移除添加到删除集合</param>
            <param name="inBulkRemoval"></param>
            <returns>true 移除成功 false 移除失败</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.OnEntityAdding(`0)">
            <summary>
            集合中新增之前事件
            </summary>
            <param name="entityToAdd">新增实体</param>
            <returns>Ture 允许新增</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.OnEntityAdded(`0)">
            <summary>
            集合中新增项之后事件
            </summary>
            <param name="entityToAdd">新增实体</param>
            <returns>Ture 允许新增</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.SetEntityEventHandlers(`0)">
            <summary>
            设置实体事件
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.UnsetEntityEventHandlers(`0)">
            <summary>
            取消实体事件
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.OnEntityInListOnEntityContentsChanged(System.Object,System.EventArgs)">
            <summary>
            实体在List中内容改变事件
            </summary>
            <param name="sender">实体</param>
            <param name="e">消息</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.OnListChanged(System.Int32,System.ComponentModel.ListChangedType)">
            <summary>
            集合被修改
            </summary>
            <param name="index">修改的实体索引</param>
            <param name="typeOfChange">更改方式</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.RebuildEntityIndex">
            <summary>
            还原实体索引
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.InitCoreClass">
            <summary>
            初始化核心类
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.InitCoreClass(System.Int32)">
            <summary>
            初始化核心类
            </summary>
            <param name="capacity">集合默认长度</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.OnEntityRemoving(`0)">
            <summary>
            集合中移除之前事件
            </summary>
            <param name="entityToRemove">移除实体</param>
            <returns>Ture 允许移除</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.OnEntityRemoved(`0)">
            <summary>
            集合中移除之后事件
            </summary>
            <param name="entityToRemove">移除之后的实体</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionCore`1.SilentRemove(`0)">
            <summary>
            无消息移除
            </summary>
            <param name="toRemove">移除对象</param>
        </member>
        <member name="E:YDTF.ORMSupportClasses.CollectionCore`1.ListChanged">
            <summary>
            集合修改事件
            </summary>
        </member>
        <member name="E:YDTF.ORMSupportClasses.CollectionCore`1.EntityAdded">
            <summary>
            实体新增后
            </summary>
        </member>
        <member name="E:YDTF.ORMSupportClasses.CollectionCore`1.EntityAdding">
            <summary>
            实体新增前
            </summary>
        </member>
        <member name="E:YDTF.ORMSupportClasses.CollectionCore`1.EntityRemoved">
            <summary>
            实体移除后
            </summary>
        </member>
        <member name="E:YDTF.ORMSupportClasses.CollectionCore`1.EntityRemoving">
            <summary>
            实体移除前
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.CollectionCore`1.YDTF#ORMSupportClasses#IEntityCollectionCore#Item(System.Int32)">
            <summary>
            获取或设置指定索引处的元素。
            </summary>
            <param name="index">要获得或设置的元素从零开始的索引。</param>
            <returns>指定索引处的元素。</returns>
        </member>
        <member name="P:YDTF.ORMSupportClasses.CollectionCore`1.AllowEdit">
            <summary>
            获取和设置是否允许修改
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.CollectionCore`1.AllowNew">
            <summary>
            获取和设置是否允许新增
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.CollectionCore`1.AllowRemove">
            <summary>
            获取和设置是否允许移除
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.CollectionCore`1.IsReadOnly">
            <summary>
            获取和设置是否允许只读
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.CollectionCore`1.Item(System.Int32)">
            <summary>
            获取或设置指定索引处的元素。
            </summary>
            <param name="index">要获得或设置的元素从零开始的索引。</param>
            <returns>指定索引处的元素。</returns>
        </member>
        <member name="P:YDTF.ORMSupportClasses.CollectionCore`1.Count">
            <summary>
            获取实际包含的元素数。
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.CollectionCore`1.System#Collections#IList#IsFixedSize">
            <summary>
            固定站点
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.CollectionCore`1.System#Collections#IList#IsReadOnly">
            <summary>
            允许只读
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.CollectionCore`1.System#Collections#IList#Item(System.Int32)">
            <summary>
            获取或设置指定索引处的元素。
            </summary>
            <param name="index">要获得或设置的元素从零开始的索引。</param>
            <returns>指定索引处的元素。</returns>
        </member>
        <member name="P:YDTF.ORMSupportClasses.CollectionCore`1.System#Collections#ICollection#Count">
            <summary>
            获取实际包含的元素数。
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.CollectionCore`1.System#Collections#ICollection#IsSynchronized">
            <summary>
            获取一个值，该值指示是否同步对集合的访问（线程安全）。
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.CollectionCore`1.System#Collections#ICollection#SyncRoot">
            <summary>
            同步根
            </summary>
        </member>
        <member name="E:YDTF.ORMSupportClasses.CollectionCore`1.Disposed">
            <summary>
            资源释放
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.CollectionCore`1.Site">
            <summary>
            提供站点所需的功能。
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.CollectionCore`1.Capacity">
            <summary>
            获取或设置该内部数据结构在不调整大小的情况下能够容纳的元素总数。
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.CollectionCore`1.DirtyEntities">
            <summary>
            获取脏实体集合(被修改的实体)
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.CollectionCore`1.Items">
            <summary>
            获取IList集合
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.CollectionCore`1.SuppressListChangedEventsInternal">
            <summary>
            获取和设置是否支持集合修改事件
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.CollectionCore`1.ValidatorChange">
            <summary>
            获取或设置验证修改接口
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.ICollectionMaintenance">
            <summary>
            集合维护接口
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ICollectionMaintenance.Clear">
            <summary>
            清空集合
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ICollectionMaintenance.CreateDummyInstance">
            <summary>
            通过实体工厂创建实体
            </summary>
            <returns>实体</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ICollectionMaintenance.RaiseListChanged(System.Int32,System.ComponentModel.ListChangedType)">
            <summary>
            集合修改
            </summary>
            <param name="index">修改实体的索引</param>
            <param name="typeOfChange">指定列表的更改方式</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ICollectionMaintenance.SilentRemove(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            不添加到删除集合的移除
            </summary>
            <param name="toRemove">移除实体</param>
        </member>
        <member name="P:YDTF.ORMSupportClasses.ICollectionMaintenance.SurpressListChangedEvents">
            <summary>
            是否支持集合修改事件
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.IFastSerializableEntityCollection2">
            <summary>
            快速序列化实体集合接口
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.IEntityCollection2">
            <summary>
            实体集合接口
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityCollection2.Add(YDTF.ORMSupportClasses.IEntity2)">
            <summary>
            新增
            </summary>
            <param name="entityToAdd">新增的实体</param>
            <returns>添加实体的索引</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityCollection2.AddRange(YDTF.ORMSupportClasses.IEntityCollection2)">
            <summary>
            将指定集合元素添加到末尾
            </summary>
            <param name="c">集合</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityCollection2.Clear">
            <summary>
            清空集合
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityCollection2.Contains(YDTF.ORMSupportClasses.IEntity2)">
            <summary>
            确定某元素是否在。
            </summary>
            <param name="entityToFind">该值不可以为 null</param>
            <returns>找到 item，则为 true，否则为 false</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityCollection2.CopyTo(YDTF.ORMSupportClasses.IEntity2[],System.Int32)">
            <summary>
            将对象复制到数组中
            </summary>
            <param name="destination">数组</param>
            <param name="index">中从零开始的索引，从此处开始复制</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityCollection2.CreateView">
            <summary>
            创建视图
            </summary>
            <returns>视图集合</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityCollection2.CreateView(YDTF.ORMSupportClasses.IPredicate)">
            <summary>
            创建视图
            </summary>
            <param name="filter">默认刷选条件 可以为null</param>
            <returns>视图集合</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityCollection2.CreateView(YDTF.ORMSupportClasses.IPredicate,YDTF.ORMSupportClasses.ISortExpression)">
            <summary>
            创建视图
            </summary>
            <param name="filter">默认刷选条件 可以为null</param>
            <param name="sorter">默认排序 可以为null</param>
            <returns>视图集合</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityCollection2.CreateView(YDTF.ORMSupportClasses.IPredicate,YDTF.ORMSupportClasses.ISortExpression,YDTF.ORMSupportClasses.PostCollectionChangeAction)">
            <summary>
            创建视图
            </summary>
            <param name="filter">默认刷选条件 可以为null</param>
            <param name="sorter">默认排序 可以为null</param>
            <param name="dataChangeAction">数据修改关联状态</param>
            <returns>视图集合</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityCollection2.IndexOf(YDTF.ORMSupportClasses.IEntity2)">
            <summary>
            搜索指定的对象，并返回整个集合中第一个匹配项的从零开始的索引。
            </summary>
            <param name="entityToFind">值不可以为 null。</param>
            <returns>如果在整个集合 中找到 item 的第一个匹配项，则为该项的从零开始的索引；否则为-1。</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityCollection2.Insert(System.Int32,YDTF.ORMSupportClasses.IEntity2)">
            <summary>
            将元素插入指定索引处。
            </summary>
            <param name="index">从零开始的索引，应在该位置插入 item。</param>
            <param name="entityToAdd">要插入的对象。对于引用类型，该值不可以为 null。</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityCollection2.Remove(YDTF.ORMSupportClasses.IEntity2)">
            <summary>
            移除特定对象的第一个匹配项
            </summary>
            <param name="entityToRemove">移除的对象,对于引用类型，该值不可以为 null</param>
            <returns>如果成功移除 item，则为 true 否则为 false</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityCollection2.RemoveAt(System.Int32)">
            <summary>
             移除指定索引处的元素。
            </summary>
            <param name="index">要移除的元素的从零开始的索引。</param>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityCollection2.Capacity">
            <summary>
            获取或设置该内部数据结构在不调整大小的情况下能够容纳的元素总数。
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityCollection2.ContainsDirtyContents">
            <summary>
            获取是否存在脏数据
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityCollection2.DefaultView">
            <summary>
            获取默认视图
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityCollection2.DirtyEntities">
            <summary>
            获取脏实体集合
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityCollection2.EntityFactoryToUse">
            <summary>
            获取和设置实体工厂
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityCollection2.Item(System.Int32)">
            <summary>
            获取或设置指定索引处的元素。
            </summary>
            <param name="index">要获得或设置的元素从零开始的索引。</param>
            <returns>指定索引处的元素。</returns>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityCollection2.RemovedEntitiesTracker">
            <summary>
            移除的实体集合
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IFastSerializableEntityCollection2.Add(YDTF.ORMSupportClasses.EntityBase2)">
            <summary>
            新增
            </summary>
            <param name="entity">新增的实体</param>
            <returns>添加实体的索引</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IFastSerializableEntityCollection2.InitClassInternal">
            <summary>
            初始化在内部使用
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityCollectionBase2`1._defaultView">
            <summary>
            默认视图
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityCollectionBase2`1._entityFactoryToUse">
            <summary>
            使用的实体工厂
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityCollectionBase2`1._removedEntitiesTracker">
            <summary>
            移除实体集合
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCollectionBase2`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            构造函数
            </summary>
            <param name="initialContents">初始化集合添加</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCollectionBase2`1.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCollectionBase2`1.#ctor(YDTF.ORMSupportClasses.IEntityFactory2)">
            <summary>
            构造函数
            </summary>
            <param name="entityFactoryToUse">使用的实体工厂</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCollectionBase2`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            构造函数
            </summary>
            <param name="info">要填充数据的</param>
            <param name="context">此序列化的目标</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCollectionBase2`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
             使用将目标对象序列化所需的数据填充
            </summary>
            <param name="info">要填充数据的</param>
            <param name="context">此序列化的目标</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCollectionBase2`1.OnInitComplete">
            <summary>
            初始化完成
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCollectionBase2`1.AddNew">
            <summary>
            新增实体
            </summary>
            <returns>实体</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCollectionBase2`1.CreateDefaultEntityView">
            <summary>
            创建默认实体视图
            </summary>
            <returns>视图集合</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCollectionBase2`1.CreateView">
            <summary>
            创建视图
            </summary>
            <returns>视图集合</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCollectionBase2`1.CreateView(YDTF.ORMSupportClasses.IPredicate)">
            <summary>
            创建视图
            </summary>
            <param name="filter">默认刷选条件 可以为null</param>
            <returns>视图集合</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCollectionBase2`1.CreateView(YDTF.ORMSupportClasses.IPredicate,YDTF.ORMSupportClasses.ISortExpression)">
            <summary>
            创建视图
            </summary>
            <param name="filter">默认刷选条件 可以为null</param>
            <param name="sorter">默认排序 可以为null</param>
            <returns>视图集合</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCollectionBase2`1.CreateView(YDTF.ORMSupportClasses.IPredicate,YDTF.ORMSupportClasses.ISortExpression,YDTF.ORMSupportClasses.PostCollectionChangeAction)">
            <summary>
            创建视图
            </summary>
            <param name="filter">默认刷选条件 可以为null</param>
            <param name="sorter">默认排序 可以为null</param>
            <param name="dataChangeAction">数据修改关联状态</param>
            <returns>视图集合</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCollectionBase2`1.DetermineEntityFactory">
            <summary>
            确认实体使用的实体工厂
            </summary>
            <returns>确认后的实体工厂</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCollectionBase2`1.GetList">
            <summary>
            获取视图转换后的IList
            </summary>
            <returns>IList</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCollectionBase2`1.InitClass">
            <summary>
            初始化实体集合类
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCollectionBase2`1.InitClass(YDTF.ORMSupportClasses.IEntityFactory2)">
            <summary>
            初始化实体集合类
            </summary>
            <param name="entityFactoryToUse">使用的实体工厂</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCollectionBase2`1.PlaceInRemovedEntitiesTracker(`0)">
            <summary>
            添加移除实体
            </summary>
            <param name="item">实体</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCollectionBase2`1.YDTF#ORMSupportClasses#ICollectionMaintenance#CreateDummyInstance">
            <summary>
            通过实体工厂创建实体
            </summary>
            <returns>实体</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCollectionBase2`1.YDTF#ORMSupportClasses#ICollectionMaintenance#RaiseListChanged(System.Int32,System.ComponentModel.ListChangedType)">
            <summary>
            集合修改
            </summary>
            <param name="index">修改实体的索引</param>
            <param name="typeOfChange">指定列表的更改方式</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCollectionBase2`1.YDTF#ORMSupportClasses#ICollectionMaintenance#SilentRemove(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            不添加到删除集合的移除
            </summary>
            <param name="toRemove">移除实体</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCollectionBase2`1.YDTF#ORMSupportClasses#IEntityCollection2#Add(YDTF.ORMSupportClasses.IEntity2)">
            <summary>
            新增
            </summary>
            <param name="entityToAdd">新增的实体</param>
            <returns>添加实体的索引</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCollectionBase2`1.YDTF#ORMSupportClasses#IEntityCollection2#AddRange(YDTF.ORMSupportClasses.IEntityCollection2)">
            <summary>
            将指定集合元素添加到末尾
            </summary>
            <param name="c">集合</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCollectionBase2`1.YDTF#ORMSupportClasses#IEntityCollection2#Clear">
            <summary>
            清空集合
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCollectionBase2`1.YDTF#ORMSupportClasses#IEntityCollection2#Contains(YDTF.ORMSupportClasses.IEntity2)">
            <summary>
            确定某元素是否在。
            </summary>
            <param name="entityToFind">该值不可以为 null</param>
            <returns>找到 item，则为 true，否则为 false</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCollectionBase2`1.YDTF#ORMSupportClasses#IEntityCollection2#CreateView">
            <summary>
            创建视图
            </summary>
            <returns>视图集合</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCollectionBase2`1.YDTF#ORMSupportClasses#IEntityCollection2#CreateView(YDTF.ORMSupportClasses.IPredicate)">
            <summary>
            创建视图
            </summary>
            <param name="filter">默认刷选条件 可以为null</param>
            <returns>视图集合</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCollectionBase2`1.YDTF#ORMSupportClasses#IEntityCollection2#CreateView(YDTF.ORMSupportClasses.IPredicate,YDTF.ORMSupportClasses.ISortExpression)">
            <summary>
            创建视图
            </summary>
            <param name="filter">默认刷选条件 可以为null</param>
            <param name="sorter">默认排序 可以为null</param>
            <returns>视图集合</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCollectionBase2`1.YDTF#ORMSupportClasses#IEntityCollection2#CreateView(YDTF.ORMSupportClasses.IPredicate,YDTF.ORMSupportClasses.ISortExpression,YDTF.ORMSupportClasses.PostCollectionChangeAction)">
            <summary>
            创建视图
            </summary>
            <param name="filter">默认刷选条件 可以为null</param>
            <param name="sorter">默认排序 可以为null</param>
            <param name="dataChangeAction">数据修改关联状态</param>
            <returns>视图集合</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCollectionBase2`1.YDTF#ORMSupportClasses#IEntityCollection2#IndexOf(YDTF.ORMSupportClasses.IEntity2)">
            <summary>
            搜索指定的对象，并返回整个集合中第一个匹配项的从零开始的索引。
            </summary>
            <param name="entityToFind">值不可以为 null。</param>
            <returns>如果在整个集合 中找到 item 的第一个匹配项，则为该项的从零开始的索引；否则为-1。</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCollectionBase2`1.YDTF#ORMSupportClasses#IEntityCollection2#Insert(System.Int32,YDTF.ORMSupportClasses.IEntity2)">
            <summary>
            将元素插入指定索引处。
            </summary>
            <param name="index">从零开始的索引，应在该位置插入 item。</param>
            <param name="entityToAdd">要插入的对象。对于引用类型，该值不可以为 null。</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCollectionBase2`1.YDTF#ORMSupportClasses#IEntityCollection2#Remove(YDTF.ORMSupportClasses.IEntity2)">
            <summary>
            移除特定对象的第一个匹配项
            </summary>
            <param name="entityToRemove">移除的对象,对于引用类型，该值不可以为 null</param>
            <returns>如果成功移除 item，则为 true 否则为 false</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCollectionBase2`1.YDTF#ORMSupportClasses#IFastSerializableEntityCollection2#Add(YDTF.ORMSupportClasses.EntityBase2)">
            <summary>
            执行新增
            </summary>
            <param name="entity">新增项</param>
            <returns>新增项的索引</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCollectionBase2`1.YDTF#ORMSupportClasses#IFastSerializableEntityCollection2#InitClassInternal">
            <summary>
            初始化在内部使用
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCollectionBase2`1.Sort(System.Int32,System.ComponentModel.ListSortDirection,System.Collections.Generic.IComparer{System.Object})">
            <summary>
            排序
            </summary>
            <param name="fieldIndex">字段索引</param>
            <param name="direction">排序操作方向</param>
            <param name="comparerToUse">比较器</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCollectionBase2`1.CopyTo(YDTF.ORMSupportClasses.IEntity2[],System.Int32)">
            <summary>
            将对象复制到数组中
            </summary>
            <param name="destination">数组</param>
            <param name="index">中从零开始的索引，从此处开始复制</param>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityCollectionBase2`1.ContainsDirtyContents">
            <summary>
            获取是否存在脏数据
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityCollectionBase2`1.ContainsListCollection">
            <summary>
            获取存在List集合
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityCollectionBase2`1.DefaultView">
            <summary>
            获取默认视图
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityCollectionBase2`1.EntityFactoryToUse">
            <summary>
            获取和设置实体工厂
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityCollectionBase2`1.RemovedEntitiesTracker">
            <summary>
            移除的实体集合
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityCollectionBase2`1.YDTF#ORMSupportClasses#ICollectionMaintenance#SurpressListChangedEvents">
            <summary>
            是否支持集合修改事件
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityCollectionBase2`1.YDTF#ORMSupportClasses#IEntityCollection2#Capacity">
            <summary>
            获取或设置该内部数据结构在不调整大小的情况下能够容纳的元素总数。
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityCollectionBase2`1.YDTF#ORMSupportClasses#IEntityCollection2#DefaultView">
            <summary>
            获取默认视图
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityCollectionBase2`1.YDTF#ORMSupportClasses#IEntityCollection2#DirtyEntities">
            <summary>
            获取脏实体集合
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityCollectionBase2`1.YDTF#ORMSupportClasses#IEntityCollection2#Item(System.Int32)">
            <summary>
            获取或设置指定索引处的元素。
            </summary>
            <param name="index">要获得或设置的元素从零开始的索引。</param>
            <returns>指定索引处的元素。</returns>
        </member>
        <member name="F:YDTF.VO.VOCollection`1._isInit">
            <summary>
            是否初始化
            </summary>
        </member>
        <member name="M:YDTF.VO.VOCollection`1.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YDTF.VO.VOCollection`1.BeginInit">
            <summary>
            开始初始化
            </summary>
        </member>
        <member name="M:YDTF.VO.VOCollection`1.EndInit">
            <summary>
            结束初始化
            </summary>
        </member>
        <member name="M:YDTF.VO.VOCollection`1.OnInitComplete">
            <summary>
            初始化完成
            </summary>
        </member>
        <member name="M:YDTF.VO.VOCollection`1.#ctor(YDTF.ORMSupportClasses.IEntityFactory2)">
            <summary>
            构造函数
            </summary>
            <param name="entityFactoryToUse">实体工厂接口</param>
        </member>
        <member name="M:YDTF.VO.VOCollection`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>
            构造函数
            </summary>
            <param name="initialContents">添加的集合接口</param>
        </member>
        <member name="M:YDTF.VO.VOCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            构造函数
            </summary>
            <param name="initialContents">添加的集合接口</param>
        </member>
        <member name="M:YDTF.VO.VOCollection`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            构造函数
            </summary>
            <param name="info">要填充数据的</param>
            <param name="context">此序列化的目标</param>
        </member>
        <member name="M:YDTF.VO.VOCollection`1.ConvertToDataTable">
            <summary>
            VO集合转换成DataTable
            </summary>
            <returns>VO集合</returns>
        </member>
        <member name="P:YDTF.VO.VOCollection`1.IsInit">
            <summary>
            获取是否初始化完成
            </summary>
        </member>
        <member name="T:YDTF.VO.VOCollection">
            <summary>
            实体集合 用于删除实体保存的集合
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.EntityCollectionNonGeneric">
            <summary>
            实体集合非泛型
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCollectionNonGeneric.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCollectionNonGeneric.#ctor(YDTF.ORMSupportClasses.IEntityFactory2)">
            <summary>
            构造函数
            </summary>
            <param name="entityFactoryToUse">使用的实体工厂</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCollectionNonGeneric.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            构造函数
            </summary>
            <param name="info">要填充数据的</param>
            <param name="context">此序列化的目标</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCollectionNonGeneric.OnInitComplete">
            <summary>
            初始化完成
            </summary>
        </member>
        <member name="M:YDTF.VO.VOCollection.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YDTF.VO.VOCollection.#ctor(YDTF.ORMSupportClasses.IEntityFactory2)">
            <summary>
            构造函数
            </summary>
            <param name="entityFactoryToUse">实体工厂接口</param>
        </member>
        <member name="M:YDTF.VO.VOCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            构造函数
            </summary>
            <param name="info">要填充数据的</param>
            <param name="context">此序列化的目标</param>
        </member>
        <member name="M:YDTF.VO.VOCollection.ConvertToDataTable">
            <summary>
            VO集合转换成DataTable
            </summary>
            <returns>VO集合</returns>
        </member>
        <member name="T:YDTF.ORMSupportClasses.IFieldPersistenceInfo">
            <summary>
            字段保留信息接口
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IFieldPersistenceInfo.ActualDotNetType">
            <summary>
            真实数据库类型
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IFieldPersistenceInfo.IdentityValueSequenceName">
            <summary>
            获取值和名字是否一样
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IFieldPersistenceInfo.IsIdentity">
            <summary>
            获取是否是自增
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IFieldPersistenceInfo.SourceCatalogName">
            <summary>
            获取源名称
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IFieldPersistenceInfo.SourceColumnDbType">
            <summary>
            获取源列数据类型
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IFieldPersistenceInfo.SourceColumnIsNullable">
            <summary>
            获取源列是否为能为null
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IFieldPersistenceInfo.SourceColumnMaxLength">
            <summary>
            获取源列最大长度
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IFieldPersistenceInfo.SourceColumnName">
            <summary>
            获取源列名称
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IFieldPersistenceInfo.SourceColumnPrecision">
            <summary>
             获取源列精度
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IFieldPersistenceInfo.SourceColumnScale">
            <summary>
            获取源列小数位
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IFieldPersistenceInfo.SourceObjectName">
            <summary>
             获取源列对象名
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IFieldPersistenceInfo.SourceSchemaName">
            <summary>
            获取源列设计名
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IFieldPersistenceInfo.TypeConverterToUse">
            <summary>
            获取源列类型转换器
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.EntityView2`1">
            <summary>
            实体视图
            </summary>
            <typeparam name="TEntity">实体</typeparam>
        </member>
        <member name="T:YDTF.ORMSupportClasses.EntityViewBase`1">
            <summary>
            实体视图基类
            </summary>
            <typeparam name="TEntity">实体</typeparam>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityViewBase`1._allowEdit">
            <summary>
            允许修改
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityViewBase`1._allowNew">
            <summary>
            允许新增
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityViewBase`1._allowRemove">
            <summary>
            允许移除
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityViewBase`1._appliedFilter">
            <summary>
            刷选条件
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityViewBase`1._appliedSorter">
            <summary>
            排序条件
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityViewBase`1._bindingListViewSorts">
            <summary>
            绑定视图排序
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityViewBase`1._dataChangeAction">
            <summary>
            数据修改状态
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityViewBase`1._entityIndices">
            <summary>
            实体索引
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityViewBase`1._indexAddNewResult">
            <summary>
            新增结果
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityViewBase`1._propertyDescriptorCollectionCache">
            <summary>
            属性集合缓存
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityViewBase`1._raiseItemChangedEvents">
            <summary>
             获取一个值，该值指示 System.ComponentModel.IRaiseItemChangedEvents 对象是否引发 System.ComponentModel.IBindingList.ListChanged事件。
            </summary>        
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityViewBase`1._relatedCollection">
            <summary>
            关联集合
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityViewBase`1._suspendChangeEvents">
            <summary>
            延时修改事件
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.CreateDummyInstance">
            <summary>
            创建动态实体实例
            </summary>
            <returns>实体</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.GetSortProperty(YDTF.ORMSupportClasses.ISortExpression)">
            <summary>
            获取排序属性
            </summary>
            <param name="appliedSorter">排序表达式</param>
            <returns>属性</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1._relatedCollectionListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
            <summary>
            关联实体集合修改事件
            </summary>
            <param name="sender">对象</param>
            <param name="e">消息</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.AddNew">
            <summary>
            新增
            </summary>
            <returns>新增的实体</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.ApplyFilterOnEntity(System.Int32)">
            <summary>
            应用刷选的实体
            </summary>
            <param name="index">索引</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.ApplySort(System.ComponentModel.ListSortDescriptionCollection)">
            <summary>
            应用排序
            </summary>
            <param name="sorts">排序集合</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <summary>
            应用排序
            </summary>
            <param name="property">属性</param>
            <param name="direction">排序标志</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.BindEvents">
            <summary>
            绑定事件
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.Contains(`0)">
            <summary>
            确定某元素是否在。
            </summary>
            <param name="value">对于引用类型，该值可以为 null</param>
            <returns>找到 item，则为 true，否则为 false</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.CopyTo(System.Array,System.Int32)">
            <summary>
            将对象复制到数组中
            </summary>
            <param name="array">数组</param>
            <param name="index">中从零开始的索引，从此处开始复制</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.Dispose(System.Boolean)">
            <summary>
            释放由 System.ComponentModel.MarshalByValueComponent 占用的非托管资源，还可以另外再释放托管资源。
            </summary>
            <param name="disposing">为 true，则释放托管资源和非托管资源；为 false，则仅释放非托管资源。</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.Find(System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>
            查找
            </summary>
            <param name="property">属性</param>
            <param name="key">值</param>
            <returns>实体索引</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.GetEntityAtIndex(System.Int32)">
            <summary>
            通过实体索引获取实体
            </summary>
            <param name="index">索引</param>
            <returns>实体</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.GetEntityFieldPropertyDescriptors(YDTF.ORMSupportClasses.IEntityCore,System.Collections.Generic.List{System.ComponentModel.PropertyDescriptor}@,System.Collections.Generic.Dictionary{System.String,System.ComponentModel.PropertyDescriptor}@)">
            <summary>
            获取字段属性描述
            </summary>
            <param name="dummyInstance">实体</param>
            <param name="instanceProperties">属性集合</param>
            <param name="namesAdded">名称集合</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            获取对象属性
            </summary>
            <param name="listAccessors">属性数组</param>
            <returns>属性集合</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.GetListName(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            获取名称
            </summary>
            <param name="listAccessors">属性数组</param>
            <returns>名称</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.GetPropertyDescriptors(YDTF.ORMSupportClasses.IEntityCore,System.ComponentModel.PropertyDescriptor[])">
            <summary>
            获取属性描述
            </summary>
            <param name="dummyInstance">实体</param>
            <param name="listAccessors">属性数组</param>
            <returns>属性集合</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.HandleRelatedCollectionItemAdded(System.ComponentModel.ListChangedEventArgs,System.Boolean@,System.Int32@,System.ComponentModel.ListChangedType@,System.Boolean@,System.Boolean@,System.Boolean@)">
            <summary>
            集合新增项
            </summary>
            <param name="eventArguments">消息</param>
            <param name="filterResult">刷选结果</param>
            <param name="indexForEvent">消息索引</param>
            <param name="changetypeForEvent">修改消息</param>
            <param name="fireEvent">结果消息</param>
            <param name="isNewIndex">新索引</param>
            <param name="isInsert">是否插入</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.HandleRelatedCollectionItemChanged(System.ComponentModel.ListChangedEventArgs,System.Boolean@,System.Int32@,System.ComponentModel.ListChangedType@,System.Boolean@)">
            <summary>
            集合修改项
            </summary>
            <param name="eventArguments">消息</param>
            <param name="filterResult">刷选结果</param>
            <param name="indexForEvent">消息索引</param>
            <param name="changetypeForEvent">修改消息</param>
            <param name="fireEvent">结果消息</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.HandleRelatedCollectionItemDeleted(System.ComponentModel.ListChangedEventArgs)">
            <summary>
            集合删除项
            </summary>
            <param name="eventArguments">消息</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.IndexOf(`0)">
            <summary>
            搜索指定的对象，并返回整个集合中第一个匹配项的从零开始的索引。
            </summary>
            <param name="value">对于引用类型，该值可以为 null。</param>
            <returns>如果在整集合中找到 item 的第一个匹配项，则为该项的从零开始的索引；否则为-1。</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.InitClassCore(YDTF.ORMSupportClasses.CollectionCore{`0},YDTF.ORMSupportClasses.IPredicate,YDTF.ORMSupportClasses.ISortExpression,YDTF.ORMSupportClasses.PostCollectionChangeAction)">
            <summary>
            初始化核心
            </summary>
            <param name="relatedCollection">关联集合</param>
            <param name="filterToApply">刷选条件</param>
            <param name="sorterToApply">排序条件</param>
            <param name="dataChangeAction">修改数据状态 </param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.OnListChanged(System.Int32,System.ComponentModel.ListChangedType)">
            <summary>
            修改集合列表事件
            </summary>
            <param name="index">索引</param>
            <param name="typeOfChange">修改状态</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.Refresh">
            <summary>
            刷新
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.Remove(`0)">
            <summary>
            移除特定对象的第一个匹配项
            </summary>
            <param name="toRemove">移除的对象,对于引用类型，该值可以为 null</param>
            <returns>如果成功移除 item，则为 true 否则为 false</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.RemoveAt(System.Int32)">
            <summary>
             移除指定索引处的元素。
            </summary>
            <param name="index">要移除的元素的从零开始的索引。</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.RemoveSort">
            <summary>
            移除排序
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.SetFilter(YDTF.ORMSupportClasses.IPredicate)">
            <summary>
            设置刷选
            </summary>
            <param name="filter">刷选条件</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.SetSorter(YDTF.ORMSupportClasses.ISortExpression)">
            <summary>
            设置排序
            </summary>
            <param name="sorter">排序条件</param>
            <returns>true 成功 false 失败</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.SortIndices(System.Collections.Generic.List{System.Int32},YDTF.ORMSupportClasses.ISortExpression,System.Int32)">
            <summary>
            排序目录
            </summary>
            <param name="listToSort">排序集合</param>
            <param name="sorter">排序表达式</param>
            <param name="indexInSortExpression">索引</param>
            <returns>排序索引</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.System#Collections#Generic#IEnumerable{TEntity}#GetEnumerator">
            <summary>
            返回循环访问集合的枚举数。
            </summary>
            <returns>用于集合Enumerator。</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            将对象复制到数组中
            </summary>
            <param name="array">数组</param>
            <param name="index">中从零开始的索引，从此处开始复制</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            返回循环访问集合的枚举数。
            </summary>
            <returns>用于集合Enumerator。</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.System#Collections#IList#Add(System.Object)">
            <summary>
            新增对象
            </summary>
            <param name="value">对象</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.System#Collections#IList#Clear">
            <summary>
            清空集合
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.System#Collections#IList#Contains(System.Object)">
            <summary>
            确定某元素是否在。
            </summary>
            <param name="value">对于引用类型，该值可以为 null</param>
            <returns>找到 item，则为 true，否则为 false</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            搜索指定的对象，并返回整个集合中第一个匹配项的从零开始的索引。
            </summary>
            <param name="value">对于引用类型，该值可以为 null。</param>
            <returns>如果在整个集合 中找到 item 的第一个匹配项，则为该项的从零开始的索引；否则为-1。</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            将元素插入指定索引处。
            </summary>
            <param name="index">从零开始的索引，应在该位置插入 item。</param>
            <param name="value">要插入的对象。对于引用类型，该值不可以为 null。</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.System#Collections#IList#Remove(System.Object)">
            <summary>
            移除特定对象的第一个匹配项
            </summary>
            <param name="value">移除的对象,对于引用类型，该值不可以为 null</param>
            <returns>如果成功移除 item，则为 true 否则为 false</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
             移除指定索引处的元素。
            </summary>
            <param name="index">要移除的元素的从零开始的索引。</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
            <summary>
            新增索引
            </summary>
            <param name="property">属性</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.System#ComponentModel#IBindingList#AddNew">
            <summary>
            新增 
            </summary>
            <returns>实体对象</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <summary>
            应用排序
            </summary>
            <param name="property">属性</param>
            <param name="direction">排序标志</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>
            查找
            </summary>
            <param name="property">属性</param>
            <param name="key">值</param>
            <returns>实体索引</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
            <summary>
            移除索引
            </summary>
            <param name="property">属性</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.System#ComponentModel#IBindingList#RemoveSort">
            <summary>
            移除排序
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.System#ComponentModel#IBindingListView#ApplySort(System.ComponentModel.ListSortDescriptionCollection)">
            <summary>
            应用排序
            </summary>
            <param name="sorts">排序集合</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.System#ComponentModel#IBindingListView#RemoveFilter">
            <summary>
            移除刷选
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewBase`1.UpdateIndices(System.Int32,YDTF.ORMSupportClasses.EntityViewBase{`0}.ListAction,System.Int32)">
            <summary>
            更新目录
            </summary>
            <param name="index">索引</param>
            <param name="action">标志</param>
            <param name="newItemInEntityIndicesIndex">更新的索引</param>
        </member>
        <member name="E:YDTF.ORMSupportClasses.EntityViewBase`1.ListChanged">
            <summary>
            集合修改通知事件
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityViewBase`1.AllowEdit">
            <summary>
            获取或设置是否允许修改
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityViewBase`1.AllowNew">
            <summary>
            获取或设置是否允许新增
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityViewBase`1.AllowRemove">
            <summary>
            获取或设置是否允许移除
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityViewBase`1.Count">
            <summary>
            获取集合中实际包含的元素数
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityViewBase`1.DataChangeAction">
            <summary>
            获取或设置数据修改状态
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityViewBase`1.EntityIndices">
            <summary>
            获取实体索引
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityViewBase`1.Filter">
            <summary>
            获取或设置刷选
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityViewBase`1.IsSorted">
            <summary>
            获取或设置是否有排序
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityViewBase`1.Item(System.Int32)">
            <summary>
            获取或设置指定索引处的元素。
            </summary>
            <param name="index">要获得或设置的元素从零开始的索引。</param>
            <returns>指定索引处的元素。</returns>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityViewBase`1.RaisesItemChangedEvents">
            <summary>
             获取一个值，该值指示 System.ComponentModel.IRaiseItemChangedEvents 对象是否引发 System.ComponentModel.IBindingList.ListChanged事件。
            </summary>     
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityViewBase`1.RelatedCollectionInternal">
            <summary>
            获取关联实体集合
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityViewBase`1.SortDirection">
            <summary>
            获取或设置排序方向
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityViewBase`1.Sorter">
            <summary>
            获取或设置排序
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityViewBase`1.SortProperty">
            <summary>
            获取或设置排序属性
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityViewBase`1.System#Collections#ICollection#Count">
            <summary>
            获取集合中实际包含的元素数
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityViewBase`1.System#Collections#ICollection#IsSynchronized">
            <summary>
            获取一个值，该值指示是否同步对 System.Collections.ICollection 的访问（线程安全）。
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityViewBase`1.System#Collections#ICollection#SyncRoot">
            <summary>
            获取一个可用于同步对 System.Collections.ICollection 的访问的对象。
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityViewBase`1.System#Collections#IList#IsFixedSize">
            <summary>
            获取一个值，该值指示 System.Collections.IList 是否具有固定大小。
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityViewBase`1.System#Collections#IList#IsReadOnly">
            <summary>
            获取是否只读
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityViewBase`1.System#Collections#IList#Item(System.Int32)">
            <summary>
            获取或设置指定索引处的元素。
            </summary>
            <param name="index">要获得或设置的元素从零开始的索引。</param>
            <returns>指定索引处的元素。</returns>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityViewBase`1.System#ComponentModel#IBindingList#AllowEdit">
            <summary>
            获取或设置是否允许修改
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityViewBase`1.System#ComponentModel#IBindingList#AllowNew">
            <summary>
            获取或设置是否允许新增
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityViewBase`1.System#ComponentModel#IBindingList#AllowRemove">
            <summary>
            获取或设置是否允许删除
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityViewBase`1.System#ComponentModel#IBindingList#IsSorted">
            <summary>
            获取或设置是否允许排序
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityViewBase`1.System#ComponentModel#IBindingList#SortDirection">
            <summary>
            获取排序方向
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityViewBase`1.System#ComponentModel#IBindingList#SortProperty">
            <summary>
            获取排序属性
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityViewBase`1.System#ComponentModel#IBindingList#SupportsChangeNotification">
            <summary>
            获取当列表更改或列表中的项更改时是否引发 System.ComponentModel.IBindingList.ListChanged 事件。
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityViewBase`1.System#ComponentModel#IBindingList#SupportsSearching">
            <summary>
             获取列表是否支持使用 System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)方法进行搜索。
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityViewBase`1.System#ComponentModel#IBindingList#SupportsSorting">
            <summary>
             获取列表是否支持排序。
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityViewBase`1.System#ComponentModel#IBindingListView#Filter">
            <summary>
            获取或设置筛选器，以用于从数据源返回的项的集合中排除项。
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityViewBase`1.System#ComponentModel#IBindingListView#SortDescriptions">
            <summary>
             获取当前应用于数据源的排序说明的集合。
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityViewBase`1.System#ComponentModel#IBindingListView#SupportsAdvancedSorting">
            <summary>
            获取一个值，指示数据源是否支持高级排序。
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityViewBase`1.System#ComponentModel#IBindingListView#SupportsFiltering">
            <summary>
             获取一个值，该值指示数据源是否支持筛选。
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.EntityViewBase`1.ListAction">
            <summary>
            列表关联状态
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityViewBase`1.ListAction.Addition">
            <summary>
            新增
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityViewBase`1.ListAction.Deletion">
            <summary>
            删除
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityViewBase`1.ListAction.Insertion">
            <summary>
            插入
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.IEntityView2">
            <summary>
            实体视图接口
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityView2.Contains(YDTF.ORMSupportClasses.IEntity2)">
            <summary>
            确定某元素是否在。
            </summary>
            <param name="value">对于引用类型，该值可不以为 null</param>
            <returns>找到 item，则为 true，否则为 false</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityView2.IndexOf(YDTF.ORMSupportClasses.IEntity2)">
            <summary>
            搜索指定的对象，并返回整个集合中第一个匹配项的从零开始的索引。
            </summary>
            <param name="value">对于引用类型，该值不可以为 null。</param>
            <returns>如果在整集合中找到 item 的第一个匹配项，则为该项的从零开始的索引；否则为-1。</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityView2.ToEntityCollection">
            <summary>
            创建实体集合
            </summary>
            <returns>实体集合</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityView2.ToEntityCollection(System.Int32)">
            <summary>
            创建实体集合
            </summary>
            <param name="startIndex">开始索引</param>
            <returns>实体集合</returns>
        </member>
        <member name="E:YDTF.ORMSupportClasses.IEntityView2.ListChanged">
            <summary>
            集合修改通知事件
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityView2.AllowEdit">
            <summary>
            获取或设置是否允许修改
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityView2.AllowNew">
            <summary>
            获取或设置是否允许新增
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityView2.AllowRemove">
            <summary>
            获取或设置是否允许移除
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityView2.Count">
            <summary>
            获取集合中实际包含的元素数
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityView2.DataChangeAction">
            <summary>
            获取或设置数据修改状态
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityView2.Filter">
            <summary>
            获取或设置刷选
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityView2.Item(System.Int32)">
            <summary>
            获取或设置指定索引处的元素。
            </summary>
            <param name="index">要获得或设置的元素从零开始的索引。</param>
            <returns>指定索引处的元素。</returns>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityView2.RelatedCollection">
            <summary>
            获取关联的实体集合
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityView2.Sorter">
            <summary>
            获取或设置排序
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityView2`1.#ctor(YDTF.ORMSupportClasses.CollectionCore{`0})">
            <summary>
            构造函数
            </summary>
            <param name="relatedCollection">关联集合</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityView2`1.#ctor(YDTF.ORMSupportClasses.CollectionCore{`0},YDTF.ORMSupportClasses.IPredicate)">
            <summary>
            构造函数
            </summary>
            <param name="relatedCollection">关联集合</param>
            <param name="filter">刷选条件</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityView2`1.#ctor(YDTF.ORMSupportClasses.CollectionCore{`0},YDTF.ORMSupportClasses.ISortExpression)">
            <summary>
            构造函数
            </summary>
            <param name="relatedCollection">关联集合</param>
            <param name="sorter">排序条件</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityView2`1.#ctor(YDTF.ORMSupportClasses.CollectionCore{`0},System.Predicate{`0})">
            <summary>
            构造函数
            </summary>
            <param name="relatedCollection">关联集合</param>
            <param name="filter">刷选条件</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityView2`1.#ctor(YDTF.ORMSupportClasses.CollectionCore{`0},System.Predicate{`0},YDTF.ORMSupportClasses.ISortExpression)">
            <summary>
            构造函数
            </summary>
            <param name="relatedCollection">关联集合</param>
            <param name="filter">刷选条件</param>
            <param name="sorter">排序条件</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityView2`1.#ctor(YDTF.ORMSupportClasses.CollectionCore{`0},YDTF.ORMSupportClasses.IPredicate,YDTF.ORMSupportClasses.ISortExpression)">
            <summary>
            构造函数
            </summary>
            <param name="relatedCollection">关联集合</param>
            <param name="filter">刷选条件</param>
            <param name="sorter">排序条件</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityView2`1.#ctor(YDTF.ORMSupportClasses.CollectionCore{`0},YDTF.ORMSupportClasses.IPredicate,YDTF.ORMSupportClasses.ISortExpression,YDTF.ORMSupportClasses.PostCollectionChangeAction)">
            <summary>
            构造函数
            </summary>
            <param name="relatedCollection">关联集合</param>
            <param name="filter">刷选条件</param>
            <param name="sorter">排序条件</param>
            <param name="dataChangeAction">数据修改状态</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityView2`1.#ctor(YDTF.ORMSupportClasses.CollectionCore{`0},System.Predicate{`0},YDTF.ORMSupportClasses.ISortExpression,YDTF.ORMSupportClasses.PostCollectionChangeAction)">
            <summary>
            构造函数
            </summary>
            <param name="relatedCollection">关联集合</param>
            <param name="filter">刷选条件</param>
            <param name="sorter">排序条件</param>
            <param name="dataChangeAction">数据修改状态</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityView2`1.CreateDummyInstance">
            <summary>
            创建动态实体实例
            </summary>
            <returns>实体</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityView2`1.GetSortProperty(YDTF.ORMSupportClasses.ISortExpression)">
            <summary>
            获取排序属性
            </summary>
            <param name="appliedSorter">排序表达式</param>
            <returns>属性</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityView2`1.YDTF#ORMSupportClasses#IEntityView2#Contains(YDTF.ORMSupportClasses.IEntity2)">
            <summary>
            确定某元素是否在。
            </summary>
            <param name="value">对于引用类型，该值可不以为 null</param>
            <returns>找到 item，则为 true，否则为 false</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityView2`1.YDTF#ORMSupportClasses#IEntityView2#IndexOf(YDTF.ORMSupportClasses.IEntity2)">
            <summary>
            搜索指定的对象，并返回整个集合中第一个匹配项的从零开始的索引。
            </summary>
            <param name="value">对于引用类型，该值不可以为 null。</param>
            <returns>如果在整集合中找到 item 的第一个匹配项，则为该项的从零开始的索引；否则为-1。</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityView2`1.YDTF#ORMSupportClasses#IEntityView2#ToEntityCollection">
            <summary>
            创建实体集合
            </summary>
            <returns>实体集合</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityView2`1.YDTF#ORMSupportClasses#IEntityView2#ToEntityCollection(System.Int32)">
            <summary>
            创建实体集合
            </summary>
            <param name="startIndex">开始索引</param>
            <returns>实体集合</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityView2`1.ToEntityCollection">
            <summary>
            创建实体集合
            </summary>
            <returns>实体集合</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityView2`1.ToEntityCollection(System.Int32)">
            <summary>
            创建实体集合
            </summary>
            <param name="startIndex">开始索引</param>
            <returns>实体集合</returns>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityView2`1.RelatedCollection">
            <summary>
            获取关联的实体集合
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityView2`1.YDTF#ORMSupportClasses#IEntityView2#Item(System.Int32)">
            <summary>
            获取或设置指定索引处的元素。
            </summary>
            <param name="index">要获得或设置的元素从零开始的索引。</param>
            <returns>指定索引处的元素。</returns>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityView2`1.YDTF#ORMSupportClasses#IEntityView2#RelatedCollection">
            <summary>
            获取关联的实体集合
            </summary>
        </member>
        <member name="P:ComponentAce.Compression.Libs.zlib.ZOutputStream.TotalIn">
            <summary> Returns the total number of bytes input so far.</summary>
        </member>
        <member name="P:ComponentAce.Compression.Libs.zlib.ZOutputStream.TotalOut">
            <summary> Returns the total number of bytes output so far.</summary>
        </member>
        <member name="T:YDTF.VO.VODictionary">
            <summary>
            VO集合字典
            </summary>
        </member>
        <member name="M:YDTF.VO.VODictionary.GetVOCollection``1">
            <summary>
            获取对应的VO类型
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:YDTF.ORMSupportClasses.SortExpression">
            <summary>
            排序表达式类
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.ISortExpression">
            <summary>
            排序元素接口
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ISortExpression.Add(YDTF.ORMSupportClasses.ISortClause)">
            <summary>
            新增
            </summary>
            <param name="sortClauseToAdd">排序接口</param>
            <returns>新元素所插入到的位置，或为 -1 以指示未将该项插入到集合中。</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ISortExpression.Insert(System.Int32,YDTF.ORMSupportClasses.ISortClause)">
            <summary>
            在集合中的指定索引处插入项。
            </summary>
            <param name="index">从零开始的索引，应在该位置插入 value。</param>
            <param name="sortClauseToAdd">要插入到集合中的对象。</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ISortExpression.Remove(YDTF.ORMSupportClasses.ISortClause)">
            <summary>
            从集合中移除特定对象的第一个匹配项。
            </summary>
            <param name="sortClauseToRemove">要从集合中移除的对象。</param>
        </member>
        <member name="P:YDTF.ORMSupportClasses.ISortExpression.Count">
            <summary>
            获取集合中包含的元素数。
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.ISortExpression.Item(System.Int32)">
            <summary>
            获取或设置指定索引处的元素。
            </summary>
            <param name="index">要获得或设置的元素从零开始的索引。</param>
            <returns>指定索引处的元素。</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.SortExpression.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.SortExpression.#ctor(YDTF.ORMSupportClasses.ISortClause)">
            <summary>
            构造函数
            </summary>
            <param name="sortClauseToAdd">排序接口</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.SortExpression.Add(YDTF.ORMSupportClasses.ISortClause)">
            <summary>
            新增
            </summary>
            <param name="sortClauseToAdd">排序接口</param>
            <returns>新元素所插入到的位置，或为 -1 以指示未将该项插入到集合中。</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.SortExpression.Insert(System.Int32,YDTF.ORMSupportClasses.ISortClause)">
            <summary>
            在集合中的指定索引处插入项。
            </summary>
            <param name="index">从零开始的索引，应在该位置插入 value。</param>
            <param name="sortClauseToAdd">要插入到集合中的对象。</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.SortExpression.Remove(YDTF.ORMSupportClasses.ISortClause)">
            <summary>
            从集合中移除特定对象的第一个匹配项。
            </summary>
            <param name="sortClauseToRemove">要从集合中移除的对象。</param>
        </member>
        <member name="P:YDTF.ORMSupportClasses.SortExpression.Item(System.Int32)">
            <summary>
            获取或设置指定索引处的元素。
            </summary>
            <param name="index">要获得或设置的元素从零开始的索引。</param>
            <returns>指定索引处的元素。</returns>
        </member>
        <member name="T:YDTF.ORMSupportClasses.RuntimeLibraryVersion">
            <summary>
            运行库版本
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.RuntimeLibraryVersion.Version">
            <summary>
            版本
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.RuntimeLibraryVersion.Build">
            <summary>
            部署信息
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.RuntimeLibraryVersion.#cctor">
            <summary>
            静态构造函数
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.IExpressionFieldElement">
            <summary>
            表达式字段元素接口
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.IExpressionElement">
            <summary>
            表达式元素接口
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IExpressionElement.Contents">
            <summary>
            获取或设置元素内容
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IExpressionElement.Type">
            <summary>
            获取或设置表达式元素类型
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IExpressionFieldElement.PersistenceInfo">
            <summary>
            获取或设置保留信息
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.AggregateFunction">
            <summary>
            聚合标志
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.AggregateFunction.None">
            <summary>
            无
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.AggregateFunction.Count">
            <summary>
            数量
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.AggregateFunction.CountDistinct">
            <summary>
            去除重复的数量
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.AggregateFunction.Avg">
            <summary>
            平均数
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.AggregateFunction.AvgDistinct">
            <summary>
            去除重复的平均数
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.AggregateFunction.Max">
            <summary>
            最大
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.AggregateFunction.Min">
            <summary>
            最小
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.AggregateFunction.Sum">
            <summary>
            汇总
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.AggregateFunction.SumDistinct">
            <summary>
            去除重复的汇总
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.EntityPropertyDescriptor">
            <summary>
            实体属性描述
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityPropertyDescriptor._descriptor">
            <summary>
            描述
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityPropertyDescriptor._field">
            <summary>
            字段
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityPropertyDescriptor._isReadOnly">
            <summary>
            是否只读
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityPropertyDescriptor._typeOfBoundObject">
            <summary>
            类型的范围对象
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityPropertyDescriptor.#ctor(YDTF.ORMSupportClasses.IEntityFieldCore,System.Type,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="field">字段</param>
            <param name="typeOfBoundObject">类型的范围对象</param>
            <param name="isReadOnly">是否只读</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
            <summary>
            添加值修改
            </summary>
            <param name="component">对象</param>
            <param name="handler">事件消息</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityPropertyDescriptor.CanResetValue(System.Object)">
            <summary>
            是否能重置值
            </summary>
            <param name="component">对象</param>
            <returns>true 能 false 不能</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityPropertyDescriptor.Equals(System.Object)">
            <summary>
            确定指定的 System.Object 是否等于当前的 System.Object。
            </summary>
            <param name="obj">与当前的 System.Object 进行比较的 System.Object。</param>
            <returns>如果指定的 System.Object 等于当前的 System.Object，则为 true；否则为 false。</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
            <summary>
            获取子属性
            </summary>
            <param name="instance">对象实例</param>
            <param name="filter">特性刷选数组</param>
            <returns>属性集合</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityPropertyDescriptor.GetEditor(System.Type)">
            <summary>
            获取指定类型的编辑器。
            </summary>
            <param name="editorBaseType">编辑器的基类型，用于区分属性所支持的多个编辑器。</param>
            <returns>请求的编辑器类型的实例，或者，如果未能找到编辑器，则为 null。</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityPropertyDescriptor.GetHashCode">
            <summary>
            用作特定类型的哈希函数。
            </summary>
            <returns>当前 System.Object 的哈希代码。</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityPropertyDescriptor.GetValue(System.Object)">
            <summary>
            获取值
            </summary>
            <param name="component">对象</param>
            <returns>值</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
            <summary>
            移除值修改
            </summary>
            <param name="component">对象</param>
            <param name="handler">事件消息</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityPropertyDescriptor.ResetValue(System.Object)">
            <summary>
            重置值
            </summary>
            <param name="component">对象</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityPropertyDescriptor.SetValue(System.Object,System.Object)">
            <summary>
            设置值
            </summary>
            <param name="component">对象</param>
            <param name="value">值</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityPropertyDescriptor.ShouldSerializeValue(System.Object)">
            <summary>
            当在派生类中被重写时，确定一个值，该值指示是否需要永久保存此属性的值。
            </summary>
            <param name="component">具有要检查其持久性的属性的组件。</param>
            <returns>如果属性应该被永久保存，则为 true；否则为 false。</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityPropertyDescriptor.ToString">
            <summary>
            返回表示当前 System.Object 的 System.String。
            </summary>
            <returns> System.String，表示当前的 System.Object。</returns>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityPropertyDescriptor.Attributes">
            <summary>
            特性集合
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityPropertyDescriptor.Category">
            <summary>
            获取该成员所属的类别的名称，如 System.ComponentModel.CategoryAttribute 中所指定的。
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityPropertyDescriptor.ComponentType">
            <summary>
            获取组件的类型
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityPropertyDescriptor.Converter">
            <summary>
            获取转换器
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityPropertyDescriptor.Description">
            <summary>
            获取成员的说明，如 System.ComponentModel.DescriptionAttribute 中所指定的。
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityPropertyDescriptor.DesignTimeOnly">
            <summary>
            获取是否只能在设计时设置该成员，如 System.ComponentModel.DesignOnlyAttribute 中所指定的。
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityPropertyDescriptor.DisplayName">
            <summary>
             获取可以显示在窗口（如“属性”窗口）中的名称。
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityPropertyDescriptor.Field">
            <summary>
            获取或设置字段
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityPropertyDescriptor.IsBrowsable">
            <summary>
            获取一个指示该成员是否可浏览的值，如 System.ComponentModel.BrowsableAttribute 中所指定的。
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityPropertyDescriptor.IsLocalizable">
            <summary>
            获取指示是否应该本地化该属性的值，如 System.ComponentModel.LocalizableAttribute 中所指定的值。
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityPropertyDescriptor.IsReadOnly">
            <summary>
            获取是否只读
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityPropertyDescriptor.Name">
            <summary>
            获取属性名称
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityPropertyDescriptor.PropertyType">
            <summary>
            当在派生类中被重写时，获取该属性的类型。
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityPropertyDescriptor.SupportsChangeEvents">
            <summary>
            获取一个值，该值指示此属性的值更改通知是否源自属性说明符的外部。
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.EntityFactoryCache2">
            <summary>
            实体工厂缓存
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFactoryCache2.GetEntityFactory(YDTF.ORMSupportClasses.EntityBase2)">
            <summary>
            根据实体获取实体工厂接口
            </summary>
            <param name="entity">实体</param>
            <returns>实体工厂接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFactoryCache2.GetEntityFactory(YDTF.ORMSupportClasses.IEntityFactory2)">
            <summary>
            根据实体工厂类型获取实体工厂
            </summary>
            <param name="factory">实体工厂</param>
            <returns>实体工厂接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFactoryCache2.GetEntityFactory(System.Type)">
            <summary>
            根据工厂类型获取实体工厂
            </summary>
            <param name="factoryType">实体工厂类型</param>
            <returns>实体工厂接口</returns>
        </member>
        <member name="T:YDTF.UserWorkEventHandler`1">
            <summary>
            工作队列委托
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:YDTF.WorkQueue`1">
            <summary>
            工作队列
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:YDTF.WorkQueue`1.IsWorking">
            <summary>
            表明处理线程是否正在工作
            </summary>
        </member>
        <member name="F:YDTF.WorkQueue`1.lockIsWorking">
            <summary>
            对IsWorking的同步对象
            </summary>
        </member>
        <member name="F:YDTF.WorkQueue`1.queue">
            <summary>
            实际的队列
            </summary>
        </member>
        <member name="F:YDTF.WorkQueue`1.lockObj">
            <summary>
            队列同步对象
            </summary>
        </member>
        <member name="M:YDTF.WorkQueue`1.#ctor(System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="n">默认长度</param>
        </member>
        <member name="M:YDTF.WorkQueue`1.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YDTF.WorkQueue`1.IsEmpty">
            <summary>
            谨慎使用此函数，
            只保证此瞬间，队列值为空
            </summary>
            <returns></returns>
        </member>
        <member name="F:YDTF.WorkQueue`1.isOneThread">
            <summary>
            
            </summary>
        </member>
        <member name="M:YDTF.WorkQueue`1.EnqueueItem(`0)">
            <summary>
            向工作队列添加对象，
            对象添加以后，如果已经绑定工作的事件
            会触发事件处理程序，对item对象进行处理
            </summary>
            <param name="item">添加到队列的对象</param>
        </member>
        <member name="M:YDTF.WorkQueue`1.doUserWork(System.Object)">
            <summary>
            处理队列中对象的函数
            </summary>
            <param name="o"></param>
        </member>
        <member name="E:YDTF.WorkQueue`1.UserWork">
            <summary>
            绑定用户需要对队列中的item对象
            施加的操作的事件
            </summary>
        </member>
        <member name="P:YDTF.WorkQueue`1.WorkSequential">
            <summary>
            队列处理是否需要单线程顺序执行
            ture表示单线程处理队列的T对象
            默认为false，表明按照顺序出队，但是多线程处理item
            *****注意不要频繁改变此项****
            </summary>
        </member>
        <member name="T:YDTF.WorkQueue`1.EnqueueEventArgs">
            <summary>
            UserWork事件的参数，包含item对象
            </summary>
        </member>
        <member name="M:YDTF.WorkQueue`1.EnqueueEventArgs.#ctor(System.Object)">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="P:YDTF.WorkQueue`1.EnqueueEventArgs.Item">
            <summary>
            
            </summary>
        </member>
        <member name="T:YDTF.VO.CollectionExtend">
            <summary>
            集合扩展类
            </summary>
        </member>
        <member name="M:YDTF.VO.CollectionExtend.ConvertToDataTable(YDTF.ORMSupportClasses.IEntityCollection2)">
            <summary>
            VO集合转换成DataTable
            </summary>
            <param name="voCollection">VO集合</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:YDTF.VO.CollectionExtend.ConvertToVOCollection``1(System.Data.DataTable)">
            <summary>
            DataTable转换成VO集合
            </summary>
            <typeparam name="TEntity">VO类型</typeparam>
            <param name="dataTable">DataTable</param>
            <returns>VO集合</returns>
        </member>
        <member name="T:YDTF.ORMSupportClasses.IEntity2">
            <summary>
            实体接口
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.IEntityCore">
            <summary>
            实体核心接口
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityCore.AcceptChanges">
            <summary>
            提交修改
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityCore.DiscardSavedFields">
            <summary>
            丢弃保存字段集合
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityCore.FlagMeAsChanged">
            <summary>
            标记集合修改
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityCore.GetCurrentFieldValue(System.Int32)">
            <summary>
            获取当前值
            </summary>
            <param name="fieldIndex">字段索引</param>
            <returns>值</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityCore.GetEntityFactory">
            <summary>
            获取实体工厂
            </summary>
            <returns>实体工厂接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityCore.GetFieldByName(System.String)">
            <summary>
            获取字段通过字段名
            </summary>
            <param name="fieldName">字段名</param>
            <returns>字段</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityCore.RejectChanges">
            <summary>
            重置修改
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityCore.RollbackFields(System.String)">
            <summary>
            回退字段
            </summary>
            <param name="name">回退的字段名</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityCore.SaveFields(System.String)">
            <summary>
            保存字段
            </summary>
            <param name="name">保存的字段名</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityCore.SetEntityError(System.String)">
            <summary>
            设置实体错误
            </summary>
            <param name="errorMessage">错误信息</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityCore.SetEntityFieldError(System.String,System.String)">
            <summary>
            设置实体字段错误
            </summary>
            <param name="propertyName">属性名</param>
            <param name="errorMessage">错误消息</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityCore.SetEntityFieldError(System.Int32,System.String)">
            <summary>
            设置实体字段错误
            </summary>
            <param name="fieldIndex">字段索引</param>
            <param name="errorMessage">错误消息</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityCore.ClearEntityFieldError(System.Int32)">
            <summary>
            清除实体字段错误
            </summary>
            <param name="fieldIndex">字段索引</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityCore.ClearEntityFieldError(System.String)">
            <summary>
            清除实体字段错误
            </summary>
            <param name="propertyName">属性名</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityCore.SetNewFieldValue(System.Int32,System.Object)">
            <summary>
            设置新字段的值
            </summary>
            <param name="fieldIndex">字段索引</param>
            <param name="value">值</param>
            <returns>true 成功 false 失败</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityCore.SetNewFieldValue(System.String,System.Object)">
            <summary>
            设置新字段的值
            </summary>
            <param name="fieldName">字段名称</param>
            <param name="value">值</param>
            <returns>true 成功 false 失败</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityCore.ValidateEntity">
            <summary>
            验证实体
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityCore.FlagAllFieldsAsChanged">
            <summary>
            标记所有字段提交修改
            </summary>
        </member>
        <member name="E:YDTF.ORMSupportClasses.IEntityCore.EntityContentsChanged">
            <summary>
            实体内容改变事件
            </summary>
        </member>
        <member name="E:YDTF.ORMSupportClasses.IEntityCore.Initializing">
            <summary>
            初始化前事件
            </summary>
        </member>
        <member name="E:YDTF.ORMSupportClasses.IEntityCore.Initialized">
            <summary>
            初始化完成事件
            </summary>
        </member>
        <member name="E:YDTF.ORMSupportClasses.IEntityCore.PropertyChanged">
            <summary>
            属性修改事件
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityCore.Fields">
            <summary>
            获取字段集合
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityCore.IsDirty">
            <summary>
            获取或设置是否是脏数据
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityCore.IsNew">
            <summary>
            获取和设置是否新增
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityCore.YDTFProEntityName">
            <summary>
            实体名称
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityCore.ObjectID">
            <summary>
            获取或设置实体的Guid
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityCore.PrimaryKeyFields">
            <summary>
            获取主键字段
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityCore.TypeDefaultValueProviderToUse">
            <summary>
            获取或设置类型默认值提供接口
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityCore.ValidatorChange">
            <summary>
            获取或设置验证和修改接口
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntity2.GetEntityFactory">
            <summary>
            获取实体工厂
            </summary>
            <returns>实体工厂接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntity2.GetEntityDbIndeies">
            <summary>
            获取实体数据库对应索引
            </summary>
            <returns>实体数据库索引集合</returns>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntity2.Fields">
            <summary>
            获取或设置字段集合
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntity2.PrimaryKeyFields">
            <summary>
            获取主键字段集合
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.FieldCompareValuePredicate">
            <summary>
            字段比较值断言类
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldCompareValuePredicate._caseSensitiveCollation">
            <summary>
            是否忽略大小写
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldCompareValuePredicate._comparisonOperator">
            <summary>
            比较操作符
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldCompareValuePredicate._field">
            <summary>
            实体字段
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldCompareValuePredicate._persistenceInfo">
            <summary>
            字段保留信息
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldCompareValuePredicate._value">
            <summary>
            值
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldCompareValuePredicate.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldCompareValuePredicate.#ctor(YDTF.ORMSupportClasses.IEntityFieldCore,YDTF.ORMSupportClasses.IFieldPersistenceInfo,YDTF.ORMSupportClasses.ComparisonOperator)">
            <summary>
            构造函数
            </summary>
            <param name="field">字段</param>
            <param name="persistenceInfo">字段保留信息</param>
            <param name="comparisonOperator">比较操作符</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldCompareValuePredicate.#ctor(YDTF.ORMSupportClasses.IEntityFieldCore,YDTF.ORMSupportClasses.IFieldPersistenceInfo,YDTF.ORMSupportClasses.ComparisonOperator,System.Object)">
            <summary>
            构造函数
            </summary>
            <param name="field">字段</param>
            <param name="persistenceInfo">字段保留信息</param>
            <param name="comparisonOperator">比较操作符</param>
            <param name="value">值</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldCompareValuePredicate.#ctor(YDTF.ORMSupportClasses.IEntityFieldCore,YDTF.ORMSupportClasses.IFieldPersistenceInfo,YDTF.ORMSupportClasses.ComparisonOperator,System.Object,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="field">字段</param>
            <param name="persistenceInfo">字段保留信息</param>
            <param name="comparisonOperator">比较操作符</param>
            <param name="value">值</param>
            <param name="negate">是否无效</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldCompareValuePredicate.#ctor(YDTF.ORMSupportClasses.IEntityFieldCore,YDTF.ORMSupportClasses.IFieldPersistenceInfo,YDTF.ORMSupportClasses.ComparisonOperator,System.Object,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="field">字段</param>
            <param name="persistenceInfo">字段保留信息</param>
            <param name="comparisonOperator">比较操作符</param>
            <param name="value">值</param>
            <param name="objectAlias">对象别名</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldCompareValuePredicate.#ctor(YDTF.ORMSupportClasses.IEntityFieldCore,YDTF.ORMSupportClasses.IFieldPersistenceInfo,YDTF.ORMSupportClasses.ComparisonOperator,System.Object,System.String,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="field">字段</param>
            <param name="persistenceInfo">字段保留信息</param>
            <param name="comparisonOperator">比较操作符</param>
            <param name="value">值</param>
            <param name="objectAlias">对象别名</param>
            <param name="negate">是否无效</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldCompareValuePredicate.DetermineValueToUse(YDTF.ORMSupportClasses.IEntityFieldCore)">
            <summary>
            判断值
            </summary>
            <param name="field">字段</param>
            <returns>值</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldCompareValuePredicate.GetFrameworkElementsInPredicate">
            <summary>
            获取框架元素
            </summary>
            <returns>列表集合</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldCompareValuePredicate.InitClass(YDTF.ORMSupportClasses.IEntityFieldCore,YDTF.ORMSupportClasses.IFieldPersistenceInfo,YDTF.ORMSupportClasses.ComparisonOperator,System.Object,System.Boolean,System.Boolean,System.String)">
            <summary>
            初始化类
            </summary>
            <param name="field">字段</param>
            <param name="persistenceInfo">字段保留信息</param>
            <param name="comparisonOperator">比较操作符</param>
            <param name="value">值</param>
            <param name="negate">是否无效</param>
            <param name="selfServicing">自己维护</param>
            <param name="objectAlias">对象别名</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldCompareValuePredicate.InterpretPredicate(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            解析刷选条件  比如解析> == != 这样的
            </summary>
            <param name="entity">实体</param>
            <returns>true 成功 false 失败</returns>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldCompareValuePredicate.CaseSensitiveCollation">
            <summary>
            获取或设置是否忽略大小写
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldCompareValuePredicate.FieldCore">
            <summary>
            获取实体字段
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldCompareValuePredicate.Operator">
            <summary>
            获取或设置比较操作符
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldCompareValuePredicate.PersistenceInfo">
            <summary>
            获取或设置保留信息
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldCompareValuePredicate.Value">
            <summary>
            获取或设置比较的值
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.Expression">
            <summary>
            表达式
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.IExpression">
            <summary>
            表达式接口
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IExpression.LeftOperand">
            <summary>
            获取左操作数
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IExpression.Operator">
            <summary>
            执行标记
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IExpression.RightOperand">
            <summary>
            获取右操作数
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.IExpressionInterpret">
            <summary>
            表达式断言接口
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IExpressionInterpret.GetValue(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            获取值
            </summary>
            <param name="entity">实体</param>
            <returns>值</returns>
        </member>
        <member name="F:YDTF.ORMSupportClasses.Expression._leftOperand">
            <summary>
            左操作数
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.Expression._leftOperandRaw">
            <summary>
            左操作数标记
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.Expression._operator">
            <summary>
            执行标记
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.Expression._rightOperand">
            <summary>
            右操作数
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.Expression._rightOperandRaw">
            <summary>
            右操作数标记
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Expression.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Expression.#ctor(YDTF.ORMSupportClasses.IEntityFieldCore)">
            <summary>
            构造函数
            </summary>
            <param name="field">字段</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Expression.#ctor(YDTF.ORMSupportClasses.IEntityFieldCore,YDTF.ORMSupportClasses.ExOp,YDTF.ORMSupportClasses.IEntityFieldCore)">
            <summary>
            构造函数
            </summary>
            <param name="leftOperand">左操作字段</param>
            <param name="operatorToUse">执行标记</param>
            <param name="rightOperand">右操作字段</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Expression.#ctor(YDTF.ORMSupportClasses.IEntityFieldCore,YDTF.ORMSupportClasses.ExOp,YDTF.ORMSupportClasses.IExpression)">
            <summary>
            构造函数
            </summary>
            <param name="leftOperand">左操作字段</param>
            <param name="operatorToUse">执行标记</param>
            <param name="rightOperand">右操作表达式</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Expression.#ctor(YDTF.ORMSupportClasses.IEntityFieldCore,YDTF.ORMSupportClasses.ExOp,System.Object)">
            <summary>
            构造函数
            </summary>
            <param name="leftOperand">左操作字段</param>
            <param name="operatorToUse">执行标记</param>
            <param name="rightOperand">右操作值</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Expression.#ctor(YDTF.ORMSupportClasses.IExpression,YDTF.ORMSupportClasses.ExOp,YDTF.ORMSupportClasses.IEntityFieldCore)">
            <summary>
            构造函数
            </summary>
            <param name="leftOperand">左操作表达式</param>
            <param name="operatorToUse">执行标记</param>
            <param name="rightOperand">右操作字段</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Expression.#ctor(YDTF.ORMSupportClasses.IExpression,YDTF.ORMSupportClasses.ExOp,YDTF.ORMSupportClasses.IExpression)">
            <summary>
            构造函数
            </summary>
            <param name="leftOperand">左操作表达式</param>
            <param name="operatorToUse">执行标记</param>
            <param name="rightOperand">右操作表达式</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Expression.#ctor(YDTF.ORMSupportClasses.IExpression,YDTF.ORMSupportClasses.ExOp,System.Object)">
            <summary>
            构造函数
            </summary>
            <param name="leftOperand">左操作表达式</param>
            <param name="operatorToUse">执行标记</param>
            <param name="rightOperand">右操作值</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Expression.#ctor(System.Object,YDTF.ORMSupportClasses.ExOp,YDTF.ORMSupportClasses.IEntityFieldCore)">
            <summary>
            构造函数
            </summary>
            <param name="leftOperand">左操作值</param>
            <param name="operatorToUse">执行标记</param>
            <param name="rightOperand">右操作字段</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Expression.#ctor(System.Object,YDTF.ORMSupportClasses.ExOp,YDTF.ORMSupportClasses.IExpression)">
            <summary>
            构造函数
            </summary>
            <param name="leftOperand">左操作值</param>
            <param name="operatorToUse">执行标记</param>
            <param name="rightOperand">右操作表达式</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Expression.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            构造函数反序列化
            </summary>
            <param name="info">要填充数据的</param>
            <param name="context">此序列化的目标</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Expression.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
             使用将目标对象序列化所需的数据填充
            </summary>
            <param name="info">要填充数据的</param>
            <param name="context">此序列化的目标</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Expression.ConvertObjectOperandToExpressionElement(System.Object)">
            <summary>
            转换对象到操作表达式元素
            </summary>
            <param name="operand">对象值</param>
            <returns>表达式元素接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Expression.InitClass">
            <summary>
            初始化类
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Expression.op_Addition(YDTF.ORMSupportClasses.Expression,YDTF.ORMSupportClasses.Expression)">
            <summary>
            +操作
            </summary>
            <param name="leftOperand">左操作表达式</param>
            <param name="rightOperand">右操作表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Expression.op_Addition(YDTF.ORMSupportClasses.Expression,System.Object)">
            <summary>
             +操作
            </summary>
            <param name="leftOperand">左操作表达式</param>
            <param name="value">右操作值</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Expression.op_Addition(System.Object,YDTF.ORMSupportClasses.Expression)">
            <summary>
             +操作
            </summary>
            <param name="value">左操作值</param>
            <param name="rightOperand">右操作表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Expression.op_Division(YDTF.ORMSupportClasses.Expression,YDTF.ORMSupportClasses.Expression)">
            <summary>
            /操作
            </summary>
            <param name="leftOperand">左操作表达式</param>
            <param name="rightOperand">右操作表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Expression.op_Division(YDTF.ORMSupportClasses.Expression,System.Object)">
            <summary>
            /操作
            </summary>
            <param name="leftOperand">左操作表达式</param>
            <param name="value">右操作值</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Expression.op_Division(System.Object,YDTF.ORMSupportClasses.Expression)">
            <summary>
            /操作
            </summary>
            <param name="value">左操作值</param>
            <param name="rightOperand">右操作表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Expression.op_Multiply(YDTF.ORMSupportClasses.Expression,YDTF.ORMSupportClasses.Expression)">
            <summary>
            *操作
            </summary>
            <param name="leftOperand">左操作表达式</param>
            <param name="rightOperand">右操作表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Expression.op_Multiply(YDTF.ORMSupportClasses.Expression,System.Object)">
            <summary>
            *操作
            </summary>
            <param name="leftOperand">左操作表达式</param>
            <param name="value">右操作值</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Expression.op_Multiply(System.Object,YDTF.ORMSupportClasses.Expression)">
            <summary>
            *操作
            </summary>
            <param name="value">左操作值</param>
            <param name="rightOperand">右操作表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Expression.op_Subtraction(YDTF.ORMSupportClasses.Expression,YDTF.ORMSupportClasses.Expression)">
            <summary>
            -操作
            </summary>
            <param name="leftOperand">左操作表达式</param>
            <param name="rightOperand">右操作表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Expression.op_Subtraction(YDTF.ORMSupportClasses.Expression,System.Object)">
            <summary>
            -操作
            </summary>
            <param name="leftOperand">左操作表达式</param>
            <param name="value">右操作值</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Expression.op_Subtraction(System.Object,YDTF.ORMSupportClasses.Expression)">
            <summary>
            -操作
            </summary>
            <param name="value">左操作值</param>
            <param name="rightOperand">右操作表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Expression.OperandToValue(YDTF.ORMSupportClasses.IExpressionElement,YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            操作值
            </summary>
            <param name="operand">操作数</param>
            <param name="entity">实体</param>
            <returns>值</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Expression.PerformGetValue(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            执行获取值
            </summary>
            <param name="entity">实体</param>
            <returns>值</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.Expression.YDTF#ORMSupportClasses#IExpressionInterpret#GetValue(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            获取值
            </summary>
            <param name="entity">实体</param>
            <returns>值</returns>
        </member>
        <member name="P:YDTF.ORMSupportClasses.Expression.LeftOperand">
            <summary>
            左操作数
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.Expression.Operator">
            <summary>
            执行标记
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.Expression.RightOperand">
            <summary>
            右操作数
            </summary>
        </member>
        <member name="T:ComponentAce.Compression.Libs.zlib.SupportClass">
            <summary>
            
            </summary>
        </member>
        <member name="M:ComponentAce.Compression.Libs.zlib.SupportClass.Identity(System.Int64)">
            <summary>
            This method returns the literal value received
            </summary>
            <param name="literal">The literal to return</param>
            <returns>The received value</returns>
        </member>
        <member name="M:ComponentAce.Compression.Libs.zlib.SupportClass.Identity(System.UInt64)">
            <summary>
            This method returns the literal value received
            </summary>
            <param name="literal">The literal to return</param>
            <returns>The received value</returns>
        </member>
        <member name="M:ComponentAce.Compression.Libs.zlib.SupportClass.Identity(System.Single)">
            <summary>
            This method returns the literal value received
            </summary>
            <param name="literal">The literal to return</param>
            <returns>The received value</returns>
        </member>
        <member name="M:ComponentAce.Compression.Libs.zlib.SupportClass.Identity(System.Double)">
            <summary>
            This method returns the literal value received
            </summary>
            <param name="literal">The literal to return</param>
            <returns>The received value</returns>
        </member>
        <member name="M:ComponentAce.Compression.Libs.zlib.SupportClass.URShift(System.Int32,System.Int32)">
            <summary>
            Performs an unsigned bitwise right shift with the specified number
            </summary>
            <param name="number">Number to operate on</param>
            <param name="bits">Ammount of bits to shift</param>
            <returns>The resulting number from the shift operation</returns>
        </member>
        <member name="M:ComponentAce.Compression.Libs.zlib.SupportClass.URShift(System.Int32,System.Int64)">
            <summary>
            Performs an unsigned bitwise right shift with the specified number
            </summary>
            <param name="number">Number to operate on</param>
            <param name="bits">Ammount of bits to shift</param>
            <returns>The resulting number from the shift operation</returns>
        </member>
        <member name="M:ComponentAce.Compression.Libs.zlib.SupportClass.URShift(System.Int64,System.Int32)">
            <summary>
            Performs an unsigned bitwise right shift with the specified number
            </summary>
            <param name="number">Number to operate on</param>
            <param name="bits">Ammount of bits to shift</param>
            <returns>The resulting number from the shift operation</returns>
        </member>
        <member name="M:ComponentAce.Compression.Libs.zlib.SupportClass.URShift(System.Int64,System.Int64)">
            <summary>
            Performs an unsigned bitwise right shift with the specified number
            </summary>
            <param name="number">Number to operate on</param>
            <param name="bits">Ammount of bits to shift</param>
            <returns>The resulting number from the shift operation</returns>
        </member>
        <member name="M:ComponentAce.Compression.Libs.zlib.SupportClass.ReadInput(System.IO.Stream,System.Byte[],System.Int32,System.Int32)">
            <summary>Reads a number of characters from the current source Stream and writes the data to the target array at the specified index.</summary>
            <param name="sourceStream">The source Stream to read from.</param>
            <param name="target">Contains the array of characteres read from the source Stream.</param>
            <param name="start">The starting index of the target array.</param>
            <param name="count">The maximum number of characters to read from the source Stream.</param>
            <returns>The number of characters read. The number will be less than or equal to count depending on the data available in the source Stream. Returns -1 if the end of the stream is reached.</returns>
        </member>
        <member name="M:ComponentAce.Compression.Libs.zlib.SupportClass.ReadInput(System.IO.TextReader,System.Byte[],System.Int32,System.Int32)">
            <summary>Reads a number of characters from the current source TextReader and writes the data to the target array at the specified index.</summary>
            <param name="sourceTextReader">The source TextReader to read from</param>
            <param name="target">Contains the array of characteres read from the source TextReader.</param>
            <param name="start">The starting index of the target array.</param>
            <param name="count">The maximum number of characters to read from the source TextReader.</param>
            <returns>The number of characters read. The number will be less than or equal to count depending on the data available in the source TextReader. Returns -1 if the end of the stream is reached.</returns>
        </member>
        <member name="M:ComponentAce.Compression.Libs.zlib.SupportClass.ToByteArray(System.String)">
            <summary>
            Converts a string to an array of bytes
            </summary>
            <param name="sourceString">The string to be converted</param>
            <returns>The new array of bytes</returns>
        </member>
        <member name="M:ComponentAce.Compression.Libs.zlib.SupportClass.ToCharArray(System.Byte[])">
            <summary>
            Converts an array of bytes to an array of chars
            </summary>
            <param name="byteArray">The array of bytes to convert</param>
            <returns>The new array of chars</returns>
        </member>
        <member name="T:YDTF.ReturnVODicByTCPISOA605">
            <summary>
            返回VODictionary集合
            传输协议: TCP
            ISOA版本: 605
            </summary>
        </member>
        <member name="T:YDTF.IServiceCallBack">
            <summary>
            服务回调接口
            描述:暂时用于返回不同的数据集合
            </summary>
        </member>
        <member name="M:YDTF.IServiceCallBack.OrganizeOutput(System.String,System.Object)">
            <summary>
            组织输出数据集
            </summary>
            <param name="serviceName">服务名称</param>
            <param name="outputParm">输入参数</param>
            <returns>数据集</returns>
        </member>
        <member name="F:YDTF.ReturnVODicByTCPISOA605.isInit">
            <summary>
            是否需要初始化
            </summary>
        </member>
        <member name="F:YDTF.ReturnVODicByTCPISOA605.numLen">
            <summary>
            解析集合个数的长度
            </summary>
        </member>
        <member name="F:YDTF.ReturnVODicByTCPISOA605.headerEncoding">
            <summary>
            头包的编码
            </summary>
        </member>
        <member name="F:YDTF.ReturnVODicByTCPISOA605.errorEncoding">
            <summary>
            错误包的编码
            </summary>
        </member>
        <member name="F:YDTF.ReturnVODicByTCPISOA605.dataEncoding">
            <summary>
            数据包的编码
            </summary>
        </member>
        <member name="M:YDTF.ReturnVODicByTCPISOA605.OrganizeOutput(System.String,System.Object)">
            <summary>
            组织输出数据集
            </summary>
            <param name="serviceName">服务名称</param>
            <param name="outputParm">输入参数</param>
            <returns>数据集</returns>
        </member>
        <member name="M:YDTF.ReturnVODicByTCPISOA605.InitEncoding(System.String)">
            <summary>
            初始化编码(此方法只初始化一次 第一次掉服务的时候执行)
            </summary>
            <param name="serviceName">服务名</param>
        </member>
        <member name="M:YDTF.ReturnVODicByTCPISOA605.UpPackToVO(YDTF.ORMSupportClasses.IEntity2,System.Byte[],System.Int32,System.Int32,System.Text.Encoding)">
            <summary>
            解包到VO集合
            </summary>
            <param name="temEntity">实体</param>
            <param name="outputBytes">输出参数</param>
            <param name="index">开始索引</param>
            <param name="entityCount">实体总数</param>
            <param name="encoding">字符编码格式</param>
            <returns>实体集合</returns>
        </member>
        <member name="M:YDTF.ReturnVODicByTCPISOA605.GetValueFromBytes(System.Byte[],System.Int32,System.Int32,System.Type,System.Text.Encoding)">
            <summary>
            通过字节数组转换值
            </summary>
            <param name="outputBytes">输出字节</param>
            <param name="beginIndex">开始遍历输出字节的索引</param>
            <param name="maxLength">最大长度</param>
            <param name="dataType">数据类型</param>
            <param name="encoding">字符编码格式</param>
            <returns>转换后的值</returns>
        </member>
        <member name="M:YDTF.ReturnVODicByTCPISOA605.GetStringValueFromBytes(System.Byte[],System.Byte,System.Int32,System.Int32,System.Text.Encoding)">
            <summary>
            通过字节数组转换字符串值
            描述：此方法用在旧的ISOA 版本， 新版本中字符串末尾值填充 0 ,旧版本中字符串末尾值填充 32.
            </summary>
            <param name="outputBytes">输出字节</param>
            <param name="conditionByte">条件</param>
            <param name="beginIndex">开始遍历输出字节的索引</param>
            <param name="maxLength">最大长度</param>
            <param name="encoding">字符编码格式</param>
            <returns>转换后的值</returns>
        </member>
        <member name="M:YDTF.ReturnVODicByTCPISOA605.GetValueFromBytes(System.Byte[],System.Byte,System.Int32,System.Int32,System.Text.Encoding)">
            <summary>
            通过字节数组转换值
            </summary>
            <param name="outputBytes">输出字节</param>
            <param name="conditionByte">条件</param>
            <param name="beginIndex">开始遍历输出字节的索引</param>
            <param name="maxLength">最大长度</param>
            <param name="encoding">字符编码格式</param>
            <returns>转换后的值</returns>
        </member>
        <member name="T:YDTF.Protocol">
            <summary>
            协议类
            </summary>
        </member>
        <member name="F:YDTF.Protocol._key">
            <summary>
            协议标识
            </summary>
        </member>
        <member name="F:YDTF.Protocol._className">
            <summary>
            协议使用的类名
            </summary>
        </member>
        <member name="F:YDTF.Protocol._parameters">
            <summary>
            协议参数
            </summary>
        </member>
        <member name="P:YDTF.Protocol.Key">
            <summary>
            获取或设置协议标识
            </summary>
        </member>
        <member name="P:YDTF.Protocol.ClassName">
            <summary>
            获取或设置协议使用的类名
            </summary>
        </member>
        <member name="P:YDTF.Protocol.Parameters">
            <summary>
            获取协议参数
            </summary>
        </member>
        <member name="T:YDTF.Service">
            <summary>
            服务类    
            </summary>
        </member>
        <member name="F:YDTF.Service._name">
            <summary>
            服务名称
            </summary>
        </member>
        <member name="F:YDTF.Service._title">
            <summary>
            服务标题
            </summary>
        </member>
        <member name="F:YDTF.Service._protocolKey">
            <summary>
            协议标识
            </summary>
        </member>
        <member name="F:YDTF.Service._input">
            <summary>
            输入参数
            </summary>
        </member>
        <member name="F:YDTF.Service._output">
            <summary>
            输出参数
            </summary>
        </member>
        <member name="F:YDTF.Service._svcGuid">
            <summary>
            Guid 标识服务
            </summary>
        </member>
        <member name="F:YDTF.Service._isoaPrePath">
            <summary>
            工程路径
            </summary>
        </member>
        <member name="P:YDTF.Service.Name">
            <summary>
            获取或设置服务名称
            </summary>
        </member>
        <member name="P:YDTF.Service.Title">
            <summary>
            获取或设置服务标题
            </summary>
        </member>
        <member name="P:YDTF.Service.ProtocolKey">
            <summary>
            获取或设置协议标识
            </summary>
        </member>
        <member name="P:YDTF.Service.Input">
            <summary>
            获取或设置输入参数
            </summary>
        </member>
        <member name="P:YDTF.Service.Output">
            <summary>
            获取或设置输出参数
            </summary>
        </member>
        <member name="P:YDTF.Service.SvcGuid">
            <summary>
            获取或设置标识服务的Guid
            </summary>
        </member>
        <member name="P:YDTF.Service.IsoaPrePath">
            <summary>
            获取或设置工程路径
            </summary>
        </member>
        <member name="T:YDTF.ServiceAdapterConfig">
            <summary>
            服务适配器的配置
            描述：有关服务配置文件的操作
            </summary>
        </member>
        <member name="F:YDTF.ServiceAdapterConfig._isRecordLog">
            <summary>
            是否记录日志
            </summary>
        </member>
        <member name="F:YDTF.ServiceAdapterConfig.configFile">
            <summary>
            服务配置文件路径
            </summary>
        </member>
        <member name="F:YDTF.ServiceAdapterConfig.dicProtocols">
            <summary>
            协议集合字典
            </summary>
        </member>
        <member name="F:YDTF.ServiceAdapterConfig.dicServices">
            <summary>
            服务集合字典
            </summary>
        </member>
        <member name="M:YDTF.ServiceAdapterConfig.LoadConfig">
            <summary>
            解析服务配置文件
            </summary>
            <returns>解析是否成功：true 成功 false 失败</returns>
        </member>
        <member name="M:YDTF.ServiceAdapterConfig.AddServiceRecordLog(System.Xml.XmlNode)">
            <summary>
            添加服务日志记录
            </summary>
            <param name="recordLogNode">日志节点</param>
        </member>
        <member name="M:YDTF.ServiceAdapterConfig.AddProtocolPool(System.Xml.XmlNode)">
            <summary>
            添加服务协议
            </summary>
            <param name="protocolPoolNode">服务协议节点</param>
        </member>
        <member name="M:YDTF.ServiceAdapterConfig.AddServicePool(System.Xml.XmlNode)">
            <summary>
            添加服务
            </summary>
            <param name="servicePoolNode">服务节点</param>
        </member>
        <member name="M:YDTF.ServiceAdapterConfig.GetProtocol(System.String)">
            <summary>
            根据服务名获取服务协议对象
            </summary>
            <param name="serviceName">服务名称</param>
            <returns>协议对象</returns>
        </member>
        <member name="M:YDTF.ServiceAdapterConfig.GetService(System.String)">
            <summary>
            根据服务名获取服务配置信息
            </summary>
            <param name="serviceName">服务名称</param>
            <returns>服务配置信息对象</returns>
        </member>
        <member name="M:YDTF.ServiceAdapterConfig.HasRecordLog">
            <summary>
            是否需要记录服务日志
            </summary>
            <returns>true 为记录 false 不记录</returns>
        </member>
        <member name="T:YDTF.ORMSupportClasses.SerializationUtils">
            <summary>
            序列化工具
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.SerializationUtils.InfoGetBoolean(System.Runtime.Serialization.SerializationInfo,System.String)">
            <summary>
            通过序列化信息获取Bool值
            </summary>
            <param name="info">序列化信息</param>
            <param name="fieldName">名称</param>
            <returns>bool值</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.SerializationUtils.InfoGetInt32(System.Runtime.Serialization.SerializationInfo,System.String)">
            <summary>
            通过序列化信息获取Int32值
            </summary>
            <param name="info">序列化信息</param>
            <param name="fieldName">名称</param>
            <returns>Int32值</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.SerializationUtils.InfoGetInt32(System.Runtime.Serialization.SerializationInfo,System.String,System.Int32)">
            <summary>
            通过序列化信息获取Int32值
            </summary>
            <param name="info">序列化信息</param>
            <param name="fieldName">名称</param>
            <param name="defaultValue">默认值</param>
            <returns>Int32值</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.SerializationUtils.InfoGetString(System.Runtime.Serialization.SerializationInfo,System.String)">
            <summary>
            通过序列化信息获取String值
            </summary>
            <param name="info">序列化信息</param>
            <param name="fieldName">名称</param>
            <returns>String值</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.SerializationUtils.InfoGetString(System.Runtime.Serialization.SerializationInfo,System.String,System.String)">
            <summary>
            通过序列化信息获取String值
            </summary>
            <param name="info">序列化信息</param>
            <param name="fieldName">名称</param>
            <param name="defaultValue">默认值</param>
            <returns>String值</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.SerializationUtils.InfoGetValue(System.Runtime.Serialization.SerializationInfo,System.String,System.Type)">
            <summary>
            通过序列化信息获取值
            </summary>
            <param name="info">序列化信息</param>
            <param name="fieldName">名称</param>
            <param name="typeOfValue">类型</param>
            <returns>值</returns>
        </member>
        <member name="T:YDTF.ORMSupportClasses.NumericValueOperatorExecutor">
            <summary>
            执行数值操作符
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.NumericValueOperatorExecutor.PerformArithmethicOperation(System.Byte,YDTF.ORMSupportClasses.ExOp,System.Byte)">
            <summary>
            执行操作符算法
            </summary>
            <param name="leftOperandValue">左操作值</param>
            <param name="operatorToUse">操作符</param>
            <param name="rightOperandValue">右操作值</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.NumericValueOperatorExecutor.PerformArithmethicOperation(System.Decimal,YDTF.ORMSupportClasses.ExOp,System.Decimal)">
            <summary>
            执行操作符算法
            </summary>
            <param name="leftOperandValue">左操作值</param>
            <param name="operatorToUse">操作符</param>
            <param name="rightOperandValue">右操作值</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.NumericValueOperatorExecutor.PerformArithmethicOperation(System.Double,YDTF.ORMSupportClasses.ExOp,System.Double)">
            <summary>
            执行操作符算法
            </summary>
            <param name="leftOperandValue">左操作值</param>
            <param name="operatorToUse">操作符</param>
            <param name="rightOperandValue">右操作值</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.NumericValueOperatorExecutor.PerformArithmethicOperation(System.Int16,YDTF.ORMSupportClasses.ExOp,System.Int16)">
            <summary>
            执行操作符算法
            </summary>
            <param name="leftOperandValue">左操作值</param>
            <param name="operatorToUse">操作符</param>
            <param name="rightOperandValue">右操作值</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.NumericValueOperatorExecutor.PerformArithmethicOperation(System.Int32,YDTF.ORMSupportClasses.ExOp,System.Int32)">
            <summary>
            执行操作符算法
            </summary>
            <param name="leftOperandValue">左操作值</param>
            <param name="operatorToUse">操作符</param>
            <param name="rightOperandValue">右操作值</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.NumericValueOperatorExecutor.PerformArithmethicOperation(System.Int64,YDTF.ORMSupportClasses.ExOp,System.Int64)">
            <summary>
            执行操作符算法
            </summary>
            <param name="leftOperandValue">左操作值</param>
            <param name="operatorToUse">操作符</param>
            <param name="rightOperandValue">右操作值</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.NumericValueOperatorExecutor.PerformArithmethicOperation(System.Object,YDTF.ORMSupportClasses.ExOp,System.Object)">
            <summary>
            执行操作符算法
            </summary>
            <param name="leftOperandValue">左操作值</param>
            <param name="operatorToUse">操作符</param>
            <param name="rightOperandValue">右操作值</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.NumericValueOperatorExecutor.PerformArithmethicOperation(System.SByte,YDTF.ORMSupportClasses.ExOp,System.SByte)">
            <summary>
            执行操作符算法
            </summary>
            <param name="leftOperandValue">左操作值</param>
            <param name="operatorToUse">操作符</param>
            <param name="rightOperandValue">右操作值</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.NumericValueOperatorExecutor.PerformArithmethicOperation(System.Single,YDTF.ORMSupportClasses.ExOp,System.Single)">
            <summary>
            执行操作符算法
            </summary>
            <param name="leftOperandValue">左操作值</param>
            <param name="operatorToUse">操作符</param>
            <param name="rightOperandValue">右操作值</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.NumericValueOperatorExecutor.PerformArithmethicOperation(System.UInt16,YDTF.ORMSupportClasses.ExOp,System.UInt16)">
            <summary>
            执行操作符算法
            </summary>
            <param name="leftOperandValue">左操作值</param>
            <param name="operatorToUse">操作符</param>
            <param name="rightOperandValue">右操作值</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.NumericValueOperatorExecutor.PerformArithmethicOperation(System.UInt64,YDTF.ORMSupportClasses.ExOp,System.UInt64)">
            <summary>
            执行操作符算法
            </summary>
            <param name="leftOperandValue">左操作值</param>
            <param name="operatorToUse">操作符</param>
            <param name="rightOperandValue">右操作值</param>
            <returns>操作结果</returns>
        </member>
        <member name="T:YDTF.ORMSupportClasses.IEntityField2">
            <summary>
            实体字段接口
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.IEntityFieldCore">
            <summary>
            实体字段核心接口
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.IFieldInfo">
            <summary>
            字段信息接口
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IFieldInfo.ActualContainingObjectName">
            <summary>
            获取真实包含的对象名
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IFieldInfo.ContainingObjectName">
            <summary>
            获取包含的对象名
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IFieldInfo.DataType">
            <summary>
            获取字段值的数据类型
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IFieldInfo.FieldIndex">
            <summary>
            获取字段的索引
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IFieldInfo.IsForeignKey">
            <summary>
            获取是否外键字段
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IFieldInfo.IsNullable">
            <summary>
            获取数据库字段是否可以为Null
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IFieldInfo.IsOfEnumDataType">
            <summary>
            获取是否为枚举类型
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IFieldInfo.IsPrimaryKey">
            <summary>
            获取是否为主键
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IFieldInfo.IsReadOnly">
            <summary>
            获取是否只读
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IFieldInfo.MaxLength">
            <summary>
            获取最大长度
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IFieldInfo.Name">
            <summary>
            获取名称
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IFieldInfo.Precision">
            <summary>
            获取精度
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IFieldInfo.RealDataType">
            <summary>
            获取真实数据类型
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IFieldInfo.Scale">
            <summary>
            获取小数位
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFieldCore.AcceptChange">
            <summary>
            提交修改
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFieldCore.Clone">
            <summary>
            克隆对象
            </summary>
            <returns>实体字段接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFieldCore.GetHashCode">
            <summary>
            用作特定类型的哈希函数。
            </summary>
            <returns>当前的哈希代码</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFieldCore.ForcedCurrentValueWrite(System.Object)">
            <summary>
            强迫写入当前值
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFieldCore.ForcedCurrentValueWrite(System.Object,System.Object)">
            <summary>
            强迫写入当前值
            </summary>
            <param name="value">值</param>
            <param name="dbValue">数据库值</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFieldCore.ForcedChangedWrite(System.Boolean)">
            <summary>
            强迫写入修改标记
            </summary>
            <param name="isChangedValue">是否修改值</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFieldCore.ForcedIsNullWrite(System.Boolean)">
            <summary>
            强迫写是有允许空
            </summary>
            <param name="isNull">是否允许null</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFieldCore.RejectChange">
            <summary>
            重置修改
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFieldCore.SetDbValue(System.Object)">
            <summary>
            设置数据库值
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFieldCore.SetFieldIndex(System.Int32)">
            <summary>
            设置字段索引
            </summary>
            <param name="newIndex">新索引</param>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityFieldCore.AggregateFunctionToApply">
            <summary>
            获取或设置聚合标志
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityFieldCore.Alias">
            <summary>
            别名
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityFieldCore.CurrentValue">
            <summary>
            获取或设置当前值
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityFieldCore.DbValue">
            <summary>
            获取数据库值
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityFieldCore.ExpressionToApply">
            <summary>
            获取或设置计算表达式应用
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityFieldCore.IsChanged">
            <summary>
            获取或设置是否修改
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityFieldCore.IsNull">
            <summary>
            获取或设置是否为null
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityFieldCore.ObjectAlias">
            <summary>
            获取或设置对象别名
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityField2.SetAggregateFunction(YDTF.ORMSupportClasses.AggregateFunction)">
            <summary>
            设置聚合表达式
            </summary>
            <param name="functionToToApply">聚合标志</param>
            <returns>当前字段</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityField2.SetExpression(YDTF.ORMSupportClasses.IExpression)">
            <summary>
            设置计算表达式
            </summary>
            <param name="expressionToToApply">计算表达式</param>
            <returns>当前字段</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityField2.SetFieldAlias(System.String)">
            <summary>
            设置别名
            </summary>
            <param name="fieldAlias">字段别名</param>
            <returns>当前字段</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityField2.SetObjectAlias(System.String)">
            <summary>
            设置对象别名
            </summary>
            <param name="objectAlias">对象别名</param>
            <returns>当前字段</returns>
        </member>
        <member name="T:YDTF.ORMSupportClasses.ORMFieldIsReadonlyException">
            <summary>
            
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.ORMException">
            <summary>
            ORM异常类
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ORMException.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ORMException.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="message">异常消息</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ORMException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            构造函数
            </summary>
            <param name="info">序列化的对象数据</param>
            <param name="context">源或目标的上下文信息</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ORMException.#ctor(System.String,System.Exception)">
            <summary>
            构造函数
            </summary>
            <param name="message">异常消息</param>
            <param name="innerException">内部异常</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ORMException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            异常信息设置 
            </summary>
            <param name="info">序列化的对象数据</param>
            <param name="context">源或目标的上下文信息</param>
        </member>
        <member name="P:YDTF.ORMSupportClasses.ORMException.RuntimeBuild">
            <summary>
            部署时间
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.ORMException.RuntimeVersion">
            <summary>
            版本
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ORMFieldIsReadonlyException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ORMFieldIsReadonlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:YDTF.ORMSupportClasses.EntityCore`1">
            <summary>
            实体核心类
            </summary>
            <typeparam name="TFields">字段</typeparam>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityCore`1._dataErrorInfoError">
            <summary>
            数据错误信息
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityCore`1._dataErrorInfoErrorsPerField">
            <summary>
            数据错误信息和字段名
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityCore`1._editCycleInProgress">
            <summary>
            修改循环是否在执行
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityCore`1._fields">
            <summary>
            字段集合
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityCore`1._isNew">
            <summary>
            是否新增的实体
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityCore`1._markedForDeletion">
            <summary>
            是否删除标志
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityCore`1._name">
            <summary>
            实体名称
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityCore`1._objectID">
            <summary>
            实体全局Guid
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityCore`1._pendingChangedEvent">
            <summary>
            待定修改事件
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityCore`1._savedFields">
            <summary>
            保存实体集合
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityCore`1._site">
            <summary>
            站点地图接口
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityCore`1._typeDefaultValueProvider">
            <summary>
            实体默认值提供程序接口
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityCore`1._validatorChange">
            <summary>
            验证修改接口
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityCore`1._propertyChanged">
            <summary>
            数据修改事件
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityCore`1.ScaleOverflowCorrectionActionToUse">
            <summary>
            小数点溢出时处理方式
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.CreateFields">
            <summary>
            创建字段集合
            </summary>
            <returns>字段集合</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.#cctor">
            <summary>
            EntityCore静态构造函数
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="name">实体名称</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.DeserializeEntityCoreData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            构造函数
            </summary>
            <param name="info">要填充数据的</param>
            <param name="context">此序列化的目标</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            使用将目标对象序列化所需的数据填充
            </summary>
            <param name="info">要填充数据的</param>
            <param name="context">此序列化的目标</param>        
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
             使用将目标对象序列化所需的数据填充
            </summary>
            <param name="info">要填充数据的</param>
            <param name="context">此序列化的目标</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.CheckIfFieldErrorMessageIsAlreadyPresent(System.String,System.String)">
            <summary>
            验证字段错误消息
            </summary>
            <param name="fieldName">字段名称</param>
            <param name="errorMessage">错误消息</param>
            <returns>true 成功 false 失败</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.CreateEntityFactoryCore">
            <summary>
            创建实体工厂核心接口
            </summary>
            <returns></returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.CreateTypeDefaultValueProvider">
            <summary>
            创建类型默认值提供程序
            </summary>
            <returns>类型默认值接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.CreateValidatorChange">
            <summary>
            创建验证和修改
            </summary>
            <returns>验证接口修改</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.Equals(System.Object)">
            <summary>
            确定指定的 System.Object 是否等于当前的 EntityCore。
            </summary>
            <param name="obj">与当前的 EntityCore 进行比较的 System.Object</param>
            <returns>如果指定的 System.Object 等于当前的 EntityCore，则为 true；否则为 false</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.FlagAllFieldsAsChanged">
            <summary>
            标记所有字段提交修改
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.GetCurrentFieldValue(System.Int32)">
            <summary>
            获取当前值
            </summary>
            <param name="fieldIndex">字段索引</param>
            <returns>值</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.GetHashCode">
            <summary>
             返回该实体的哈希代码。
            </summary>
            <returns>32 位带符号整数哈希代码。</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.GetValue(System.Int32,System.Boolean)">
            <summary>
            获取值
            </summary>
            <param name="fieldIndex">字段索引</param>
            <param name="returnDefaultIfNull">如果值为Null是否返回默认值</param>
            <returns>值</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.MarkFieldsAsDirty">
            <summary>
            标志字段集合脏数据
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.OnBeginEdit">
            <summary>
            开启编辑
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.OnCancelEdit">
            <summary>
            取消编辑
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.OnEndEdit">
            <summary>
            结束编辑
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.OnEntityContentsChanged">
            <summary>
            实体集合改变事件
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.FieldValueChanged(System.Object,YDTF.ORMSupportClasses.IEntityFieldCore)">
            <summary>
            字段值改变
            </summary>
            <param name="originalValue">旧值</param>
            <param name="field">字段</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.OnGetValue(System.Int32,System.Boolean@)">
            <summary>
            获取值
            </summary>
            <param name="fieldIndex">字段索引</param>
            <param name="cancel">是否取消获取</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.OnGetValueComplete(System.Int32)">
            <summary>
            获取值完成
            </summary>
            <param name="fieldIndex">字段索引</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.OnInitClassMembersComplete">
            <summary>
            初始化类型成员完成
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.OnInitialized">
            <summary>
            初始化完成后
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.OnInitializing">
            <summary>
            初始化前
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.OnPropertyChanged(System.String)">
            <summary>
            属性改变
            </summary>
            <param name="propertyName">属性名</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.OnSetValue(System.Int32,System.Object,System.Boolean@)">
            <summary>
            设置值
            </summary>
            <param name="fieldIndex">字段索引</param>
            <param name="valueToSet">设置的值</param>
            <param name="cancel">是否取消</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.OnSetValueComplete(System.Int32)">
            <summary>
            设置值完成
            </summary>
            <param name="fieldIndex"></param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.ValidateFieldValue(System.Int32,System.Object)">
            <summary>
            验证字段值
            </summary>
            <param name="fieldIndex">字段索引</param>
            <param name="value">值</param>
            <returns>是否验证成功</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.PerformDependencyInjection">
            <summary>
            执行属性注入
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.PostFieldValueSetAction(System.Boolean,System.String)">
            <summary>
            设置字段值关联
            </summary>
            <param name="fieldValueSet">字段的值是否设置成功</param>
            <param name="propertyName">属性名</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.PostProcessValueToGet(YDTF.ORMSupportClasses.IEntityFieldCore,System.Object@)">
            <summary>
            审核执行的返回值
            </summary>
            <param name="fieldToGet">字段</param>
            <param name="valueToReturn">返回的值</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.PreProcessValueToSet(YDTF.ORMSupportClasses.IEntityFieldCore,System.Object@)">
            <summary>
            执行设置值之前
            </summary>
            <param name="fieldToSet">字段</param>
            <param name="valueToSet">设置的值</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.RollbackFields(System.String)">
            <summary>
            回退字段
            </summary>
            <param name="name">回退的字段名</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.SaveFields(System.String)">
            <summary>
            保存字段
            </summary>
            <param name="name">保存的字段名</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.DiscardSavedFields">
            <summary>
            丢弃保存字段集合
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.YDTF#ORMSupportClasses#IEntityCore#AcceptChanges">
            <summary>
            提交修改
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.YDTF#ORMSupportClasses#IEntityCore#GetEntityFactory">
            <summary>
            获取实体工厂
            </summary>
            <returns>实体工厂接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.YDTF#ORMSupportClasses#IEntityCore#FlagMeAsChanged">
            <summary>
            标记集合修改
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.YDTF#ORMSupportClasses#IEntityCore#GetFieldByName(System.String)">
            <summary>
            获取字段通过字段名
            </summary>
            <param name="fieldName">字段名</param>
            <returns>字段</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.YDTF#ORMSupportClasses#IEntityCore#RejectChanges">
            <summary>
            重置修改
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.YDTF#ORMSupportClasses#IEntityCore#RollbackFields(System.String)">
            <summary>
            回退字段
            </summary>
            <param name="name">回退的字段名</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.YDTF#ORMSupportClasses#IEntityCore#SaveFields(System.String)">
            <summary>
            保存字段
            </summary>
            <param name="name">保存的字段名</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.SetEntityError(System.String)">
            <summary>
            设置实体错误
            </summary>
            <param name="errorMessage">错误信息</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.SetEntityFieldError(System.String,System.String,System.Boolean)">
            <summary>
            设置实体字段错误
            </summary>
            <param name="fieldName">字段名称</param>
            <param name="errorMessage">消息</param>
            <param name="append">是否追加</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.SetName(System.String)">
            <summary>
            设置实体名称
            </summary>
            <param name="name">实体名称</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.SetNewFieldValue(System.Int32,System.Object)">
            <summary>
            设置新字段的值
            </summary>
            <param name="fieldIndex">字段索引</param>
            <param name="value">值</param>
            <returns>true 成功 false 失败</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.SetNewFieldValue(System.String,System.Object)">
            <summary>
            设置新字段的值
            </summary>
            <param name="fieldName">字段名称</param>
            <param name="value">值</param>
            <returns>true 成功 false 失败</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.SetValue(System.Int32,System.Object)">
            <summary>
            设置字段的值
            </summary>
            <param name="fieldIndex">字段索引</param>
            <param name="value">值</param>
            <returns>true 成功 false 失败</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            开启修改
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            取消修改
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            结束修改
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.ValidateEntity">
            <summary>
            验证实体
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.ValidateValue(YDTF.ORMSupportClasses.IEntityFieldCore,System.Object@,System.Int32)">
            <summary>
            验证值
            </summary>
            <param name="fieldToValidate">验证的字段</param>
            <param name="value">值</param>
            <param name="fieldIndex">字段索引</param>
            <returns>true 验证成功 false 验证失败</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.SetEntityFieldError(System.Int32,System.String)">
            <summary>
            设置实体字段错误
            </summary>
            <param name="fieldIndex">字段索引</param>
            <param name="errorMessage">错误消息</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.SetEntityFieldError(System.String,System.String)">
            <summary>
            设置实体字段错误
            </summary>
            <param name="propertyName">属性名</param>
            <param name="errorMessage">错误消息</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.ClearEntityFieldError(System.Int32)">
            <summary>
            清除实体字段错误
            </summary>
            <param name="fieldIndex">字段索引</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.ClearEntityFieldError(System.String)">
            <summary>
            清除实体字段错误
            </summary>
            <param name="propertyName">属性名</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.Clone">
            <summary>
            浅副本克隆
            </summary>
            <returns></returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityCore`1.CloneEntity">
            <summary>
            序列化克隆实体
            </summary>
            <returns>克隆的实体</returns>
        </member>
        <member name="E:YDTF.ORMSupportClasses.EntityCore`1.EntityContentsChanged">
            <summary>
            实体集合修改事件
            </summary>
        </member>
        <member name="E:YDTF.ORMSupportClasses.EntityCore`1.Initialized">
            <summary>
            初始化后事件
            </summary>
        </member>
        <member name="E:YDTF.ORMSupportClasses.EntityCore`1.Initializing">
            <summary>
            初始化前事件
            </summary>
        </member>
        <member name="E:YDTF.ORMSupportClasses.EntityCore`1.PropertyChanged">
            <summary>
            数据修改事件
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityCore`1.DataErrorInfoError">
            <summary>
            获取和设置实体数据错误信息
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityCore`1.DataErrorInfoErrorsPerField">
            <summary>
            获取和设置数据错误信息
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityCore`1.DefaultRootElementName">
            <summary>
            获取默认实体名
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityCore`1.EditCycleInProgress">
            <summary>
            获取或设置修改循环是否在执行
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityCore`1.Fields">
            <summary>
            获取或设置字段集合
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityCore`1.IsDirty">
            <summary>
            获取或设置是否是脏数据
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityCore`1.IsNew">
            <summary>
            获取和设置是否新增
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityCore`1.MarkedForDeletion">
            <summary>
            获取或设置是否当前实体被删除
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityCore`1.ObjectID">
            <summary>
            获取或设置实体的Guid
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityCore`1.PrimaryKeyFields">
            <summary>
            获取主键字段
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityCore`1.SavedFields">
            <summary>
            获取或设置保存字段集合
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityCore`1.YDTF#ORMSupportClasses#IEntityCore#Fields">
            <summary>
            获取字段集合
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityCore`1.YDTFProEntityName">
            <summary>
            实体名称
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityCore`1.YDTF#ORMSupportClasses#IEntityCore#ObjectID">
            <summary>
            获取或设置实体的Guid
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityCore`1.YDTF#ORMSupportClasses#IEntityCore#PrimaryKeyFields">
            <summary>
            获取主键字段
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityCore`1.YDTF#ORMSupportClasses#IEntityCore#TypeDefaultValueProviderToUse">
            <summary>
            获取或设置类型默认值提供接口
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityCore`1.Site">
            <summary>
            获取或设置站点地图
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityCore`1.System#ComponentModel#IDataErrorInfo#Error">
            <summary>
            获取实体错误信息
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityCore`1.System#ComponentModel#IDataErrorInfo#Item(System.String)">
            <summary>
            获取属性错误信息
            </summary>
            <param name="fieldName">字段名</param>
            <returns>错误消息</returns>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityCore`1.ValidatorChange">
            <summary>
            获取或设置验证修改接口
            </summary>
        </member>
        <member name="T:YDTF.ServiceAdapter.ViewModelBase">
            <summary>
            视图模型基类
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.IValidatorChange">
            <summary>
            验证和修改接口
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IValidatorChange.OnAssignedToEntity(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            添加验证修改
            </summary>
            <param name="involvedEntity">添加验证修改的实体接口</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IValidatorChange.OnUnassignedFromEntity(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            移除验证修改
            </summary>
            <param name="involvedEntity">移除验证修改的实体接口</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IValidatorChange.OnValidateEntity(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            验证实体
            </summary>
            <param name="involvedEntity">实体接口</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IValidatorChange.OnValidateEntityAfterLoad(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            验证实体加载后
            </summary>
            <param name="involvedEntity">实体接口</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IValidatorChange.OnValidateEntityAfterSave(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            验证实体保存后
            </summary>
            <param name="involvedEntity">实体接口</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IValidatorChange.OnValidateEntityBeforeDelete(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            验证实体删除前
            </summary>
            <param name="involvedEntity">实体接口</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IValidatorChange.OnValidateEntityBeforeSave(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            验证实体保存前
            </summary>
            <param name="involvedEntity">实体接口</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IValidatorChange.OnValidateFieldValue(YDTF.ORMSupportClasses.IEntityCore,System.Int32,System.Object)">
            <summary>
            验证字段值
            </summary>
            <param name="involvedEntity">实体接口</param>
            <param name="fieldIndex">字段索引</param>
            <param name="value">值</param>
            <returns>true 验证成功 false 验证失败</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IValidatorChange.OnBeforeEntitySave(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            实体保存前
            </summary>
            <param name="involvedEntity">实体接口</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IValidatorChange.OnFieldValueChanged(YDTF.ORMSupportClasses.IEntityCore,System.Object,YDTF.ORMSupportClasses.IEntityFieldCore)">
            <summary>
            字段值修改
            </summary>
            <param name="involvedEntity">实体接口</param>
            <param name="originalValue">旧值</param>
            <param name="field">字段</param>
        </member>
        <member name="M:YDTF.ServiceAdapter.ViewModelBase.RaisePropertyChanged(System.String)">
            <summary>
            通知一个属性
            </summary>
            <param name="propertyName">属性名</param>
        </member>
        <member name="M:YDTF.ServiceAdapter.ViewModelBase.RaisePropertyChanged(System.String[])">
            <summary>
            通知多个属性
            </summary>
            <param name="propertyNames">属性名</param>
        </member>
        <member name="M:YDTF.ServiceAdapter.ViewModelBase.SetError(System.String,System.String)">
            <summary>
            设置错误
            </summary>
            <param name="propertyName">属性名</param>
            <param name="errorMessage">错误消息</param>
        </member>
        <member name="M:YDTF.ServiceAdapter.ViewModelBase.ClearError(System.String)">
            <summary>
            清空错误
            </summary>
            <param name="propertyName">属性名称</param>
        </member>
        <member name="M:YDTF.ServiceAdapter.ViewModelBase.OnAssignedToEntity(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            添加验证修改
            </summary>
            <param name="involvedEntity">添加验证修改的实体接口</param>
        </member>
        <member name="M:YDTF.ServiceAdapter.ViewModelBase.OnUnassignedFromEntity(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            移除验证修改
            </summary>
            <param name="involvedEntity">移除验证修改的实体接口</param>
        </member>
        <member name="M:YDTF.ServiceAdapter.ViewModelBase.OnValidateEntity(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            验证实体
            </summary>
            <param name="involvedEntity">实体接口</param>
        </member>
        <member name="M:YDTF.ServiceAdapter.ViewModelBase.OnValidateEntityAfterLoad(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            验证实体加载后
            </summary>
            <param name="involvedEntity">实体接口</param>
        </member>
        <member name="M:YDTF.ServiceAdapter.ViewModelBase.OnValidateEntityAfterSave(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            验证实体保存后
            </summary>
            <param name="involvedEntity">实体接口</param>
        </member>
        <member name="M:YDTF.ServiceAdapter.ViewModelBase.OnValidateEntityBeforeDelete(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            验证实体删除前
            </summary>
            <param name="involvedEntity">实体接口</param>
        </member>
        <member name="M:YDTF.ServiceAdapter.ViewModelBase.OnValidateEntityBeforeSave(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            验证实体保存前
            </summary>
            <param name="involvedEntity">实体接口</param>
        </member>
        <member name="M:YDTF.ServiceAdapter.ViewModelBase.OnValidateFieldValue(YDTF.ORMSupportClasses.IEntityCore,System.Int32,System.Object)">
            <summary>
            验证字段值
            </summary>
            <param name="involvedEntity">实体接口</param>
            <param name="fieldIndex">字段索引</param>
            <param name="value">值</param>
            <returns>true 验证成功 false 验证失败</returns>
        </member>
        <member name="M:YDTF.ServiceAdapter.ViewModelBase.OnBeforeEntitySave(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            实体保存前
            </summary>
            <param name="involvedEntity">实体接口</param>
        </member>
        <member name="M:YDTF.ServiceAdapter.ViewModelBase.OnFieldValueChanged(YDTF.ORMSupportClasses.IEntityCore,System.Object,YDTF.ORMSupportClasses.IEntityFieldCore)">
            <summary>
            字段值修改
            </summary>
            <param name="involvedEntity">实体接口</param>
            <param name="originalValue">旧值</param>
            <param name="field">字段</param>
        </member>
        <member name="E:YDTF.ServiceAdapter.ViewModelBase.PropertyChanged">
            <summary>
            属性改变 引发的事件
            </summary>
        </member>
        <member name="P:YDTF.ServiceAdapter.ViewModelBase.HasErrors">
            <summary>
            是否有错误
            </summary>
        </member>
        <member name="P:YDTF.ServiceAdapter.ViewModelBase.Error">
            <summary>
            获取指示对象何处出错的错误信息
            </summary>   
        </member>
        <member name="P:YDTF.ServiceAdapter.ViewModelBase.Item(System.String)">
            <summary>
            获取具有给定名称的属性的错误信息。
            </summary>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="T:YDTF.ReturnDataSetByHTTPISOA605">
            <summary>
            返回DataSet集合
            传输协议: HTTP
            ISOA版本: 605
            </summary>
        </member>
        <member name="M:YDTF.ReturnDataSetByHTTPISOA605.OrganizeOutput(System.String,System.Object)">
            <summary>
            组织输出数据集
            </summary>
            <param name="serviceName">服务名称</param>
            <param name="outputParm">输入参数</param>
            <returns>数据集</returns>
        </member>
        <member name="M:YDTF.ReturnDataSetByHTTPISOA605.InitDataTable(YDTF.ORMSupportClasses.IEntity2)">
            <summary>
            初始化表
            </summary>
            <param name="entity">配置表的实体</param>
            <returns>空数据的表</returns>
        </member>
        <member name="M:YDTF.ReturnDataSetByHTTPISOA605.UpPackToDataTable(System.Xml.XmlTextReader,System.Data.DataTable)">
            <summary>
            解包成DataTable
            </summary>
            <param name="textReader">xml读取器</param>
            <param name="dt">数据表</param>
        </member>
        <member name="T:YDTF.ISOAExceptionLevel">
            <summary>
            ISOA服务异常级别
            </summary>
        </member>
        <member name="F:YDTF.ISOAExceptionLevel.INFO">
            <summary>
            提示
            </summary>
        </member>
        <member name="F:YDTF.ISOAExceptionLevel.ALARM">
            <summary>
            警告
            </summary>
        </member>
        <member name="F:YDTF.ISOAExceptionLevel.ERROR">
            <summary>
            错误
            </summary>
        </member>
        <member name="F:YDTF.ISOAExceptionLevel.FATAL">
            <summary>
            严重错误
            </summary>
        </member>
        <member name="T:YDTF.ISOAException">
            <summary>
            服务返回异常基类
            </summary>
        </member>
        <member name="F:YDTF.ISOAException._exceptionCode">
            <summary>
            异常代码
            </summary>
        </member>
        <member name="M:YDTF.ISOAException.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YDTF.ISOAException.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="message">异常消息</param>
        </member>
        <member name="M:YDTF.ISOAException.#ctor(System.String,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="message">异常消息</param>
            <param name="errorCode">异常代码</param>
        </member>
        <member name="M:YDTF.ISOAException.#ctor(System.String,YDTF.ISOAExceptionLevel)">
            <summary>
            构造函数
            </summary>
            <param name="message">异常消息</param>
            <param name="exceptionLevel">异常级别</param>
        </member>
        <member name="M:YDTF.ISOAException.#ctor(System.String,System.Int32,YDTF.ISOAExceptionLevel)">
            <summary>
            构造函数
            </summary>
            <param name="message">异常消息</param>
            <param name="exceptionCode">异常代码</param>
            <param name="exceptionLevel">异常级别</param>
        </member>
        <member name="M:YDTF.ISOAException.#ctor(System.String,YDTF.ISOAExceptionLevel,System.Exception)">
            <summary>
            构造函数
            </summary>
            <param name="message">异常消息</param>
            <param name="exceptionLevel">异常级别</param>
            <param name="innerException">内部异常</param>
        </member>
        <member name="M:YDTF.ISOAException.#ctor(System.String,System.Int32,YDTF.ISOAExceptionLevel,System.Exception)">
            <summary>
            构造函数
            </summary>
            <param name="message">异常消息</param>
            <param name="exceptionCode">异常代码</param>
            <param name="exceptionLevel">异常级别</param>
            <param name="innerException">内部异常</param>
        </member>
        <member name="M:YDTF.ISOAException.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:YDTF.ISOAException.ExceptionCode">
            <summary>
            异常代码，对应SYS_ERROR.SQLCODE,默认为-1
            </summary>
        </member>
        <member name="P:YDTF.ISOAException.ExceptionLevel">
            <summary>
            异常级别，默认值为INFO
            </summary>
        </member>
        <member name="P:YDTF.ISOAException.DetailMessage">
            <summary>
            异常详细信息，对应SYS_ERROR.YCXM
            </summary>
        </member>
        <member name="T:YDTF.ISOANotFoundException">
            <summary>
            服务查询没有结果集异常
            </summary>
        </member>
        <member name="F:YDTF.ISOANotFoundException.NotFoundSqlCode">
            <summary>
            没找到的编号
            </summary>
        </member>
        <member name="M:YDTF.ISOANotFoundException.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YDTF.ISOANotFoundException.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="message">异常消息</param>
        </member>
        <member name="M:YDTF.ISOANotFoundException.#ctor(System.String,YDTF.ISOAExceptionLevel)">
            <summary>
            构造函数
            </summary>
            <param name="message">异常消息</param>
            <param name="exceptionLevel">异常级别</param>
        </member>
        <member name="M:YDTF.ISOANotFoundException.#ctor(System.String,YDTF.ISOAExceptionLevel,System.Exception)">
            <summary>
            构造函数
            </summary>
            <param name="message">异常消息</param>
            <param name="exceptionLevel">异常级别</param>
            <param name="innerException">内部异常</param>
        </member>
        <member name="T:YDTF.ISOAFieldException">
            <summary>
            TCP协议封装字段异常
            </summary>
        </member>
        <member name="M:YDTF.ISOAFieldException.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="message">异常消息</param>
        </member>
        <member name="M:YDTF.ISOAFieldException.#ctor(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="message">异常消息</param>
            <param name="className">类名</param>
            <param name="fieldName">字段名</param>
            <param name="maxLen">字段最大长度</param>
            <param name="curLen">字段当前长度</param>
        </member>
        <member name="P:YDTF.ISOAFieldException.ClassName">
            <summary>
            类名
            </summary>
        </member>
        <member name="P:YDTF.ISOAFieldException.FieldName">
            <summary>
            字段名
            </summary>
        </member>
        <member name="P:YDTF.ISOAFieldException.MaxLength">
            <summary>
            字段最大长度
            </summary>
        </member>
        <member name="P:YDTF.ISOAFieldException.CurLength">
            <summary>
            字段当前长度
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.IPredicateExpressionElement">
            <summary>
            断言表达式元素接口
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IPredicateExpressionElement.Contents">
            <summary>
            获取或设置内容
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IPredicateExpressionElement.Type">
            <summary>
            获取或设置元素类型
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.IEntityFactoryCore">
            <summary>
            实体工厂核心接口
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFactoryCore.Create">
            <summary>
            创建实体
            </summary>
            <returns>实体接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFactoryCore.Create(YDTF.ORMSupportClasses.IEntityFieldsCore)">
            <summary>
            创建实体根据实体字段集合
            </summary>
            <param name="fields">字段集合</param>
            <returns>实体接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFactoryCore.CreateEntityCollection">
            <summary>
            创建实体集合
            </summary>
            <returns>实体集合接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFactoryCore.CreateFields">
            <summary>
            创建字段集合
            </summary>
            <returns>字段集合接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFactoryCore.CreateHierarchyFields">
            <summary>
            创建字段集合
            </summary>
            <returns>字段集合接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFactoryCore.GetEntityFactory(System.Object[],System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
            获取实体工厂
            </summary>
            <param name="fieldValues">字段值数组</param>
            <param name="entityFieldStartIndexesPerEntity">实体字段开始的索引</param>
            <returns>实体工厂接口</returns>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityFactoryCore.ForEntityName">
            <summary>
            获取实体名称
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.FieldUtilities">
            <summary>
            字段操作工具
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldUtilities.CalculateHashCodeForValue(System.Object)">
            <summary>
            计算字段当前值的哈希值
            </summary>
            <param name="value">当前值</param>
            <returns>32 位带符号整数哈希代码</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldUtilities.CalculateHashCodeForValue(System.Object,System.Boolean)">
            <summary>
            计算字段当前值的哈希值
            </summary>
            <param name="value">当前值</param>
            <param name="caseSensitiveStringHashCode">是否区分大小写</param>
            <returns>32 位带符号整数哈希代码</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldUtilities.CheckArraysAreEqual(System.Array,System.Array)">
            <summary>
            验证数组是否相等
            </summary>
            <param name="arr1">数组1</param>
            <param name="arr2">数组2</param>
            <returns>相等 true 不等 false</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldUtilities.CheckPrecision(System.String,System.Int32,System.String@)">
            <summary>
            验证负号是否在指定的位置
            </summary>
            <param name="valueAsString">字符串值</param>
            <param name="precision">位置</param>
            <param name="exceptionMessage">错误消息</param>
            <returns>true 成功 false 失败</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldUtilities.CheckPrecisionAndScale(System.String,System.Object@,YDTF.ORMSupportClasses.ScaleOverflowCorrectionAction,System.Int32,System.Int32,System.Boolean@,System.Boolean@,System.String@)">
            <summary>
            验证小数点位置
            </summary>
            <param name="valueAsString">字符串值</param>
            <param name="value">值</param>
            <param name="scaleOverflowCorrectionActionToUse">值溢出标志</param>
            <param name="precision">总位数</param>
            <param name="scale">小数位</param>
            <param name="precisionViolation">总位数是否验证成功</param>
            <param name="scaleViolation">小数位是否验证成功</param>
            <param name="exceptionMessage">错误消息</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldUtilities.CorrectScale(System.Object,System.Int32,YDTF.ORMSupportClasses.ScaleOverflowCorrectionAction,System.Object@)">
            <summary>
            修正小数位
            </summary>
            <param name="valueToCorrect">值</param>
            <param name="scale">小数位</param>
            <param name="action">值溢出标志</param>
            <param name="absoluteValueAfterCorrection">绝对值</param>
            <returns>修正后的值</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldUtilities.CreateFullTypeName(System.Type)">
            <summary>
            创建完全类型名
            </summary>
            <param name="type">类型</param>
            <returns>完全类型名</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldUtilities.DetermineIfFieldShouldBeSet(YDTF.ORMSupportClasses.IEntityFieldCore,System.Boolean,System.Object)">
            <summary>
            字段值要被设置时验证
            </summary>
            <param name="fieldToSet">将要被设置值的字段</param>
            <param name="entityIsNew">是否新增的实体</param>
            <param name="value">设置的值</param>
            <returns>true 允许设置 false 不允许设置</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldUtilities.DetermineRealType(System.Type,System.Boolean)">
            <summary>
            获取真实的类型如果是 Nullable int 返回 int
            </summary>
            <param name="toConvert">转换类型</param>
            <param name="unWrapNullableType">是否是Nullable类型</param>
            <returns>类型</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldUtilities.GetEntityFieldPropertyDescriptors(YDTF.ORMSupportClasses.IEntityCore,System.Collections.Generic.List{System.ComponentModel.PropertyDescriptor}@,System.Collections.Generic.Dictionary{System.String,System.ComponentModel.PropertyDescriptor}@)">
            <summary>
            获取字段属性描述
            </summary>
            <param name="dummyInstance">实体对象</param>
            <param name="instanceProperties">实体属性集合</param>
            <param name="namesAdded">名称集合</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldUtilities.GetEntityFieldStates(System.Collections.IList)">
            <summary>
            获取字段状态
            </summary>
            <param name="fields">字段集合</param>
            <returns>状态集合</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldUtilities.GetNamesOfChangedFields(System.Collections.IList,System.Collections.IList)">
            <summary>
            查找字段值不相等的字段名
            </summary>
            <param name="fieldsA">字段集合A</param>
            <param name="fieldsB">字段集合B</param>
            <returns>值不相等的字段名</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldUtilities.ValuesAreEqual(System.Object,System.Object)">
            <summary>
            比较2个值是否相等
            </summary>
            <param name="value1">值1</param>
            <param name="value2">值2</param>
            <returns>true 相等 false 不等</returns>
        </member>
        <member name="T:YDTF.ORMSupportClasses.ORMFieldValidateException">
            <summary>
            
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ORMFieldValidateException._hasPropertyChanged">
            <summary>
            是否有属性验证
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ORMFieldValidateException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ORMFieldValidateException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ORMFieldValidateException.#ctor(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="hasPropertyChanged"></param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ORMFieldValidateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ORMFieldValidateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="P:YDTF.ORMSupportClasses.ORMFieldValidateException.HasPropertyChanged">
            <summary>
            获取或设置是否有属性验证
            描述: 当页面使用绑定属性验证有值,非绑定就没值.
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.CancelableCollectionChangedEventArgs">
            <summary>
            取消集合修改事件消息
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.CollectionChangedEventArgs">
            <summary>
            集合修改消息
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.CollectionChangedEventArgs._involvedEntity">
            <summary>
            实体接口
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CollectionChangedEventArgs.#ctor(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            构造函数
            </summary>
            <param name="involvedEntity">实体接口</param>
        </member>
        <member name="P:YDTF.ORMSupportClasses.CollectionChangedEventArgs.InvolvedEntity">
            <summary>
            获取或设置实体
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.CancelableCollectionChangedEventArgs._cancel">
            <summary>
            是否取消
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.CancelableCollectionChangedEventArgs.#ctor(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            构造函数
            </summary>
            <param name="involvedEntity">实体接口</param>
        </member>
        <member name="P:YDTF.ORMSupportClasses.CancelableCollectionChangedEventArgs.Cancel">
            <summary>
            获取或设置是否取消
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.IEntityFieldCoreInterpret">
            <summary>
            实体字段核心解析接口
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFieldCoreInterpret.GetValue(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            根据实体获取当前字段的值
            </summary>
            <param name="entity">实体接口</param>
            <returns>当前字段值</returns>
        </member>
        <member name="T:YDTF.ORMSupportClasses.GeneralUtils">
            <summary>
            公共方法
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.GeneralUtils.CheckIfInputIsValid``1(System.Object,System.String,System.Boolean)">
            <summary>
            输入验证
            </summary>
            <typeparam name="T">验证的类型</typeparam>
            <param name="input">输入的对象</param>
            <param name="paramName">参数名</param>
            <param name="canBeNull">是否能为null</param>
            <returns>输入对象</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.GeneralUtils.IsNullableType(System.Type)">
            <summary>
            是否是Nullable类型
            </summary>
            <param name="toCheck">验证的类型</param>
            <returns>true 是带有Nullable的类型 false 不是</returns>
        </member>
        <member name="T:YDTF.ORMSupportClasses.FieldInfoProviderBase">
            <summary>
            字段信息提供者的基类
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.IFieldInfoProvider">
            <summary>
            字段信息提供者接口
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IFieldInfoProvider.GetEntityFields(System.String)">
            <summary>
            获取实体字段集合
            </summary>
            <param name="entityName">元素名称(实体名)</param>
            <returns>字段集合接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IFieldInfoProvider.GetEntityFieldsArray(System.String)">
            <summary>
            获取实体字段数组
            </summary>
            <param name="entityName">实体名称</param>
            <returns>字段数组</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IFieldInfoProvider.GetFieldIndexes(System.String)">
            <summary>
            或字段索引字典
            </summary>
            <param name="elementName">元素名称(实体名)</param>
            <returns>索引字典 </returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IFieldInfoProvider.GetFieldInfo(System.Enum)">
            <summary>
            获取字段信息
            </summary>
            <param name="fieldIndex">字段索引的枚举</param>
            <returns>字段信息</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IFieldInfoProvider.GetFieldInfo(System.String,System.Int32)">
            <summary>
            获取字段信息
            </summary>
            <param name="elementName">元素名称(实体名)</param>
            <param name="elementFieldIndex">元素字段索引</param>
            <returns>字段信息接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IFieldInfoProvider.GetFieldInfo(System.String,System.String)">
            <summary>
            获取字段信息
            </summary>
            <param name="elementName">元素名称(实体名)</param>
            <param name="elementFieldName">元素字段名称</param>
            <returns>字段信息接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IFieldInfoProvider.GetFieldInfos(System.String)">
            <summary>
            获取字段信息数组
            </summary>
            <param name="elementName">元素名称(实体名)</param>
            <returns>字段信息数组接口</returns>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldInfoProviderBase._elementFieldInfos">
            <summary>
            字段信息字典
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldInfoProviderBase._elementNamePerFieldIndexEnum">
            <summary>
            字段信息枚举字典
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldInfoProviderBase.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldInfoProviderBase.AddElementFieldInfo(System.String,System.String,System.Type,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Byte,System.Byte)">
            <summary>
            新增元素字段信息
            </summary>
            <param name="elementName">元素名称(实体名称)</param>
            <param name="elementFieldName">元素字段名称(属性名称)</param>
            <param name="dataType">数据类型</param>
            <param name="isPrimaryKey">是否主键</param>
            <param name="isForeignKey">是否外键</param>
            <param name="isReadOnly">是否只读</param>
            <param name="isNullable">是否能为null</param>
            <param name="fieldIndex">字段索引</param>
            <param name="maxLength">最大长度</param>
            <param name="scale">小数位</param>
            <param name="precision">精度</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldInfoProviderBase.AddFieldIndexEnumForElementName(System.Type,System.String)">
            <summary>
            新增枚举元素名
            </summary>
            <param name="fieldIndexEnum">枚举类型</param>
            <param name="elementName">元素名称</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldInfoProviderBase.ConstructElementFieldStructures(System.String)">
            <summary>
            建造字段结构
            </summary>
            <param name="elementName">实体名称</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldInfoProviderBase.CreateEntityField2(YDTF.ORMSupportClasses.IFieldInfo)">
            <summary>
            创建实体字段
            </summary>
            <param name="fieldInfo">字段信息</param>
            <returns>实体字段接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldInfoProviderBase.GetElementFieldInfos(System.String)">
            <summary>
            获取元素字段信息
            </summary>
            <param name="elementName">元素名(实体名称)</param>
            <returns>元素字段集合</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldInfoProviderBase.GetEntityFields(System.String)">
            <summary>
            获取实体字段集合
            </summary>
            <param name="entityName">元素名称(实体名)</param>
            <returns>字段集合接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldInfoProviderBase.GetEntityFieldsArray(System.String)">
            <summary>
            获取实体字段数组
            </summary>
            <param name="entityName">实体名称</param>
            <returns>字段数组</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldInfoProviderBase.GetFieldIndexes(System.String)">
            <summary>
            或字段索引字典
            </summary>
            <param name="elementName">元素名称(实体名)</param>
            <returns>索引字典 </returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldInfoProviderBase.GetFieldInfo(System.Enum)">
            <summary>
            获取字段信息
            </summary>
            <param name="fieldIndex">字段索引的枚举</param>
            <returns>字段信息</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldInfoProviderBase.GetFieldInfo(System.String,System.Int32)">
            <summary>
            获取字段信息
            </summary>
            <param name="elementName">元素名称(实体名)</param>
            <param name="elementFieldIndex">元素字段索引</param>
            <returns>字段信息接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldInfoProviderBase.GetFieldInfo(System.String,System.String)">
            <summary>
            获取字段信息
            </summary>
            <param name="elementName">元素名称(实体名)</param>
            <param name="elementFieldName">元素字段名称</param>
            <returns>字段信息接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldInfoProviderBase.GetFieldInfos(System.String)">
            <summary>
            获取字段信息数组
            </summary>
            <param name="elementName">元素名称(实体名)</param>
            <returns>字段信息数组接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldInfoProviderBase.InitClass(System.Int32)">
            <summary>
            初始化类型
            </summary>
            <param name="capacity">默认长度</param>
        </member>
        <member name="T:YDTF.ORMSupportClasses.FieldInfoProviderBase.ElementFields">
            <summary>
            元素字段信息
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldInfoProviderBase.ElementFields._elementFieldIndexes">
            <summary>
            元素字段索引字典
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldInfoProviderBase.ElementFields._elementFields">
            <summary>
            元素字段集合字典
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldInfoProviderBase.ElementFields._elementFieldsOnIndex">
            <summary>
            元素字段索引元素字典
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldInfoProviderBase.ElementFields._entityNamesOfFields">
            <summary>
            实体名称集合
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldInfoProviderBase.ElementFields._fieldInfos">
            <summary>
            字段信息数组
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldInfoProviderBase.ElementFields._overridenFieldIndices">
            <summary>
            开放字段信息索引集合
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldInfoProviderBase.ElementFields._pkFieldIndices">
            <summary>
            主键索引集合
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldInfoProviderBase.ElementFields.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldInfoProviderBase.ElementFields.PostProcessInfo">
            <summary>
            审核信息
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldInfoProviderBase.ElementFields.ElementFieldIndexes">
            <summary>
            获取元素字段索引字典
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldInfoProviderBase.ElementFields.ElementFieldInfos">
            <summary>
            获取元素字段集合字典
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldInfoProviderBase.ElementFields.ElementFieldsOnIndex">
            <summary>
            获取元素字段索引元素字典
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldInfoProviderBase.ElementFields.EntityNamesOfFields">
            <summary>
            获取实体名称集合
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldInfoProviderBase.ElementFields.FieldInfos">
            <summary>
            获取字段信息数组
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldInfoProviderBase.ElementFields.OverridenFieldIndices">
            <summary>
            获取开放字段信息索引集合
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldInfoProviderBase.ElementFields.PkFieldIndices">
            <summary>
            获取主键索引集合
            </summary>
        </member>
        <member name="T:YDTF.ReturnVODicByHTTPWEB001">
            <summary>
            返回VODictionary集合
            传输协议: HTTP
            WEBService版本: 001
            </summary>
        </member>
        <member name="F:YDTF.ReturnVODicByHTTPWEB001.isInit">
            <summary>
            是否需要初始化
            </summary>
        </member>
        <member name="F:YDTF.ReturnVODicByHTTPWEB001.numLen">
            <summary>
            解析集合个数的长度
            </summary>
        </member>
        <member name="F:YDTF.ReturnVODicByHTTPWEB001.headerEncoding">
            <summary>
            头包的编码
            </summary>
        </member>
        <member name="F:YDTF.ReturnVODicByHTTPWEB001.errorEncoding">
            <summary>
            错误包的编码
            </summary>
        </member>
        <member name="F:YDTF.ReturnVODicByHTTPWEB001.dataEncoding">
            <summary>
            数据包的编码
            </summary>
        </member>
        <member name="M:YDTF.ReturnVODicByHTTPWEB001.OrganizeOutput(System.String,System.Object)">
            <summary>
            组织输出数据集
            </summary>
            <param name="serviceName">服务名称</param>
            <param name="outputParm">输入参数</param>
            <returns>数据集</returns>
        </member>
        <member name="M:YDTF.ReturnVODicByHTTPWEB001.InitEncoding(System.String)">
            <summary>
            初始化编码(此方法只初始化一次 第一次掉服务的时候执行)
            </summary>
            <param name="serviceName">服务名</param>
        </member>
        <member name="M:YDTF.ReturnVODicByHTTPWEB001.UpPackToVO(YDTF.ORMSupportClasses.IEntity2,System.Byte[],System.Int32,System.Int32,System.Text.Encoding)">
            <summary>
            解包到VO集合
            </summary>
            <param name="temEntity">实体</param>
            <param name="outputBytes">输出参数</param>
            <param name="index">开始索引</param>
            <param name="entityCount">实体总数</param>
            <param name="encoding">字符编码格式</param>
            <returns>实体集合</returns>
        </member>
        <member name="M:YDTF.ReturnVODicByHTTPWEB001.GetValueFromBytes(System.Byte[],System.Int32,System.Int32,System.Type,System.Text.Encoding)">
            <summary>
            通过字节数组转换值
            </summary>
            <param name="outputBytes">输出字节</param>
            <param name="beginIndex">开始遍历输出字节的索引</param>
            <param name="maxLength">最大长度</param>
            <param name="dataType">数据类型</param>
            <param name="encoding">字符编码格式</param>
            <returns>转换后的值</returns>
        </member>
        <member name="M:YDTF.ReturnVODicByHTTPWEB001.GetStringValueFromBytes(System.Byte[],System.Byte,System.Int32,System.Int32,System.Text.Encoding)">
            <summary>
            通过字节数组转换字符串值
            描述：此方法用在旧的ISOA 版本， 新版本中字符串末尾值填充 0 ,旧版本中字符串末尾值填充 32.
            </summary>
            <param name="outputBytes">输出字节</param>
            <param name="conditionByte">条件</param>
            <param name="beginIndex">开始遍历输出字节的索引</param>
            <param name="maxLength">最大长度</param>
            <param name="encoding">字符编码格式</param>
            <returns>转换后的值</returns>
        </member>
        <member name="M:YDTF.ReturnVODicByHTTPWEB001.GetValueFromBytes(System.Byte[],System.Byte,System.Int32,System.Int32,System.Text.Encoding)">
            <summary>
            通过字节数组转换值
            </summary>
            <param name="outputBytes">输出字节</param>
            <param name="conditionByte">条件</param>
            <param name="beginIndex">开始遍历输出字节的索引</param>
            <param name="maxLength">最大长度</param>
            <param name="encoding">字符编码格式</param>
            <returns>转换后的值</returns>
        </member>
        <member name="T:YDTF.VO.EntityFieldsFactory">
            <summary>
            实体字段工厂
            </summary>
        </member>
        <member name="M:YDTF.VO.EntityFieldsFactory.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YDTF.VO.EntityFieldsFactory.CreateEntityFieldsObject(System.String)">
            <summary>
            创建实体字段集合对象
            </summary>
            <param name="relatedEntityName">实体名称</param>
            <returns>实体字段集合接口</returns>
        </member>
        <member name="M:YDTF.VO.EntityFieldsFactory.CreateFields(System.String)">
            <summary>
            创建字段集合
            </summary>
            <param name="entityName">实体名称</param>
            <returns>字段集合基类数组</returns>
        </member>
        <member name="T:YDTF.AServiceAdapter">
            <summary>
            多种协议访问后台服务
            </summary>
        </member>
        <member name="F:YDTF.AServiceAdapter.logWorkQueues">
            <summary>
            日志工作队列
            </summary>
        </member>
        <member name="F:YDTF.AServiceAdapter.isInit">
            <summary>
            是否需要初始化
            </summary>
        </member>
        <member name="F:YDTF.AServiceAdapter.headerEncoding">
            <summary>
            头包的编码
            </summary>
        </member>
        <member name="F:YDTF.AServiceAdapter.errorEncoding">
            <summary>
            错误包的编码
            </summary>
        </member>
        <member name="F:YDTF.AServiceAdapter.dataEncoding">
            <summary>
            数据包的编码
            </summary>
        </member>
        <member name="M:YDTF.AServiceAdapter.#cctor">
            <summary>
            静态构造函数
            </summary>
        </member>
        <member name="M:YDTF.AServiceAdapter.StaticInit">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:YDTF.AServiceAdapter.logWorkQueues_UserWork(System.Object,YDTF.WorkQueue{System.Text.StringBuilder}.EnqueueEventArgs)">
            <summary>
            记入日志事件
            </summary>
            <param name="sender">事件源</param>
            <param name="e">消息</param>
        </member>
        <member name="F:YDTF.AServiceAdapter.dicRunGNID">
            <summary>
            登记运行功能
            </summary>
        </member>
        <member name="M:YDTF.AServiceAdapter.OrganizeInput(System.String,System.Object[])">
            <summary>
            组织输入参数
            </summary>
            <param name="serviceName">服务名称</param>
            <param name="inputValues">输入参数</param>
            <returns>转换后的输入参数</returns>
        </member>
        <member name="M:YDTF.AServiceAdapter.InvokeService(System.String,System.Object)">
            <summary>
            HTTP、TCP/IP等多种协议调用服务
            </summary>
            <param name="serviceName">服务名称</param>
            <param name="inputParm">输入参数</param>
            <returns>字符串</returns>
        </member>
        <member name="M:YDTF.AServiceAdapter.OrganizeOutput``1(System.String,System.Object)">
            <summary>
            组织输出数据集
            </summary>
            <typeparam name="T">返回集合类型</typeparam>
            <param name="serviceName">服务名称</param>
            <param name="outputParm">输入参数</param>
            <returns>数据集</returns>
        </member>
        <member name="M:YDTF.AServiceAdapter.CallService``1(System.String,System.String,System.Object[])">
            <summary>
            调用IDP服务
            </summary>
            <typeparam name="T">返回集合类型</typeparam>
            <param name="gnid">功能ID:功能唯一标识</param>
            <param name="serviceName">服务名称</param>
            <param name="inputValues">参数个数不限;参数类型为值对象(VO_表名)或List值对象两种</param>
            <returns>数据集</returns>
        </member>
        <member name="M:YDTF.AServiceAdapter.InitEncoding(System.String)">
            <summary>
            初始化编码(此方法只初始化一次 第一次掉服务的时候执行)
            </summary>
            <param name="serviceName">服务名</param>
        </member>
        <member name="F:YDTF.AServiceAdapter._inPutParam">
            <summary>
            输入参数调试设置
            </summary>
        </member>
        <member name="F:YDTF.AServiceAdapter._outPutParam">
            <summary>
            输出参数调试设置
            </summary>
        </member>
        <member name="P:YDTF.AServiceAdapter.HeaderEncoding">
            <summary>
            获取头包的编码
            </summary>
        </member>
        <member name="P:YDTF.AServiceAdapter.ErrorEncoding">
            <summary>
            获取错误包的编码
            </summary>
        </member>
        <member name="P:YDTF.AServiceAdapter.DataEncoding">
            <summary>
            获取数据包的编码
            </summary>
        </member>
        <member name="P:YDTF.AServiceAdapter.InPutParamDebugSet">
            <summary>
            输入参数调试设置
            </summary>
        </member>
        <member name="P:YDTF.AServiceAdapter.OutPutParamDebugSet">
            <summary>
            输出参数调试设置
            </summary>
        </member>
        <member name="T:YDTF.AServiceAdapter.InPutParam">
            <summary>
            输入参数(调试用)
            </summary>
            <param name="inPutStr">输入参数</param>
        </member>
        <member name="T:YDTF.AServiceAdapter.OutPutParam">
            <summary>
            输出参数(调试用)
            </summary>
            <param name="outPutStr">输出参数</param>
        </member>
        <member name="T:YDTF.ORMSupportClasses.FieldStateBucket">
            <summary>
            字段状态
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldStateBucket._isChangedMask">
            <summary>
            修改描述
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldStateBucket._isNullMask">
            <summary>
            null描述
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldStateBucket._currentValue">
            <summary>
            当前值
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldStateBucket._dbValue">
            <summary>
            数据库值
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldStateBucket._flags">
            <summary>
            标志
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldStateBucket.#ctor(System.Object,System.Object,System.Boolean,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="currentValue">当前值</param>
            <param name="dbValue">数据库值</param>
            <param name="isChanged">是否修改</param>
            <param name="isNull">是否null</param>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldStateBucket.IsChanged">
            <summary>
            获取是否修改
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldStateBucket.IsNull">
            <summary>
            获取是否null
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldStateBucket.CurrentValue">
            <summary>
            获取当前值
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldStateBucket.DbValue">
            <summary>
            获取数据库值
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.FastDictionary`2">
            <summary>
            快速的数据字典
            </summary>
            <typeparam name="TKey">TKey</typeparam>
            <typeparam name="TValue">TValue</typeparam>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FastDictionary`2._info">
            <summary>
            系列化信息
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FastDictionary`2.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FastDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>
            构造函数
            </summary>
            <param name="d">数据字典接口</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FastDictionary`2.#ctor(System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="capacity">可包含的初始元素数</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FastDictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            构造函数
            </summary>
            <param name="info">系列化信息</param>
            <param name="context">上下文信息</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FastDictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            实现 System.Runtime.Serialization.ISerializable 接口，并返回序列化实例所需的数据
            </summary>
            <param name="info">系列化信息</param>
            <param name="context">上下文信息</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FastDictionary`2.OnDeserialization(System.Object)">
            <summary>
            反序列化
            </summary>
            <param name="sender">对象</param>
        </member>
        <member name="T:YDTF.ORMSupportClasses.EntityFactoryCore2">
            <summary>
            实体工厂核心类
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.IEntityFactory2">
            <summary>
            实体工厂接口
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFactory2.Create">
            <summary>
            创建实体
            </summary>
            <returns>实体接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFactory2.Create(YDTF.ORMSupportClasses.IEntityFields2)">
            <summary>
            创建实体根据实体字段集合
            </summary>
            <param name="fields">字段集合</param>
            <returns>实体接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFactory2.CreateEntityCollection">
            <summary>
            创建实体集合
            </summary>
            <returns>实体集合接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFactory2.CreateEntityFromEntityTypeValue(System.Int32)">
            <summary>
            根据实体类型创建实体
            </summary>
            <param name="entityTypeValue">实体类型索引</param>
            <returns>实体接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFactory2.CreateFields">
            <summary>
            创建字段集合
            </summary>
            <returns>字段集合接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFactory2.CreateHierarchyFields">
            <summary>
            创建字段集合
            </summary>
            <returns>字段集合接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFactory2.GetEntityFactory(System.Object[],System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
            获取实体工厂
            </summary>
            <param name="fieldValues">字段值数组</param>
            <param name="entityFieldStartIndexesPerEntity">实体字段开始的索引</param>
            <returns>实体工厂接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFactory2.GetEntityTypeFilter(System.Boolean)">
            <summary>
            获取实体类型刷选计算表达式
            </summary>
            <param name="negate">是否取相反</param>
            <returns>计算表达式接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFactory2.GetEntityTypeFilter(System.Boolean,System.String)">
            <summary>
            获取实体类型刷选计算表达式
            </summary>
            <param name="negate">是否取相反</param>
            <param name="objectAlias">别名</param>
            <returns>计算表达式接口</returns>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityFactoryCore2._entityName">
            <summary>
            实体名称
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFactoryCore2.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="entityName">实体名称</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFactoryCore2.Create">
            <summary>
            创建实体
            </summary>
            <returns>实体接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFactoryCore2.Create(YDTF.ORMSupportClasses.IEntityFields2)">
            <summary>
            创建实体根据实体字段集合
            </summary>
            <param name="fields">字段集合</param>
            <returns>实体接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFactoryCore2.CreateEntityCollection">
            <summary>
            创建实体集合
            </summary>
            <returns>实体集合接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFactoryCore2.CreateEntityFromEntityTypeValue(System.Int32)">
            <summary>
            根据实体类型创建实体
            </summary>
            <param name="entityTypeValue">实体类型索引</param>
            <returns>实体接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFactoryCore2.CreateFields">
            <summary>
            创建字段集合
            </summary>
            <returns>字段集合接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFactoryCore2.CreateHierarchyFields">
            <summary>
            创建字段集合
            </summary>
            <returns>字段集合接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFactoryCore2.GetEntityFactory(System.Object[],System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
            获取实体工厂
            </summary>
            <param name="fieldValues">字段值数组</param>
            <param name="entityFieldStartIndexesPerEntity">实体字段开始的索引</param>
            <returns>实体工厂接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFactoryCore2.GetEntityTypeFilter(System.Boolean)">
            <summary>
            获取实体类型刷选计算表达式
            </summary>
            <param name="negate">是否取相反</param>
            <returns>计算表达式接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFactoryCore2.GetEntityTypeFilter(System.Boolean,System.String)">
            <summary>
            获取实体类型刷选计算表达式
            </summary>
            <param name="negate">是否取相反</param>
            <param name="objectAlias">别名</param>
            <returns>计算表达式接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFactoryCore2.YDTF#ORMSupportClasses#IEntityFactoryCore#Create">
            <summary>
            创建实体
            </summary>
            <returns>实体接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFactoryCore2.YDTF#ORMSupportClasses#IEntityFactoryCore#Create(YDTF.ORMSupportClasses.IEntityFieldsCore)">
            <summary>
            创建实体根据实体字段集合
            </summary>
            <param name="fields">字段集合</param>
            <returns>实体接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFactoryCore2.YDTF#ORMSupportClasses#IEntityFactoryCore#CreateEntityCollection">
            <summary>
            创建实体集合
            </summary>
            <returns>实体集合接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFactoryCore2.YDTF#ORMSupportClasses#IEntityFactoryCore#CreateFields">
            <summary>
            创建字段集合
            </summary>
            <returns>字段集合接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFactoryCore2.YDTF#ORMSupportClasses#IEntityFactoryCore#CreateHierarchyFields">
            <summary>
            创建字段集合
            </summary>
            <returns>字段集合接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFactoryCore2.YDTF#ORMSupportClasses#IEntityFactoryCore#GetEntityFactory(System.Object[],System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
            获取实体工厂
            </summary>
            <param name="fieldValues">字段值数组</param>
            <param name="entityFieldStartIndexesPerEntity">实体字段开始的索引</param>
            <returns>实体工厂接口</returns>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFactoryCore2.ForEntityName">
            <summary>
            获取实体名称
            </summary>
        </member>
        <member name="T:YDTF.ReturnVODicByHTTPISOA605">
            <summary>
            返回VODictionary集合
            传输协议: HTTP
            ISOA版本: 605
            </summary>
        </member>
        <member name="M:YDTF.ReturnVODicByHTTPISOA605.OrganizeOutput(System.String,System.Object)">
            <summary>
            组织输出数据集
            </summary>
            <param name="serviceName">服务名称</param>
            <param name="outputParm">输入参数</param>
            <returns>数据集</returns>
        </member>
        <member name="M:YDTF.ReturnVODicByHTTPISOA605.UpPackToEntity(System.Xml.XmlTextReader,YDTF.ReturnVODicByHTTPISOA605.EntityInfo)">
            <summary>
            解包成实体
            </summary>
            <param name="textReader">xml读取器</param>
            <param name="entityInfo">实体信息</param>
        </member>
        <member name="T:YDTF.ReturnVODicByHTTPISOA605.EntityInfo">
            <summary>
            实体信息
            </summary>
        </member>
        <member name="F:YDTF.ReturnVODicByHTTPISOA605.EntityInfo._entityFactory">
            <summary>
            实体工厂
            </summary>
        </member>
        <member name="F:YDTF.ReturnVODicByHTTPISOA605.EntityInfo._entityCollection">
            <summary>
            实体集合
            </summary>
        </member>
        <member name="P:YDTF.ReturnVODicByHTTPISOA605.EntityInfo.EntityFactory">
            <summary>
            获取或设置实体工厂
            </summary>
        </member>
        <member name="P:YDTF.ReturnVODicByHTTPISOA605.EntityInfo.EntityCollection">
            <summary>
            获取或设置实体集合
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.SortClause">
            <summary>
            排序类
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.ISortClause">
            <summary>
            排序接口
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.ISortClause.CaseSensitiveCollation">
            <summary>
            获取或设置是否忽略大小写
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.ISortClause.FieldToSortCore">
            <summary>
            获取或设置排序字段
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.ISortClause.ObjectAlias">
            <summary>
            获取或设置对象别名
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.ISortClause.PersistenceInfo">
            <summary>
            获取或设置字段保留信息
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.ISortClause.SortOperatorToUse">
            <summary>
            获取或设置排序操作符
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.SortClause._caseSensitiveCollation">
            <summary>
            是否忽略大小写
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.SortClause._fieldToSortCore">
            <summary>
            排序字段
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.SortClause._objectAlias">
            <summary>
            对象别名
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.SortClause._persistenceInfo">
            <summary>
            字段保留信息
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.SortClause._sortOperatorToUse">
            <summary>
            排序操作符
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.SortClause.#ctor(YDTF.ORMSupportClasses.IEntityFieldCore,YDTF.ORMSupportClasses.IFieldPersistenceInfo,YDTF.ORMSupportClasses.SortOperator)">
            <summary>
            构造函数
            </summary>
            <param name="fieldToSort">排序字段</param>
            <param name="persistenceInfo">字段保留信息</param>
            <param name="sortOperatorToUse">排序操作符</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.SortClause.#ctor(YDTF.ORMSupportClasses.IEntityFieldCore,YDTF.ORMSupportClasses.IFieldPersistenceInfo,YDTF.ORMSupportClasses.SortOperator,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="fieldToSort">排序字段</param>
            <param name="persistenceInfo">字段保留信息</param>
            <param name="sortOperatorToUse">排序操作符</param>
            <param name="objectAlias">对象别名</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.SortClause.SetCaseSensitiveCollation(System.Boolean)">
            <summary>
            设置是否忽略大小写
            </summary>
            <param name="value">true 忽略 false 不忽略</param>
            <returns>设置的对象</returns>
        </member>
        <member name="P:YDTF.ORMSupportClasses.SortClause.CaseSensitiveCollation">
            <summary>
            获取或设置是否忽略大小写
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.SortClause.FieldToSortCore">
            <summary>
            获取或设置排序字段
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.SortClause.ObjectAlias">
            <summary>
            获取或设置对象别名
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.SortClause.PersistenceInfo">
            <summary>
            获取或设置字段保留信息
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.SortClause.SortOperatorToUse">
            <summary>
            获取或设置排序操作符
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.PredicateExpressionElement">
            <summary>
            断言表达式元素
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.PredicateExpressionElement._contents">
            <summary>
            内容
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.PredicateExpressionElement._type">
            <summary>
            断言表达式元素类型
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.PredicateExpressionElement.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.PredicateExpressionElement.#ctor(YDTF.ORMSupportClasses.PredicateExpressionElementType,System.Object)">
            <summary>
            构造函数
            </summary>
            <param name="elementType">元素类型</param>
            <param name="contents">内容</param>
        </member>
        <member name="P:YDTF.ORMSupportClasses.PredicateExpressionElement.Contents">
            <summary>
            获取或设置内容
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.PredicateExpressionElement.Type">
            <summary>
            获取或设置元素类型
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.FieldCompareExpressionPredicate">
            <summary>
            字段比较表达式断言类
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldCompareExpressionPredicate._comparisonOperator">
            <summary>
            比较操作符
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldCompareExpressionPredicate._expression">
            <summary>
            表达式
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldCompareExpressionPredicate._field">
            <summary>
            实体字段
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldCompareExpressionPredicate._persistenceInfo">
            <summary>
            字段保留信息
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldCompareExpressionPredicate.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldCompareExpressionPredicate.#ctor(YDTF.ORMSupportClasses.IEntityFieldCore,YDTF.ORMSupportClasses.IFieldPersistenceInfo,YDTF.ORMSupportClasses.ComparisonOperator,YDTF.ORMSupportClasses.IExpression)">
            <summary>
            构造函数
            </summary>
            <param name="field">字段</param>
            <param name="persistenceInfo">字段保留信息</param>
            <param name="operatorToUse">比较操作符</param>
            <param name="expressionToCompare">表达式</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldCompareExpressionPredicate.#ctor(YDTF.ORMSupportClasses.IEntityFieldCore,YDTF.ORMSupportClasses.IFieldPersistenceInfo,YDTF.ORMSupportClasses.ComparisonOperator,YDTF.ORMSupportClasses.IExpression,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="field">字段</param>
            <param name="persistenceInfo">字段保留信息</param>
            <param name="operatorToUse">比较操作符</param>
            <param name="expressionToCompare">表达式</param>
            <param name="negate">是否无效</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldCompareExpressionPredicate.#ctor(YDTF.ORMSupportClasses.IEntityFieldCore,YDTF.ORMSupportClasses.IFieldPersistenceInfo,YDTF.ORMSupportClasses.ComparisonOperator,YDTF.ORMSupportClasses.IExpression,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="field">字段</param>
            <param name="persistenceInfo">字段保留信息</param>
            <param name="operatorToUse">比较操作符</param>
            <param name="expressionToCompare">表达式</param>
            <param name="objectAlias">对象别名</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldCompareExpressionPredicate.#ctor(YDTF.ORMSupportClasses.IEntityFieldCore,YDTF.ORMSupportClasses.IFieldPersistenceInfo,YDTF.ORMSupportClasses.ComparisonOperator,YDTF.ORMSupportClasses.IExpression,System.String,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="field">字段</param>
            <param name="persistenceInfo">字段保留信息</param>
            <param name="operatorToUse">比较操作符</param>
            <param name="expressionToCompare">表达式</param>
            <param name="objectAlias">对象别名</param>
            <param name="negate">是否无效</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldCompareExpressionPredicate.GetFrameworkElementsInPredicate">
            <summary>
            获取框架元素
            </summary>
            <returns>列表集合</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldCompareExpressionPredicate.InitClass(YDTF.ORMSupportClasses.IEntityFieldCore,YDTF.ORMSupportClasses.IFieldPersistenceInfo,YDTF.ORMSupportClasses.ComparisonOperator,YDTF.ORMSupportClasses.IExpression,System.Boolean,System.Boolean,System.String)">
            <summary>
            初始化类
            </summary>
            <param name="field">字段</param>
            <param name="persistenceInfo">字段保留信息</param>
            <param name="comparisonOperator">比较操作符</param>
            <param name="expression">表达式</param>
            <param name="negate">是否无效</param>
            <param name="selfServicing">自己维护</param>
            <param name="objectAlias">对象别名</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldCompareExpressionPredicate.InterpretPredicate(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            解析刷选条件  比如解析> == != 这样的
            </summary>
            <param name="entity">实体</param>
            <returns>true 成功 false 失败</returns>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldCompareExpressionPredicate.ExpressionToCompareWith">
            <summary>
            获取或设置表达式
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldCompareExpressionPredicate.FieldCore">
            <summary>
            获取或设置字段
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldCompareExpressionPredicate.Operator">
            <summary>
            获取或设置操作符
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldCompareExpressionPredicate.PersistenceInfo">
            <summary>
            获取或设置保留信息
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.ORMInterpretationException">
            <summary>
            
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ORMInterpretationException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ORMInterpretationException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ORMInterpretationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:YDTF.ORMSupportClasses.ExpressionElementType">
            <summary>
            表达式元素类型
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ExpressionElementType.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ExpressionElementType.Field">
            <summary>
            字段
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ExpressionElementType.Expression">
            <summary>
            表达式
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ExpressionElementType.FunctionCall">
            <summary>
            函数回调
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ExpressionElementType.ScalarQuery">
            <summary>
            查询
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ExpressionElementType.Predicate">
            <summary>
            断言
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.ComparisonOperator">
            <summary>
            比较操作符
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ComparisonOperator.Equal">
            <summary>
            ==
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ComparisonOperator.LessEqual">
            <summary>
            〈=
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ComparisonOperator.LesserThan">
            <summary>
            〈
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ComparisonOperator.GreaterEqual">
            <summary>
            >=
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ComparisonOperator.GreaterThan">
            <summary>
            >
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ComparisonOperator.NotEqual">
            <summary>
            !=
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ComparisonOperator.None">
            <summary>
            无
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.TypeContainedAttribute">
            <summary>
            类型内容特性
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.TypeContainedAttribute._typeContainedInCollection">
            <summary>
            在集合中类型
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.TypeContainedAttribute.#ctor(System.Type)">
            <summary>
            构造函数
            </summary>
            <param name="typeContainedInCollection">在集合中类型</param>
        </member>
        <member name="P:YDTF.ORMSupportClasses.TypeContainedAttribute.TypeContainedInCollection">
            <summary>
            获取在集合中类型
            </summary>
        </member>
        <member name="T:YDTF.CallServiceByTCPISOA605">
            <summary>
            调用VODictionary服务
            传输协议: TCP
            ISOA版本: 605
            </summary>
        </member>
        <member name="F:YDTF.CallServiceByTCPISOA605.dicServiceCallBacks">
            <summary>
            服务回调返回参数接口
            </summary>
        </member>
        <member name="F:YDTF.CallServiceByTCPISOA605.numLen">
            <summary>
            解析集合个数的长度
            </summary>
        </member>
        <member name="M:YDTF.CallServiceByTCPISOA605.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YDTF.CallServiceByTCPISOA605.Initial">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:YDTF.CallServiceByTCPISOA605.OrganizeInput(System.String,System.Object[])">
            <summary>
            组织输入参数
            </summary>
            <param name="serviceName">服务名称</param>
            <param name="inputValues">输入参数</param>
            <returns>转换后的输入参数</returns>
        </member>
        <member name="M:YDTF.CallServiceByTCPISOA605.VerifyInputValues(System.String,System.Object[])">
            <summary>
            核实输入参数
            </summary>
            <param name="serviceName">服务名称</param>
            <param name="inputValues">输入参数</param>
            <returns>核实是否成功 成功：返回空字符串 失败：返回错误消息</returns>
        </member>
        <member name="M:YDTF.CallServiceByTCPISOA605.UnPackToTCPStr(System.Text.StringBuilder,YDTF.ORMSupportClasses.IEntity2)">
            <summary>
            把实体打包成TCP字符串
            </summary>
            <param name="strParam">需要拼接的输入参数</param>
            <param name="entity">实体</param>        
        </member>
        <member name="M:YDTF.CallServiceByTCPISOA605.UnPackToTCPStr(System.Text.StringBuilder,YDTF.ORMSupportClasses.IEntity2,System.String)">
            <summary>
             把实体打包成TCP字符串
            </summary>
            <param name="strParam">需要拼接的输入参数</param>
            <param name="entity">实体</param>
            <param name="fillEmptyStr">当值为空时填充的字符</param>
        </member>
        <member name="M:YDTF.CallServiceByTCPISOA605.InvokeService(System.String,System.Object)">
            <summary>
            TCP调用服务
            </summary>
            <param name="serviceName">服务名称</param>
            <param name="inputParm">输入参数</param>
            <returns>字符串</returns>
        </member>
        <member name="M:YDTF.CallServiceByTCPISOA605.OrganizeOutput``1(System.String,System.Object)">
            <summary>
            组织输出数据集
            </summary>
            <param name="serviceName">服务名称</param>
            <param name="outputParm">输入参数</param>
            <returns>数据集</returns>
        </member>
        <member name="T:YDTF.ORMSupportClasses.PredicateExpression">
            <summary>
            断言表达式类
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.PredicateExpression._predicates">
            <summary>
            断言表达式集合
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.PredicateExpression.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.PredicateExpression.#ctor(YDTF.ORMSupportClasses.IPredicate)">
            <summary>
            构造函数
            </summary>
            <param name="predicateToAdd">断言表达式接口</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.PredicateExpression.#ctor(YDTF.ORMSupportClasses.IPredicate,YDTF.ORMSupportClasses.PredicateExpressionOperator,YDTF.ORMSupportClasses.IPredicate)">
            <summary>
            构造函数
            </summary>
            <param name="operand1">断言表达式接口</param>
            <param name="predicateExpressionOperator">断言表达式操作符</param>
            <param name="operand2">断言表达式接口</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.PredicateExpression.Add(YDTF.ORMSupportClasses.IPredicate)">
            <summary>
            新增
            </summary>
            <param name="predicateToAdd">新增表达式接口</param>
            <returns>断言表达式接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.PredicateExpression.AddPredicate(YDTF.ORMSupportClasses.IPredicate,YDTF.ORMSupportClasses.PredicateExpressionOperator)">
            <summary>
            新增
            </summary>
            <param name="predicateToAdd">新增表达式接口</param>
            <param name="operatorToUse">断言表达式操作符</param>
            <returns>断言表达式接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.PredicateExpression.AddWithAnd(YDTF.ORMSupportClasses.IPredicate)">
            <summary>
            新增And操作
            </summary>
            <param name="predicateToAdd">新增表达式接口</param>
            <returns>断言表达式接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.PredicateExpression.AddWithOr(YDTF.ORMSupportClasses.IPredicate)">
            <summary>
            新增Or操作
            </summary>
            <param name="predicateToAdd">新增表达式接口</param>
            <returns>断言表达式接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.PredicateExpression.Clear">
            <summary>
            从集合中移除所有元素。
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.PredicateExpression.GetEnumerator">
            <summary>
            返回循环访问集合的枚举器。
            </summary>
            <returns>用于集合的Enumerator</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.PredicateExpression.GetFrameworkElementsInPredicate">
            <summary>
            获取框架元素
            </summary>
            <returns>列表集合</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.PredicateExpression.InterpretPredicate(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            解析刷选条件  比如解析> == != 这样的
            </summary>
            <param name="entity">实体</param>
            <returns>true 成功 false 失败</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.PredicateExpression.System#Collections#Generic#IEnumerable{YDTF#ORMSupportClasses#IPredicateExpressionElement}#GetEnumerator">
            <summary>
            返回循环访问集合的枚举器。
            </summary>
            <returns>用于集合的Enumerator</returns>
        </member>
        <member name="P:YDTF.ORMSupportClasses.PredicateExpression.Count">
            <summary>
            获取集合中实际包含的元素数。
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.PredicateExpression.Item(System.Int32)">
            <summary>
            获取或设置指定索引处的元素。
            </summary>
            <param name="index">要获得或设置的元素从零开始的索引。</param>
            <returns>指定索引处的元素。</returns>
        </member>
        <member name="T:YDTF.ORMSupportClasses.IEntityFieldCoreInternal">
            <summary>
            实体字段核心内容接口
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFieldCoreInternal.GetState">
            <summary>
            获取状态
            </summary>
            <returns>状态类</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFieldCoreInternal.SetState(YDTF.ORMSupportClasses.FieldStateBucket)">
            <summary>
            设置状态
            </summary>
            <param name="state">字段状态</param>
        </member>
        <member name="T:YDTF.ORMSupportClasses.ExpressionElement`1">
            <summary>
            表达式元素类
            </summary>
            <typeparam name="T">元素</typeparam>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ExpressionElement`1._contents">
            <summary>
            元素内容
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ExpressionElement`1._type">
            <summary>
            表达式元素类型
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ExpressionElement`1.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ExpressionElement`1.#ctor(YDTF.ORMSupportClasses.ExpressionElementType,`0)">
            <summary>
            构造函数
            </summary>
            <param name="typeOfContents">表达式元素类型</param>
            <param name="contents">元素内容</param>
        </member>
        <member name="P:YDTF.ORMSupportClasses.ExpressionElement`1.Contents">
            <summary>
            获取或设置元素内容
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.ExpressionElement`1.YDTF#ORMSupportClasses#IExpressionElement#Contents">
            <summary>
            获取或设置元素内容
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.ExpressionElement`1.Type">
            <summary>
            获取或设置表达式元素类型
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.ORMGeneralOperationException">
            <summary>
            ORM 综合方法异常
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ORMGeneralOperationException.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ORMGeneralOperationException.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="message">异常消息</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ORMGeneralOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            构造函数
            </summary>
            <param name="info">序列化的对象数据</param>
            <param name="context">源或目标的上下文信息</param>
        </member>
        <member name="T:YDTF.ORMSupportClasses.ScaleOverflowCorrectionAction">
            <summary>
            小数点溢出处理标志
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ScaleOverflowCorrectionAction.None">
            <summary>
            不处理
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ScaleOverflowCorrectionAction.Truncate">
            <summary>
            截取
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ScaleOverflowCorrectionAction.Round">
            <summary>
            4舍5入
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.ITypeDefaultValue">
            <summary>
            类型默认值接口
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ITypeDefaultValue.DefaultValue(System.Type)">
            <summary>
            获取默认值
            </summary>
            <param name="defaultValueType">默认值类型</param>
            <returns>默认值</returns>
        </member>
        <member name="T:YDTF.ORMSupportClasses.ORMEntityOutOfSyncException">
            <summary>
            
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ORMEntityOutOfSyncException._outOfSyncEntity">
            <summary>
            
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ORMEntityOutOfSyncException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ORMEntityOutOfSyncException.#ctor(System.String,YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="outOfSyncEntity"></param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ORMEntityOutOfSyncException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="P:YDTF.ORMSupportClasses.ORMEntityOutOfSyncException.OutOfSyncEntity">
            <summary>
            
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.DelegatePredicate`1">
            <summary>
            断言集合
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="F:YDTF.ORMSupportClasses.DelegatePredicate`1._func">
            <summary>
            断言集合
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.DelegatePredicate`1.#ctor(System.Predicate{`0})">
            <summary>
            构造函数
            </summary>
            <param name="func">断言集合</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.DelegatePredicate`1.#ctor(System.Predicate{`0},System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="func">断言集合</param>
            <param name="negate">是否无效</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.DelegatePredicate`1.InterpretPredicate(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            断言
            </summary>
            <param name="entity">实体接口</param>
            <returns>true 成功 false 失败</returns>
        </member>
        <member name="T:YDTF.CallServiceByHTTPWEB001">
            <summary>
            调用HTTP服务
            传输协议: HTTP
            WEBService版本: 001
            </summary>
        </member>
        <member name="F:YDTF.CallServiceByHTTPWEB001.dicServiceCallBacks">
            <summary>
            服务回调返回参数接口
            </summary>
        </member>
        <member name="F:YDTF.CallServiceByHTTPWEB001.numLen">
            <summary>
            解析集合个数的长度
            </summary>
        </member>
        <member name="M:YDTF.CallServiceByHTTPWEB001.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YDTF.CallServiceByHTTPWEB001.Initial">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:YDTF.CallServiceByHTTPWEB001.OrganizeInput(System.String,System.Object[])">
            <summary>
            组织输入参数
            </summary>
            <param name="serviceName">服务名称</param>
            <param name="inputValues">输入参数</param>
            <returns>转换后的输入参数</returns>
        </member>
        <member name="M:YDTF.CallServiceByHTTPWEB001.VerifyInputValues(System.String,System.Object[])">
            <summary>
            核实输入参数
            </summary>
            <param name="serviceName">服务名称</param>
            <param name="inputValues">输入参数</param>
            <returns>核实是否成功 成功：返回空字符串 失败：返回错误消息</returns>
        </member>
        <member name="M:YDTF.CallServiceByHTTPWEB001.UnPackToTCPStr(System.Text.StringBuilder,YDTF.ORMSupportClasses.IEntity2)">
            <summary>
            把实体打包成TCP字符串
            </summary>
            <param name="strParam">需要拼接的输入参数</param>
            <param name="entity">实体</param>        
        </member>
        <member name="M:YDTF.CallServiceByHTTPWEB001.UnPackToTCPStr(System.Text.StringBuilder,YDTF.ORMSupportClasses.IEntity2,System.String)">
            <summary>
             把实体打包成TCP字符串
            </summary>
            <param name="strParam">需要拼接的输入参数</param>
            <param name="entity">实体</param>
            <param name="fillEmptyStr">当值为空时填充的字符</param>
        </member>
        <member name="M:YDTF.CallServiceByHTTPWEB001.InvokeService(System.String,System.Object)">
            <summary>
            HTTP调用服务
            </summary>
            <param name="serviceName">服务名称</param>
            <param name="inputParm">输入参数</param>
            <returns>字符串</returns>
        </member>
        <member name="M:YDTF.CallServiceByHTTPWEB001.ReadStream(System.IO.Stream,System.Int32)">
            <summary>
            读字节取流
            </summary>
            <param name="stream">字节流</param>
            <param name="count">长度</param>
            <returns>字节数组</returns>
        </member>
        <member name="M:YDTF.CallServiceByHTTPWEB001.ReadStream(System.IO.Stream)">
            <summary>
            读字节取流
            </summary>
            <param name="stream">字节流</param>
            <returns>字节数组</returns>
        </member>
        <member name="M:YDTF.CallServiceByHTTPWEB001.OrganizeOutput``1(System.String,System.Object)">
            <summary>
            组织输出数据集
            </summary>
            <param name="serviceName">服务名称</param>
            <param name="outputParm">输入参数</param>
            <returns>数据集</returns>
        </member>
        <member name="T:YDTF.ORMSupportClasses.ExOp">
            <summary>
            执行标记
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ExOp.None">
            <summary>
            无
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ExOp.Add">
            <summary>
            +
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ExOp.Sub">
            <summary>
            -
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ExOp.Mul">
            <summary>
            *
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ExOp.Div">
            <summary>
            除
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ExOp.Mod">
            <summary>
            %
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ExOp.Equal">
            <summary>
            ==
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ExOp.GreaterEqual">
            <summary>
            >=
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ExOp.GreaterThan">
            <summary>
            >
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ExOp.LessEqual">
            <summary>
            ＜=
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ExOp.LesserThan">
            <summary>
            ＜
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ExOp.NotEqual">
            <summary>
            !=
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ExOp.And">
            <summary>
            和
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ExOp.Or">
            <summary>
            或
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ExOp.BitwiseAnd">
            <summary>
            和
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ExOp.BitwiseOr">
            <summary>
            或
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ExOp.BitwiseXor">
            <summary>
            或
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.EntityFieldsCore`1">
            <summary>
            实体字段集合核心类
            </summary>
            <typeparam name="TField">字段</typeparam>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityFieldsCore`1._entityFieldIndexes">
            <summary>
            实体字段索引集合
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityFieldsCore`1._entityFieldIndexesIsLocalCopy">
            <summary>
            实体的字段和索引对象是否被覆盖过
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityFieldsCore`1._entityFields">
            <summary>
            实体字段集合
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityFieldsCore`1._entityNamesOfFields">
            <summary>
            实体字段名字
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityFieldsCore`1._entityNamesOfFieldsIsLocalCopy">
            <summary>
            实体字段名字是否复制
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityFieldsCore`1._isChangedInThisEditCycle">
            <summary>
            是否在修改中
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityFieldsCore`1._isDirty">
            <summary>
            是否脏数据
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityFieldsCore`1._pkFieldsCached">
            <summary>
            主键字段缓存
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityFieldsCore`1._primaryKeyFieldIndexes">
            <summary>
            主键字段索引
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityFieldsCore`1._state">
            <summary>
            实体状态
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityFieldsCore`1._wasDirtyWhenEditStarted">
            <summary>
            修改开启后是否脏数据
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.#ctor(System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="amount">默认字段总数</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.#ctor(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
            构造函数
            </summary>
            <param name="amount">默认字段总数</param>
            <param name="entityFieldIndexes">实体字段索引集合</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.#ctor(YDTF.ORMSupportClasses.IEntityFieldCore[],System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
            构造函数
            </summary>
            <param name="fields">字段数组</param>
            <param name="entityFieldIndexes">实体字段索引集合</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.#ctor(`0[],System.Collections.Generic.Dictionary{System.String,System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Specialized.ListDictionary)">
            <summary>
            构造函数
            </summary>
            <param name="fields">字段数组</param>
            <param name="entityFieldIndexes">实体字段索引集合</param>
            <param name="pkFieldIndexes">主键索引集合</param>
            <param name="entityNamesOfFields">实体名称集合</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.YDTF#ORMSupportClasses#IEntityFieldsCore#SerializeData(System.Runtime.Serialization.SerializationInfo)">
            <summary>
            序列化数据
            </summary>
            <param name="info">要填充数据的</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.OnSerializeData(System.Runtime.Serialization.SerializationInfo)">
            <summary>
            序列化数据
            </summary>
            <param name="info">要填充数据的</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.YDTF#ORMSupportClasses#IEntityFieldsCore#DeserializeData(System.Runtime.Serialization.SerializationInfo)">
            <summary>
            反序列化数据
            </summary>
            <param name="info">要填充数据的</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.OnDeserializeData(System.Runtime.Serialization.SerializationInfo)">
            <summary>
            反序列化数据
            </summary>
            <param name="info">要填充数据的</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.GetFieldsDataArray">
            <summary>
            获取字段数据索引
            </summary>
            <returns>二维数组</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.GetFieldsTrackingFlagsArray">
            <summary>
            获取字段标记
            </summary>
            <returns>压缩数组</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.AcceptChanges">
            <summary>
            提交修改
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.Add(System.Object)">
            <summary>
            新增字段 
            </summary>
            <param name="value">字段</param>
            <returns>索引</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.Clear">
            <summary>
            移除所有元素(此方法现在不支持)
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.Compact">
            <summary>
            刷新缓存字段集合        
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.Contains(System.Object)">
            <summary>
            确定某元素是否在。
            </summary>
            <param name="value">对于引用类型，该值可以为 null</param>
            <returns>找到 item，则为 true，否则为 false</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.Contract">
            <summary>
            收缩字段
            </summary>
            <returns>收缩后的长度</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.CopyTo(System.Array,System.Int32)">
            <summary>
            将当前一维 System.Array 的所有元素复制到指定的一维 System.Array 中（从指定的目标 System.Array 索引开始）。索引指定为32 位整数。
            </summary>
            <param name="array"> 一维 System.Array，它是从当前 System.Array 复制的元素的目标位置。</param>
            <param name="index"> 一个 32 位整数，它表示 array 中复制开始处的索引。</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.CreateDeepClone">
            <summary>
            深度克隆
            </summary>
            <returns>克隆成功的对象</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.CreateDeepCloneAsDirty">
            <summary>
            深度克隆并标记脏数据
            </summary>
            <returns>克隆成功的对象</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.CreateEntityFieldIndexesLocalCopy">
            <summary>
            创建实体索引本地复制
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.CreateEntityNamesOfFieldsLocalCopy">
            <summary>
            创建实体名称本地复制
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.CreateShallowClone">
            <summary>
            浅克隆
            </summary>
            <returns>浅克隆成功对象</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.DefineField(YDTF.ORMSupportClasses.IEntityFieldCore,System.Int32)">
            <summary>
            定义字段
            </summary>
            <param name="field">字段</param>
            <param name="indexInFields">字段索引</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.DefineField(YDTF.ORMSupportClasses.IEntityFieldCore,System.Int32,YDTF.ORMSupportClasses.AggregateFunction)">
            <summary>
            定义字段
            </summary>
            <param name="field">字段</param>
            <param name="indexInFields">字段索引</param>
            <param name="aggregateFunctionToApply">聚合标志</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.DefineField(YDTF.ORMSupportClasses.IEntityFieldCore,System.Int32,System.String)">
            <summary>
            定义字段
            </summary>
            <param name="field">字段</param>
            <param name="indexInFields">字段索引</param>
            <param name="alias">别名</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.DefineField(YDTF.ORMSupportClasses.IEntityFieldCore,System.Int32,System.String,YDTF.ORMSupportClasses.AggregateFunction)">
            <summary>
            定义字段
            </summary>
            <param name="field">字段</param>
            <param name="indexInFields">字段索引</param>
            <param name="alias">别名</param>
            <param name="aggregateFunctionToApply">聚合标志</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.DefineField(YDTF.ORMSupportClasses.IEntityFieldCore,System.Int32,System.String,System.String)">
            <summary>
            定义字段
            </summary>
            <param name="field">字段</param>
            <param name="indexInFields">字段索引</param>
            <param name="alias">别名</param>
            <param name="entityAlias">实体别名</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.DefineField(YDTF.ORMSupportClasses.IEntityFieldCore,System.Int32,System.String,System.String,YDTF.ORMSupportClasses.AggregateFunction)">
            <summary>
            定义字段
            </summary>
            <param name="field">字段</param>
            <param name="indexInFields">字段索引</param>
            <param name="alias">别名</param>
            <param name="entityAlias">实体别名</param>
            <param name="aggregateFunctionToApply">聚合标志</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.Equals(System.Object)">
            <summary>
            确定指定的 System.Object 是否等于当前的 System.Object。
            </summary>
            <param name="obj">与当前的 System.Object 进行比较的 System.Object。</param>
            <returns>如果指定的 System.Object 等于当前的 System.Object，则为 true；否则为 false。</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.Expand(System.Int32)">
            <summary>
            扩展大小
            </summary>
            <param name="numberOfNewCells">扩展的个数</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.GetAsEntityFieldCoreArray">
            <summary>
            获取实体字段数组
            </summary>
            <returns>实体字段数组接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.GetEntityFieldStates">
            <summary>
            获取实体字段状态
            </summary>
            <returns>实体字段数组状态</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.GetEntityNamesOfFields">
            <summary>
            获取实体字段名
            </summary>
            <returns>字段名集合</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.GetEnumerator">
            <summary>
            返回 System.Array 的 System.Collections.IEnumerator。
            </summary>
            <returns> 用于 System.Array 的 System.Collections.IEnumerator。</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.GetHashCode">
            <summary>
            用作特定类型的哈希函数。
            </summary>
            <returns>当前 System.Object 的哈希代码。</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.IndexOf(System.Object)">
            <summary>
            搜索指定的对象，并返回整个集合中第一个匹配项的从零开始的索引。
            </summary>
            <param name="value">值不可以为 null。</param>
            <returns>如果在整个集合 中找到 item 的第一个匹配项，则为该项的从零开始的索引；否则为-1。</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.Insert(System.Int32,System.Object)">
            <summary>
            将元素插入指定索引处。(当前版本不支持)
            </summary>
            <param name="index">从零开始的索引，应在该位置插入 item。</param>
            <param name="value">要插入的对象。对于引用类型，该值不可以为 null。</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.Remove(System.Object)">
            <summary>
            移除特定对象的第一个匹配项(当前版本不支持)
            </summary>
            <param name="value">移除的对象,对于引用类型，该值不可以为 null</param>
            <returns>如果成功移除 item，则为 true 否则为 false</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.RemoveAt(System.Int32)">
            <summary>
             移除指定索引处的元素。(当前版本不支持)
            </summary>
            <param name="index">要移除的元素的从零开始的索引。</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.YDTF#ORMSupportClasses#IEntityFieldsCore#Clone">
            <summary>
            克隆对象
            </summary>
            <returns>实体字段几集合接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.YDTF#ORMSupportClasses#IEntityFieldsCore#CloneAsDirty">
            <summary>
            克隆对象并且标记脏数据
            </summary>
            <returns>实体字段几集合接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.YDTF#ORMSupportClasses#IEntityFieldsCore#Compact">
            <summary>
            刷新缓存字段集合        
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.YDTF#ORMSupportClasses#IEntityFieldsCore#Contract">
            <summary>
            收缩字段
            </summary>
            <returns>收缩后的长度</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.YDTF#ORMSupportClasses#IEntityFieldsCore#Expand(System.Int32)">
            <summary>
            扩展大小
            </summary>
            <param name="numberOfNewCells">扩展的个数</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.YDTF#ORMSupportClasses#IEntityFieldsCore#GetAsEntityFieldCoreArray">
            <summary>
            获取实体字段数组
            </summary>
            <returns>实体字段数组接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.YDTF#ORMSupportClasses#IEntityFieldsCore#GetEntityFieldStates">
            <summary>
            获取实体字段状态
            </summary>
            <returns>实体字段数组状态</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.YDTF#ORMSupportClasses#IEntityFieldsCore#GetEntityNamesOfFields">
            <summary>
            获取实体字段名
            </summary>
            <returns>字段名集合</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.YDTF#ORMSupportClasses#IEntityFieldsCore#GetHashCode">
            <summary>
            用作特定类型的哈希函数。
            </summary>
            <returns>当前 System.Object 的哈希代码。</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.YDTF#ORMSupportClasses#IEntityFieldsCore#SetEntityFieldStates(YDTF.ORMSupportClasses.FieldStateBucket[])">
            <summary>
            设置实体字段状态
            </summary>
            <param name="fieldStates">状态数组</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.YDTF#ORMSupportClasses#IEntityFieldsCore#ShallowClone">
            <summary>
            浅克隆
            </summary>
            <returns>浅克隆成功对象</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.SetEntityFieldIndexes(System.Collections.Generic.Dictionary{System.String,System.Int32},System.Boolean)">
            <summary>
            设置实体索引
            </summary>
            <param name="entityFieldIndexes">实体字段索引集合</param>
            <param name="entityFieldIndexesIsLocalCopy">是否复制本地</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.SetEntityFieldStates(YDTF.ORMSupportClasses.FieldStateBucket[])">
            <summary>
            设置实体字段状态
            </summary>
            <param name="fieldStates">状态数组</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.SetEntityNamesOfFields(System.Collections.Specialized.ListDictionary,System.Boolean)">
            <summary>
            设置实体名称
            </summary>
            <param name="entityNamesOfFields">实体名集合</param>
            <param name="entityNamesOfFieldsIsLocalCopy">是否复制本地</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.SetupCloning">
            <summary>
            设置克隆
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.System#Collections#Generic#ICollection{YDTF#ORMSupportClasses#IEntityFieldCore}#Add(YDTF.ORMSupportClasses.IEntityFieldCore)">
            <summary>
            新增字段 
            </summary>
            <param name="item">字段</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.System#Collections#Generic#ICollection{YDTF#ORMSupportClasses#IEntityFieldCore}#Clear">
            <summary>
            移除所有元素(此方法现在不支持)
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.System#Collections#Generic#ICollection{YDTF#ORMSupportClasses#IEntityFieldCore}#Contains(YDTF.ORMSupportClasses.IEntityFieldCore)">
            <summary>
            确定某元素是否在。
            </summary>
            <param name="item">对于引用类型，该值可以为 null</param>
            <returns>找到 item，则为 true，否则为 false</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.System#Collections#Generic#ICollection{YDTF#ORMSupportClasses#IEntityFieldCore}#CopyTo(YDTF.ORMSupportClasses.IEntityFieldCore[],System.Int32)">
            <summary>
            将当前一维 System.Array 的所有元素复制到指定的一维 System.Array 中（从指定的目标 System.Array 索引开始）。索引指定为32 位整数。
            </summary>
            <param name="array"> 一维 System.Array，它是从当前 System.Array 复制的元素的目标位置。</param>
            <param name="arrayIndex"> 一个 32 位整数，它表示 array 中复制开始处的索引。</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.System#Collections#Generic#ICollection{YDTF#ORMSupportClasses#IEntityFieldCore}#Remove(YDTF.ORMSupportClasses.IEntityFieldCore)">
            <summary>
            移除特定对象的第一个匹配项(当前版本不支持)
            </summary>
            <param name="item">移除的对象,对于引用类型，该值不可以为 null</param>
            <returns>如果成功移除 item，则为 true 否则为 false</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.System#Collections#Generic#IEnumerable{YDTF#ORMSupportClasses#IEntityFieldCore}#GetEnumerator">
            <summary>
            返回 System.Array 的 System.Collections.IEnumerator。
            </summary>
            <returns> 用于 System.Array 的 System.Collections.IEnumerator。</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.System#Collections#Generic#IList{YDTF#ORMSupportClasses#IEntityFieldCore}#IndexOf(YDTF.ORMSupportClasses.IEntityFieldCore)">
            <summary>
            搜索指定的对象，并返回整个集合中第一个匹配项的从零开始的索引。
            </summary>
            <param name="item">值不可以为 null。</param>
            <returns>如果在整个集合 中找到 item 的第一个匹配项，则为该项的从零开始的索引；否则为-1。</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.System#Collections#Generic#IList{YDTF#ORMSupportClasses#IEntityFieldCore}#Insert(System.Int32,YDTF.ORMSupportClasses.IEntityFieldCore)">
            <summary>
            将元素插入指定索引处。(当前版本不支持)
            </summary>
            <param name="index">从零开始的索引，应在该位置插入 item。</param>
            <param name="item">要插入的对象。对于引用类型，该值不可以为 null。</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.System#Collections#Generic#IList{YDTF#ORMSupportClasses#IEntityFieldCore}#RemoveAt(System.Int32)">
            <summary>
             移除指定索引处的元素。(当前版本不支持)
            </summary>
            <param name="index">要移除的元素的从零开始的索引。</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            返回 System.Array 的 System.Collections.IEnumerator。
            </summary>
            <returns> 用于 System.Array 的 System.Collections.IEnumerator。</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            开启修改
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            取消修改
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldsCore`1.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            结束修改
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldsCore`1.Count">
            <summary>
            获取中实际包含的元素数。
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldsCore`1.IsChangedInThisEditCycle">
            <summary>
            获取或设置是否在正在修改中
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldsCore`1.IsDirty">
            <summary>
            获取是否脏数据
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldsCore`1.IsFixedSize">
            <summary>
            获取一个值，该值指示 System.Collections.IList 是否具有固定大小。
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldsCore`1.IsReadOnly">
            <summary>
            获取是否只读
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldsCore`1.IsSynchronized">
            <summary>
            获取一个值，该值指示是否同步对 System.Collections.ICollection 的访问（线程安全）。
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldsCore`1.Item(System.Int32)">
            <summary>
            获取或设置指定索引处的元素。
            </summary>
            <param name="index">要获得或设置的元素从零开始的索引。</param>
            <returns>指定索引处的元素。</returns>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldsCore`1.Item(System.String)">
            <summary>
            获取指定字段名的元素。
            </summary>
            <param name="name">字段名</param>
            <returns>指定字段名处的元素。</returns>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldsCore`1.PrimaryKeyFields">
            <summary>
            主键字段集合
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldsCore`1.YDTF#ORMSupportClasses#IEntityFieldsCore#Count">
            <summary>
            获取中实际包含的元素数。
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldsCore`1.YDTF#ORMSupportClasses#IEntityFieldsCore#IsChangedInThisEditCycle">
            <summary>
            获取或设置是否在正在修改中
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldsCore`1.YDTF#ORMSupportClasses#IEntityFieldsCore#IsDirty">
            <summary>
            获取或设置是否是脏数据
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldsCore`1.YDTF#ORMSupportClasses#IEntityFieldsCore#Item(System.Int32)">
            <summary>
            获取或设置指定索引处的元素。
            </summary>
            <param name="index">要获得或设置的元素从零开始的索引。</param>
            <returns>指定索引处的元素。</returns>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldsCore`1.YDTF#ORMSupportClasses#IEntityFieldsCore#Item(System.String)">
            <summary>
            获取指定字段名的元素。
            </summary>
            <param name="name">字段名</param>
            <returns>指定字段名处的元素。</returns>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldsCore`1.YDTF#ORMSupportClasses#IEntityFieldsCore#PrimaryKeyFields">
            <summary>
            主键字段集合
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldsCore`1.YDTF#ORMSupportClasses#IEntityFieldsCore#State">
            <summary>
            实体状态
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldsCore`1.State">
            <summary>
            实体状态
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldsCore`1.SyncRoot">
            <summary>
            (目前版本不支持)
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldsCore`1.System#Collections#Generic#IList{YDTF#ORMSupportClasses#IEntityFieldCore}#Item(System.Int32)">
            <summary>
            获取或设置指定索引处的元素。
            </summary>
            <param name="index">要获得或设置的元素从零开始的索引。</param>
            <returns>指定索引处的元素。</returns>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldsCore`1.System#Collections#IList#Item(System.Int32)">
            <summary>
            获取或设置指定索引处的元素。
            </summary>
            <param name="index">要获得或设置的元素从零开始的索引。</param>
            <returns>指定索引处的元素。</returns>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldsCore`1.WrappedFieldsArray">
            <summary>
            字段集合数组
            </summary>
        </member>
        <member name="P:ComponentAce.Compression.Libs.zlib.ZInputStream.TotalIn">
            <summary> Returns the total number of bytes input so far.</summary>
        </member>
        <member name="P:ComponentAce.Compression.Libs.zlib.ZInputStream.TotalOut">
            <summary> Returns the total number of bytes output so far.</summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.IEntityFields2">
            <summary>
            实体字段接口
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFields2.Clone">
            <summary>
            克隆对象
            </summary>
            <returns>实体字段几集合</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFields2.CloneAsDirty">
            <summary>
            克隆对象并且标记脏数据
            </summary>
            <returns>实体字段几集合</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.IEntityFields2.ShallowClone">
            <summary>
            浅克隆
            </summary>
            <returns>浅克隆成功对象</returns>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityFields2.Item(System.String)">
            <summary>
            获取指定字段名的元素。
            </summary>
            <param name="name">字段名</param>
            <returns>指定字段名处的元素。</returns>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityFields2.Item(System.Int32)">
            <summary>
            获取或设置指定索引处的元素。
            </summary>
            <param name="index">要获得或设置的元素从零开始的索引。</param>
            <returns>指定索引处的元素。</returns>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityFields2.PrimaryKeyFields">
            <summary>
            主键字段集合
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.IEntityFields2.SumStrLength">
            <summary>
            总的字符长度(用于服务调用)
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.FieldLikePredicate">
            <summary>
            字段Like断言类(%操作符使用)
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldLikePredicate._caseSensitiveCollation">
            <summary>
            对大小写敏感
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldLikePredicate._field">
            <summary>
            实体字段
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldLikePredicate._pattern">
            <summary>
            查询字符
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldLikePredicate._patternIsRegEx">
            <summary>
            是否正则
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldLikePredicate._patternRegEx">
            <summary>
            正则
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldLikePredicate._persistenceInfo">
            <summary>
            保留信息
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldLikePredicate.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldLikePredicate.#ctor(YDTF.ORMSupportClasses.IEntityFieldCore,YDTF.ORMSupportClasses.IFieldPersistenceInfo,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="field">字段</param>
            <param name="persistenceInfo">保留信息</param>
            <param name="pattern">查询字符</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldLikePredicate.#ctor(YDTF.ORMSupportClasses.IEntityFieldCore,YDTF.ORMSupportClasses.IFieldPersistenceInfo,System.String,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="field">字段</param>
            <param name="persistenceInfo">保留信息</param>
            <param name="pattern">查询字符</param>
            <param name="negate">是否无效</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldLikePredicate.#ctor(YDTF.ORMSupportClasses.IEntityFieldCore,YDTF.ORMSupportClasses.IFieldPersistenceInfo,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="field">字段</param>
            <param name="persistenceInfo">保留信息</param>
            <param name="objectAlias">对象别名</param>
            <param name="pattern">查询字符</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldLikePredicate.#ctor(YDTF.ORMSupportClasses.IEntityFieldCore,YDTF.ORMSupportClasses.IFieldPersistenceInfo,System.String,System.String,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="field">字段</param>
            <param name="persistenceInfo">保留信息</param>
            <param name="objectAlias">对象别名</param>
            <param name="pattern">查询字符</param>
            <param name="negate">是否无效</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldLikePredicate.GetFrameworkElementsInPredicate">
            <summary>
            获取框架元素
            </summary>
            <returns>列表集合</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldLikePredicate.InitClass(YDTF.ORMSupportClasses.IEntityFieldCore,YDTF.ORMSupportClasses.IFieldPersistenceInfo,System.String,System.Boolean,System.Boolean,System.String,System.Boolean)">
            <summary>
            初始化类
            </summary>
            <param name="field">字段</param>
            <param name="persistenceInfo">保留信息</param>
            <param name="pattern">查询字符</param>
            <param name="negate">是否无效</param>
            <param name="selfServicing">自己维护</param>
            <param name="objectAlias">对象别名</param>
            <param name="caseSensitiveCollation">对大小写敏感</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldLikePredicate.InterpretPredicate(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            解析刷选条件  比如解析> == != 这样的
            </summary>
            <param name="entity">实体</param>
            <returns>true 成功 false 失败</returns>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldLikePredicate.CaseSensitiveCollation">
            <summary>
            获取或设置是否对大小写敏感
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldLikePredicate.FieldCore">
            <summary>
            获取实体字段
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldLikePredicate.Pattern">
            <summary>
            获取或设置查询字符
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldLikePredicate.PatternIsRegEx">
            <summary>
            获取或设置是否正则
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldLikePredicate.PersistenceInfo">
            <summary>
            获取或设置字段保留信息
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.SortOperator">
            <summary>
            排序操作符
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.SortOperator.Ascending">
            <summary>
            asc
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.SortOperator.Descending">
            <summary>
            desc
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.EntityViewEnumerator`1">
            <summary>
            视图视图Enumerator
            </summary>
            <typeparam name="TEntity">实体</typeparam>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityViewEnumerator`1._current">
            <summary>
            当前实体
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityViewEnumerator`1._enumeratedView">
            <summary>
            实体视图集合
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityViewEnumerator`1._index">
            <summary>
            索引
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewEnumerator`1.#ctor(YDTF.ORMSupportClasses.EntityViewBase{`0})">
            <summary>
            构造函数
            </summary>
            <param name="enumeratedView">实体视图集合</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewEnumerator`1.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewEnumerator`1.MoveNext">
            <summary>
            移动下一条
            </summary>
            <returns>是否成功</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityViewEnumerator`1.System#Collections#IEnumerator#Reset">
            <summary>
            重置
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityViewEnumerator`1.Current">
            <summary>
            获取当前项
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityViewEnumerator`1.System#Collections#IEnumerator#Current">
            <summary>
            当去当前项
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.EntityProperty">
            <summary>
            实体属性
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityProperty._expressionToApply">
            <summary>
             表达式
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityProperty._propertyDescriptor">
            <summary>
            属性描述
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityProperty._propertyDescriptorSetByCTor">
            <summary>
            属性描述设置标记
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityProperty._propertyName">
            <summary>
            属性名
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.#ctor(System.ComponentModel.PropertyDescriptor)">
            <summary>
            构造函数
            </summary>
            <param name="descriptor">属性</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="propertyName">属性名</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.AcceptChange">
            <summary>
            提交修改
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.BeginEdit">
            <summary>
            开启修改
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.CancelEdit">
            <summary>
            取消修改
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.Clone">
            <summary>
            克隆
            </summary>
            <returns></returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.EndEdit">
            <summary>
            结束修改
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.Equals(System.Object)">
            <summary>
            确定指定的 System.Object 是否等于当前的 System.Object。
            </summary>
            <param name="obj">与当前的 System.Object 进行比较的 System.Object。</param>
            <returns>如果指定的 System.Object 等于当前的 System.Object，则为 true；否则为 false。</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.GetHashCode">
            <summary>
            用作特定类型的哈希函数。
            </summary>
            <returns>当前的哈希代码</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_Addition(YDTF.ORMSupportClasses.EntityProperty,YDTF.ORMSupportClasses.EntityField2)">
            <summary>
            +操作
            </summary>
            <param name="leftOperand">左边实体属性</param>
            <param name="rightOperand">右边字段</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_Addition(YDTF.ORMSupportClasses.EntityProperty,YDTF.ORMSupportClasses.EntityProperty)">
            <summary>
            +操作
            </summary>
            <param name="leftOperand">左边实体属性</param>
            <param name="rightOperand">右边实体属性</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_Addition(YDTF.ORMSupportClasses.EntityProperty,YDTF.ORMSupportClasses.Expression)">
            <summary>
            +操作
            </summary>
            <param name="leftOperand">左边实体属性</param>
            <param name="rightOperand">右边表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_Addition(YDTF.ORMSupportClasses.EntityProperty,System.Object)">
            <summary>
            +操作
            </summary>
            <param name="leftOperand">左边实体属性</param>
            <param name="value">右边值</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_Addition(YDTF.ORMSupportClasses.Expression,YDTF.ORMSupportClasses.EntityProperty)">
            <summary>
            +操作
            </summary>
            <param name="leftOperand">左边表达式</param>
            <param name="rightOperand">右边实体属性</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_Addition(System.Object,YDTF.ORMSupportClasses.EntityProperty)">
            <summary>
            +操作
            </summary>
            <param name="value">左边值</param>
            <param name="rightOperand">右边实体属性</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_BitwiseOr(YDTF.ORMSupportClasses.EntityProperty,YDTF.ORMSupportClasses.SortOperator)">
            <summary>
            | 操作 排序
            </summary>
            <param name="field">实体属性</param>
            <param name="operatorToUse">排序标志</param>
            <returns>排序表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_Division(YDTF.ORMSupportClasses.EntityProperty,YDTF.ORMSupportClasses.EntityField2)">
            <summary>
            /操作
            </summary>
            <param name="leftOperand">左边实体属性</param>
            <param name="rightOperand">右边字段</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_Division(YDTF.ORMSupportClasses.EntityProperty,YDTF.ORMSupportClasses.EntityProperty)">
            <summary>
            /操作
            </summary>
            <param name="leftOperand">左边实体属性</param>
            <param name="rightOperand">右边实体属性</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_Division(YDTF.ORMSupportClasses.EntityProperty,YDTF.ORMSupportClasses.Expression)">
            <summary>
            /操作
            </summary>
            <param name="leftOperand">左边实体属性</param>
            <param name="rightOperand">右边表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_Division(YDTF.ORMSupportClasses.EntityProperty,System.Object)">
            <summary>
            /操作
            </summary>
            <param name="leftOperand">左边实体属性</param>
            <param name="value">右边值</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_Division(YDTF.ORMSupportClasses.Expression,YDTF.ORMSupportClasses.EntityProperty)">
            <summary>
            /操作
            </summary>
            <param name="leftOperand">左边表达式</param>
            <param name="rightOperand">右边实体属性</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_Division(System.Object,YDTF.ORMSupportClasses.EntityProperty)">
            <summary>
            /操作
            </summary>
            <param name="value">左边值</param>
            <param name="rightOperand">右边实体属性</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_Equality(YDTF.ORMSupportClasses.EntityProperty,YDTF.ORMSupportClasses.EntityField2)">
            <summary>
            ==操作
            </summary>
            <param name="leftOperand">左边实体属性</param>
            <param name="rightOperand">右边字段</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_Equality(YDTF.ORMSupportClasses.EntityProperty,YDTF.ORMSupportClasses.EntityProperty)">
            <summary>
            ==操作
            </summary>
            <param name="leftOperand">左边实体属性</param>
            <param name="rightOperand">右边实体属性</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_Equality(YDTF.ORMSupportClasses.EntityProperty,YDTF.ORMSupportClasses.Expression)">
            <summary>
            ==操作
            </summary>
            <param name="field">左边实体属性</param>
            <param name="toCompareWith">右边表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_Equality(YDTF.ORMSupportClasses.EntityProperty,System.Collections.IList)">
            <summary>
            ==操作
            </summary>
            <param name="field">左边实体属性</param>
            <param name="values">右边值集合</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_Equality(YDTF.ORMSupportClasses.EntityProperty,System.Object)">
            <summary>
            ==操作
            </summary>
            <param name="field">左边实体属性</param>
            <param name="value">右边值</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_GreaterThan(YDTF.ORMSupportClasses.EntityProperty,YDTF.ORMSupportClasses.EntityField2)">
            <summary>
            >操作
            </summary>
            <param name="leftOperand">左边实体属性</param>
            <param name="rightOperand">右边字段</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_GreaterThan(YDTF.ORMSupportClasses.EntityProperty,YDTF.ORMSupportClasses.EntityProperty)">
            <summary>
            >操作
            </summary>
            <param name="leftOperand">左边实体属性</param>
            <param name="rightOperand">右边实体属性</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_GreaterThan(YDTF.ORMSupportClasses.EntityProperty,YDTF.ORMSupportClasses.Expression)">
            <summary>
            >操作
            </summary>
            <param name="field">左边实体属性</param>
            <param name="toCompareWith">右边表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_GreaterThan(YDTF.ORMSupportClasses.EntityProperty,System.Object)">
            <summary>
            >操作
            </summary>
            <param name="field">左边实体属性</param>
            <param name="value">右边值</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_GreaterThanOrEqual(YDTF.ORMSupportClasses.EntityProperty,YDTF.ORMSupportClasses.EntityField2)">
            <summary>
            >=操作
            </summary>
            <param name="leftOperand">左边实体属性</param>
            <param name="rightOperand">右边字段</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_GreaterThanOrEqual(YDTF.ORMSupportClasses.EntityProperty,YDTF.ORMSupportClasses.EntityProperty)">
            <summary>
            >=操作
            </summary>
            <param name="leftOperand">左边实体属性</param>
            <param name="rightOperand">右边实体属性</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_GreaterThanOrEqual(YDTF.ORMSupportClasses.EntityProperty,YDTF.ORMSupportClasses.Expression)">
            <summary>
            >=操作
            </summary>
            <param name="field">左边实体属性</param>
            <param name="toCompareWith">右边表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_GreaterThanOrEqual(YDTF.ORMSupportClasses.EntityProperty,System.Object)">
            <summary>
            >=操作
            </summary>
            <param name="field">左边实体属性</param>
            <param name="value">右边值</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_Inequality(YDTF.ORMSupportClasses.EntityProperty,YDTF.ORMSupportClasses.EntityField2)">
            <summary>
            !=操作
            </summary>
            <param name="leftOperand">左边实体属性</param>
            <param name="rightOperand">右边字段</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_Inequality(YDTF.ORMSupportClasses.EntityProperty,YDTF.ORMSupportClasses.EntityProperty)">
            <summary>
            !=操作
            </summary>
            <param name="leftOperand">左边实体属性</param>
            <param name="rightOperand">右边实体属性</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_Inequality(YDTF.ORMSupportClasses.EntityProperty,YDTF.ORMSupportClasses.Expression)">
            <summary>
            !=操作
            </summary>
            <param name="field">左边实体属性</param>
            <param name="toCompareWith">右边表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_Inequality(YDTF.ORMSupportClasses.EntityProperty,System.Collections.IList)">
            <summary>
            !=操作
            </summary>
            <param name="field">左边实体属性</param>
            <param name="values">右边值集合</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_Inequality(YDTF.ORMSupportClasses.EntityProperty,System.Object)">
            <summary>
            !=操作
            </summary>
            <param name="field">左边实体属性</param>
            <param name="value">右边值</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_LessThan(YDTF.ORMSupportClasses.EntityProperty,YDTF.ORMSupportClasses.EntityField2)">
            <summary>
             ＜操作
            </summary>
            <param name="leftOperand">左边实体属性</param>
            <param name="rightOperand">右边字段</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_LessThan(YDTF.ORMSupportClasses.EntityProperty,YDTF.ORMSupportClasses.EntityProperty)">
            <summary>
            ＜操作
            </summary>
            <param name="leftOperand">左边实体属性</param>
            <param name="rightOperand">右边实体属性</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_LessThan(YDTF.ORMSupportClasses.EntityProperty,YDTF.ORMSupportClasses.Expression)">
            <summary>
            ＜操作
            </summary>
            <param name="field">左边实体属性</param>
            <param name="toCompareWith">右边表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_LessThan(YDTF.ORMSupportClasses.EntityProperty,System.Object)">
            <summary>
            ＜操作
            </summary>
            <param name="field">左边实体属性</param>
            <param name="value">右边值</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_LessThanOrEqual(YDTF.ORMSupportClasses.EntityProperty,YDTF.ORMSupportClasses.EntityField2)">
            <summary>
            ＜=操作
            </summary>
            <param name="leftOperand">左边实体属性</param>
            <param name="rightOperand">右边字段</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_LessThanOrEqual(YDTF.ORMSupportClasses.EntityProperty,YDTF.ORMSupportClasses.EntityProperty)">
            <summary>
            ＜=操作
            </summary>
            <param name="leftOperand">左边实体属性</param>
            <param name="rightOperand">右边实体属性</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_LessThanOrEqual(YDTF.ORMSupportClasses.EntityProperty,YDTF.ORMSupportClasses.Expression)">
            <summary>
            ＜=操作
            </summary>
            <param name="field">左边实体属性</param>
            <param name="toCompareWith">右边表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_LessThanOrEqual(YDTF.ORMSupportClasses.EntityProperty,System.Object)">
            <summary>
            ＜=操作
            </summary>
            <param name="field">左边实体属性</param>
            <param name="value">右边值</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_Modulus(YDTF.ORMSupportClasses.EntityProperty,System.String)">
            <summary>
            %操作
            </summary>
            <param name="field">左边实体属性</param>
            <param name="pattern">右边"% %"字符串</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_Multiply(YDTF.ORMSupportClasses.EntityProperty,YDTF.ORMSupportClasses.EntityField2)">
            <summary>
            *操作
            </summary>
            <param name="leftOperand">左边实体属性</param>
            <param name="rightOperand">右边字段</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_Multiply(YDTF.ORMSupportClasses.EntityProperty,YDTF.ORMSupportClasses.EntityProperty)">
            <summary>
            *操作
            </summary>
            <param name="leftOperand">左边实体属性</param>
            <param name="rightOperand">右边实体属性</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_Multiply(YDTF.ORMSupportClasses.EntityProperty,YDTF.ORMSupportClasses.Expression)">
            <summary>
            *操作
            </summary>
            <param name="leftOperand">左边实体属性</param>
            <param name="rightOperand">右边表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_Multiply(YDTF.ORMSupportClasses.EntityProperty,System.Object)">
            <summary>
            *操作
            </summary>
            <param name="leftOperand">左边实体属性</param>
            <param name="value">右边值</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_Multiply(YDTF.ORMSupportClasses.Expression,YDTF.ORMSupportClasses.EntityProperty)">
            <summary>
            *操作
            </summary>
            <param name="leftOperand">左边表达式</param>
            <param name="rightOperand">右边实体属性</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_Multiply(System.Object,YDTF.ORMSupportClasses.EntityProperty)">
            <summary>
            *操作
            </summary>
            <param name="value">左边值</param>
            <param name="rightOperand">右边实体属性</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_Subtraction(YDTF.ORMSupportClasses.EntityProperty,YDTF.ORMSupportClasses.EntityField2)">
            <summary>
            -操作
            </summary>
            <param name="leftOperand">左边实体属性</param>
            <param name="rightOperand">右边字段</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_Subtraction(YDTF.ORMSupportClasses.EntityProperty,YDTF.ORMSupportClasses.EntityProperty)">
            <summary>
            -操作
            </summary>
            <param name="leftOperand">左边实体属性</param>
            <param name="rightOperand">右边实体属性</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_Subtraction(YDTF.ORMSupportClasses.EntityProperty,YDTF.ORMSupportClasses.Expression)">
            <summary>
            -操作
            </summary>
            <param name="leftOperand">左边实体属性</param>
            <param name="rightOperand">右边表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_Subtraction(YDTF.ORMSupportClasses.EntityProperty,System.Object)">
            <summary>
            -操作
            </summary>
            <param name="leftOperand">左边实体属性</param>
            <param name="value">右边值</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_Subtraction(YDTF.ORMSupportClasses.Expression,YDTF.ORMSupportClasses.EntityProperty)">
            <summary>
            -操作
            </summary>
            <param name="leftOperand">左边表达式</param>
            <param name="rightOperand">右边实体属性</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.op_Subtraction(System.Object,YDTF.ORMSupportClasses.EntityProperty)">
            <summary>
            -操作
            </summary>
            <param name="value">左边值</param>
            <param name="rightOperand">右边实体属性</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.RejectChange">
            <summary>
            重置修改
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.YDTF#ORMSupportClasses#IEntityFieldCoreInterpret#GetValue(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            获取值
            </summary>
            <param name="entity">实体对象接口</param>
            <returns>值</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.SetDbValue(System.Object)">
            <summary>
            设置数据库值
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.SetFieldIndex(System.Int32)">
            <summary>
            设置字段索引
            </summary>
            <param name="newIndex">新索引</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.ForcedCurrentValueWrite(System.Object)">
            <summary>
            强迫写入当前值
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.ForcedCurrentValueWrite(System.Object,System.Object)">
            <summary>
            强迫写入当前值
            </summary>
            <param name="value">值</param>
            <param name="dbValue">数据库值</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.ForcedChangedWrite(System.Boolean)">
            <summary>
            强迫写入修改标记
            </summary>
            <param name="isChangedValue">是否修改值</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityProperty.ForcedIsNullWrite(System.Boolean)">
            <summary>
            强迫写是有允许空
            </summary>
            <param name="isNull">是否允许null</param>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityProperty.ActualContainingObjectName">
            <summary>
            获取真实包含的对象名
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityProperty.AggregateFunctionToApply">
            <summary>
            获取或设置聚合表达式
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityProperty.Alias">
            <summary>
            获取或设置别名
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityProperty.ContainingObjectName">
            <summary>
            获取包含的对象名
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityProperty.CurrentValue">
            <summary>
            获取或设置当前值
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityProperty.DataType">
            <summary>
            获取字段值的数据类型
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityProperty.DbValue">
            <summary>
            获取数据库值
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityProperty.ExpressionToApply">
            <summary>
            获取或设置表达式
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityProperty.FieldIndex">
            <summary>
            获取字段的索引
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityProperty.IsChanged">
            <summary>
            获取或设置是否修改
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityProperty.IsForeignKey">
            <summary>
            获取是否外键字段
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityProperty.IsNull">
            <summary>
            获取或设置是否为null
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityProperty.IsNullable">
            <summary>
            获取数据库字段是否可以为Null
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityProperty.IsOfEnumDataType">
            <summary>
            获取是否为枚举类型
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityProperty.IsPrimaryKey">
            <summary>
            获取是否为主键
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityProperty.IsReadOnly">
            <summary>
            获取是否只读
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityProperty.MaxLength">
            <summary>
            获取最大长度
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityProperty.Name">
            <summary>
            获取名称
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityProperty.ObjectAlias">
            <summary>
            获取或设置对象别名
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityProperty.Precision">
            <summary>
            获取精度
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityProperty.RealDataType">
            <summary>
            获取真实数据类型
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityProperty.RepresentingPropertyDescriptor">
            <summary>
            属性描述
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityProperty.Scale">
            <summary>
            获取小数位
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.EntityFields2">
            <summary>
            实体字段集合
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityFields2._sumStrLength">
            <summary>
            总的字符长度(用于服务调用)
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFields2.#ctor(System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="amount">默认字段总数</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFields2.#ctor(YDTF.ORMSupportClasses.IEntityFieldCore[],System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
            构造函数
            </summary>
            <param name="fields">字段数组</param>
            <param name="entityFieldIndexes">实体字段索引集合</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFields2.#ctor(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
            构造函数
            </summary>
            <param name="amount">默认字段总数</param>
            <param name="entityFieldIndexes">实体字段索引集合</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFields2.#ctor(YDTF.ORMSupportClasses.IEntityField2[],System.Collections.Generic.Dictionary{System.String,System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Specialized.ListDictionary)">
            <summary>
            构造函数
            </summary>
            <param name="fields">字段数组</param>
            <param name="entityFieldIndexes">实体字段索引集合</param>
            <param name="pkFieldIndexes">主键索引集合</param>
            <param name="entityNamesOfFields">实体名称集合</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFields2.Clone">
            <summary>
            克隆对象
            </summary>
            <returns>实体字段几集合</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFields2.CloneAsDirty">
            <summary>
            克隆对象并且标记脏数据
            </summary>
            <returns>实体字段几集合</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFields2.ShallowClone">
            <summary>
            浅克隆
            </summary>
            <returns>浅克隆成功对象</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFields2.System#Collections#Generic#IEnumerable{YDTF#ORMSupportClasses#IEntityField2}#GetEnumerator">
            <summary>
            返回 System.Array 的 System.Collections.IEnumerator。
            </summary>
            <returns> 用于 System.Array 的 System.Collections.IEnumerator。</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFields2.OnSerializeData(System.Runtime.Serialization.SerializationInfo)">
            <summary>
            序列化数据
            </summary>
            <param name="info">要填充数据的</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFields2.OnDeserializeData(System.Runtime.Serialization.SerializationInfo)">
            <summary>
            反序列化数据
            </summary>
            <param name="info">要填充数据的</param>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFields2.SumStrLength">
            <summary>
            总的字符长度(用于服务调用)
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.EntityBase2">
            <summary>
            实体基类
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityBase2.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityBase2.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="name">实体名称</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityBase2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            构造函数
            </summary>
            <param name="info">要填充数据的</param>
            <param name="context">此序列化的目标</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityBase2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            使用将目标对象序列化所需的数据填充
            </summary>
            <param name="info">要填充数据的</param>
            <param name="context">此序列化的目标</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityBase2.OnDeserialized(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            反序列化
            </summary>
            <param name="info">要填充数据的</param>
            <param name="context">此序列化的目标</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityBase2.OnSerializabled(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            序列化
            </summary>
            <param name="info">要填充数据的</param>
            <param name="context">此序列化的目标</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityBase2.GetEntityDbIndeies">
            <summary>
            获取实体数据库对应索引
            </summary>
            <returns>实体数据库索引集合</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityBase2.CallCreateEntityFactory">
            <summary>
            回调创建实体工厂
            </summary>
            <returns>实体工厂接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityBase2.CreateEntityFactory">
            <summary>
            创建实体工厂
            </summary>
            <returns>实体工厂接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityBase2.CreateEntityFactoryCore">
            <summary>
            创建实体工厂核心接口
            </summary>
            <returns>工厂核心接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityBase2.CreateFields">
            <summary>
            创建字段集合
            </summary>
            <returns>字段集合接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityBase2.YDTF#ORMSupportClasses#IEntity2#GetEntityFactory">
            <summary>
            获取实体工厂
            </summary>
            <returns>实体工厂接口</returns>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityBase2.YDTF#ORMSupportClasses#IEntity2#PrimaryKeyFields">
            <summary>
            获取主键字段集合
            </summary>
        </member>
        <member name="T:YDTF.ReturnDataSetByHTTPWEB001">
            <summary>
            返回DataSet集合
            传输协议: HTTP
            WEBService版本: 001
            </summary>
        </member>
        <member name="F:YDTF.ReturnDataSetByHTTPWEB001.isInit">
            <summary>
            是否需要初始化
            </summary>
        </member>
        <member name="F:YDTF.ReturnDataSetByHTTPWEB001.numLen">
            <summary>
            解析集合个数的长度
            </summary>
        </member>
        <member name="F:YDTF.ReturnDataSetByHTTPWEB001.headerEncoding">
            <summary>
            头包的编码
            </summary>
        </member>
        <member name="F:YDTF.ReturnDataSetByHTTPWEB001.errorEncoding">
            <summary>
            错误包的编码
            </summary>
        </member>
        <member name="F:YDTF.ReturnDataSetByHTTPWEB001.dataEncoding">
            <summary>
            数据包的编码
            </summary>
        </member>
        <member name="M:YDTF.ReturnDataSetByHTTPWEB001.OrganizeOutput(System.String,System.Object)">
            <summary>
            组织输出数据集
            </summary>
            <param name="serviceName">服务名称</param>
            <param name="outputParm">输入参数</param>
            <returns>数据集</returns>
        </member>
        <member name="M:YDTF.ReturnDataSetByHTTPWEB001.InitEncoding(System.String)">
            <summary>
            初始化编码(此方法只初始化一次 第一次掉服务的时候执行)
            </summary>
            <param name="serviceName">服务名</param>
        </member>
        <member name="M:YDTF.ReturnDataSetByHTTPWEB001.UpPackToDataTable(YDTF.ORMSupportClasses.IEntity2,System.Byte[],System.Int32,System.Int32,System.Text.Encoding)">
            <summary>
            解包到VO集合
            </summary>
            <param name="temEntity">实体</param>
            <param name="outputBytes">输出参数</param>
            <param name="index">开始索引</param>
            <param name="entityCount">实体总数</param>
            <param name="encoding">字符编码格式</param>
            <returns>数据表</returns>
        </member>
        <member name="M:YDTF.ReturnDataSetByHTTPWEB001.GetValueFromBytes(System.Byte[],System.Int32,System.Int32,System.Type,System.Text.Encoding)">
            <summary>
            通过字节数组转换值
            </summary>
            <param name="outputBytes">输出字节</param>
            <param name="beginIndex">开始遍历输出字节的索引</param>
            <param name="maxLength">最大长度</param>
            <param name="dataType">数据类型</param>
            <param name="encoding">字符编码格式</param>
            <returns>转换后的值</returns>
        </member>
        <member name="M:YDTF.ReturnDataSetByHTTPWEB001.GetStringValueFromBytes(System.Byte[],System.Byte,System.Int32,System.Int32,System.Text.Encoding)">
            <summary>
            通过字节数组转换字符串值
            描述：此方法用在旧的ISOA 版本， 新版本中字符串末尾值填充 0 ,旧版本中字符串末尾值填充 32.
            </summary>
            <param name="outputBytes">输出字节</param>
            <param name="conditionByte">条件</param>
            <param name="beginIndex">开始遍历输出字节的索引</param>
            <param name="maxLength">最大长度</param>
            <param name="encoding">字符编码格式</param>
            <returns>转换后的值</returns>
        </member>
        <member name="M:YDTF.ReturnDataSetByHTTPWEB001.GetValueFromBytes(System.Byte[],System.Byte,System.Int32,System.Int32,System.Text.Encoding)">
            <summary>
            通过字节数组转换值
            </summary>
            <param name="outputBytes">输出字节</param>
            <param name="conditionByte">条件</param>
            <param name="beginIndex">开始遍历输出字节的索引</param>
            <param name="maxLength">最大长度</param>
            <param name="encoding">字符编码格式</param>
            <returns>转换后的值</returns>
        </member>
        <member name="M:YDTF.ReturnDataSetByHTTPWEB001.InitDataTable(YDTF.ORMSupportClasses.IEntity2)">
            <summary>
            初始化表
            </summary>
            <param name="entity">配置表的实体</param>
            <returns>空数据的表</returns>
        </member>
        <member name="T:YDTF.ORMSupportClasses.ORMValueTypeMismatchException">
            <summary>
            
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ORMValueTypeMismatchException._illegalFieldValues">
            <summary>
            
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ORMValueTypeMismatchException._targetEntity">
            <summary>
            
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ORMValueTypeMismatchException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ORMValueTypeMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ORMValueTypeMismatchException.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="illegalFieldValues"></param>
            <param name="targetEntity"></param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ORMValueTypeMismatchException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="P:YDTF.ORMSupportClasses.ORMValueTypeMismatchException.IllegalFieldValues">
            <summary>
            
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.ORMValueTypeMismatchException.TargetEntity">
            <summary>
            
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.ORMEntityValidateException">
            <summary>
            
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ORMEntityValidateException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ORMEntityValidateException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ORMEntityValidateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ORMEntityValidateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:YDTF.ReturnDataSetByTCPISOA605">
            <summary>
            返回DataSet集合
            传输协议: TCP
            ISOA版本: 605
            </summary>
        </member>
        <member name="F:YDTF.ReturnDataSetByTCPISOA605.isInit">
            <summary>
            是否需要初始化
            </summary>
        </member>
        <member name="F:YDTF.ReturnDataSetByTCPISOA605.numLen">
            <summary>
            解析集合个数的长度
            </summary>
        </member>
        <member name="F:YDTF.ReturnDataSetByTCPISOA605.headerEncoding">
            <summary>
            头包的编码
            </summary>
        </member>
        <member name="F:YDTF.ReturnDataSetByTCPISOA605.errorEncoding">
            <summary>
            错误包的编码
            </summary>
        </member>
        <member name="F:YDTF.ReturnDataSetByTCPISOA605.dataEncoding">
            <summary>
            数据包的编码
            </summary>
        </member>
        <member name="M:YDTF.ReturnDataSetByTCPISOA605.OrganizeOutput(System.String,System.Object)">
            <summary>
            组织输出数据集
            </summary>
            <param name="serviceName">服务名称</param>
            <param name="outputParm">输入参数</param>
            <returns>数据集</returns>
        </member>
        <member name="M:YDTF.ReturnDataSetByTCPISOA605.InitEncoding(System.String)">
            <summary>
            初始化编码(此方法只初始化一次 第一次掉服务的时候执行)
            </summary>
            <param name="serviceName">服务名</param>
        </member>
        <member name="M:YDTF.ReturnDataSetByTCPISOA605.UpPackToDataTable(YDTF.ORMSupportClasses.IEntity2,System.Byte[],System.Int32,System.Int32,System.Text.Encoding)">
            <summary>
            解包到VO集合
            </summary>
            <param name="temEntity">实体</param>
            <param name="outputBytes">输出参数</param>
            <param name="index">开始索引</param>
            <param name="entityCount">实体总数</param>
            <param name="encoding">字符编码格式</param>
            <returns>数据表</returns>
        </member>
        <member name="M:YDTF.ReturnDataSetByTCPISOA605.GetValueFromBytes(System.Byte[],System.Int32,System.Int32,System.Type,System.Text.Encoding)">
            <summary>
            通过字节数组转换值
            </summary>
            <param name="outputBytes">输出字节</param>
            <param name="beginIndex">开始遍历输出字节的索引</param>
            <param name="maxLength">最大长度</param>
            <param name="dataType">数据类型</param>
            <param name="encoding">字符编码格式</param>
            <returns>转换后的值</returns>
        </member>
        <member name="M:YDTF.ReturnDataSetByTCPISOA605.GetStringValueFromBytes(System.Byte[],System.Byte,System.Int32,System.Int32,System.Text.Encoding)">
            <summary>
            通过字节数组转换字符串值
            描述：此方法用在旧的ISOA 版本， 新版本中字符串末尾值填充 0 ,旧版本中字符串末尾值填充 32.
            </summary>
            <param name="outputBytes">输出字节</param>
            <param name="conditionByte">条件</param>
            <param name="beginIndex">开始遍历输出字节的索引</param>
            <param name="maxLength">最大长度</param>
            <param name="encoding">字符编码格式</param>
            <returns>转换后的值</returns>
        </member>
        <member name="M:YDTF.ReturnDataSetByTCPISOA605.GetValueFromBytes(System.Byte[],System.Byte,System.Int32,System.Int32,System.Text.Encoding)">
            <summary>
            通过字节数组转换值
            </summary>
            <param name="outputBytes">输出字节</param>
            <param name="conditionByte">条件</param>
            <param name="beginIndex">开始遍历输出字节的索引</param>
            <param name="maxLength">最大长度</param>
            <param name="encoding">字符编码格式</param>
            <returns>转换后的值</returns>
        </member>
        <member name="M:YDTF.ReturnDataSetByTCPISOA605.InitDataTable(YDTF.ORMSupportClasses.IEntity2)">
            <summary>
            初始化表
            </summary>
            <param name="entity">配置表的实体</param>
            <returns>空数据的表</returns>
        </member>
        <member name="T:YDTF.VO.TypeDefaultValue">
            <summary>
            类型默认值
            </summary>
        </member>
        <member name="M:YDTF.VO.TypeDefaultValue.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YDTF.VO.TypeDefaultValue.DefaultValue(System.Type)">
            <summary>
            根据默认值类型返回默认值
            </summary>
            <param name="defaultValueType">默认值类型</param>
            <returns>默认值</returns>
        </member>
        <member name="M:YDTF.VO.TypeDefaultValue.GetDefaultValue(System.Type)">
            <summary>
            获取默认值
            </summary>
            <param name="defaultValueType">类型</param>
            <returns>默认值</returns>
        </member>
        <member name="T:YDTF.VO.CommonEntityBase">
            <summary>
            公共实体基类
            </summary>
        </member>
        <member name="M:YDTF.VO.CommonEntityBase.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YDTF.VO.CommonEntityBase.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="name">实体名</param>
        </member>
        <member name="M:YDTF.VO.CommonEntityBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            构造函数
            </summary>
            <param name="info">要填充数据的</param>
            <param name="context">此序列化的目标</param>
        </member>
        <member name="T:YDTF.ORMSupportClasses.FieldCompareRangePredicate">
            <summary>
            字段比较范围断言类
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldCompareRangePredicate._field">
            <summary>
            实体字段
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldCompareRangePredicate._persistenceInfo">
            <summary>
            字段保留信息
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldCompareRangePredicate._values">
            <summary>
            值的集合
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldCompareRangePredicate.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldCompareRangePredicate.#ctor(YDTF.ORMSupportClasses.IEntityFieldCore,YDTF.ORMSupportClasses.IFieldPersistenceInfo,System.Object[])">
            <summary>
            构造函数
            </summary>
            <param name="field">字段</param>
            <param name="persistenceInfo">字段保留信息</param>
            <param name="values">比较值的集合</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldCompareRangePredicate.#ctor(YDTF.ORMSupportClasses.IEntityFieldCore,YDTF.ORMSupportClasses.IFieldPersistenceInfo,System.Boolean,System.Object[])">
            <summary>
            构造函数
            </summary>
            <param name="field">字段</param>
            <param name="persistenceInfo">字段保留信息</param>
            <param name="negate">是否无效</param>
            <param name="values">比较值的集合</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldCompareRangePredicate.#ctor(YDTF.ORMSupportClasses.IEntityFieldCore,YDTF.ORMSupportClasses.IFieldPersistenceInfo,System.String,System.Object[])">
            <summary>
            构造函数
            </summary>
            <param name="field">字段</param>
            <param name="persistenceInfo">字段保留信息</param>
            <param name="objectAlias">对象别名</param>
            <param name="values">比较值的集合</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldCompareRangePredicate.#ctor(YDTF.ORMSupportClasses.IEntityFieldCore,YDTF.ORMSupportClasses.IFieldPersistenceInfo,System.String,System.Boolean,System.Object[])">
            <summary>
            构造函数
            </summary>
            <param name="field">字段</param>
            <param name="persistenceInfo">字段保留信息</param>
            <param name="objectAlias">对象别名</param>
            <param name="negate">是否无效</param>
            <param name="values">比较值的集合</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldCompareRangePredicate.GetFrameworkElementsInPredicate">
            <summary>
            获取框架元素
            </summary>
            <returns>列表集合</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldCompareRangePredicate.InitClass(YDTF.ORMSupportClasses.IEntityFieldCore,YDTF.ORMSupportClasses.IFieldPersistenceInfo,System.Boolean,System.Boolean,System.String,System.Object[])">
            <summary>
            初始化类
            </summary>
            <param name="field">字段</param>
            <param name="persistenceInfo">字段保留信息</param>
            <param name="negate">是否无效</param>
            <param name="selfServicing">自己维护</param>
            <param name="objectAlias">对象别名</param>
            <param name="values">比较值的集合</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldCompareRangePredicate.InterpretPredicate(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            解析刷选条件  比如解析> == != 这样的
            </summary>
            <param name="entity">实体</param>
            <returns>true 成功 false 失败</returns>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldCompareRangePredicate.FieldCore">
            <summary>
            获取或设置字段
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldCompareRangePredicate.PersistenceInfo">
            <summary>
            获取或设置保留信息
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldCompareRangePredicate.Values">
            <summary>
            获取或设置值的集合
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.ExpressionFieldElement">
            <summary>
            表达式字段元素
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ExpressionFieldElement._persistenceInfo">
            <summary>
            保留信息
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ExpressionFieldElement.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ExpressionFieldElement.#ctor(YDTF.ORMSupportClasses.ExpressionElementType,YDTF.ORMSupportClasses.IEntityFieldCore,YDTF.ORMSupportClasses.IFieldPersistenceInfo)">
            <summary>
            构造函数
            </summary>
            <param name="typeOfContents">表达式元素类型</param>
            <param name="contents">元素内容</param>
            <param name="persistenceInfo">保留信息</param>
        </member>
        <member name="P:YDTF.ORMSupportClasses.ExpressionFieldElement.PersistenceInfo">
            <summary>
            获取或设置保留信息
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.EntityFieldCore">
            <summary>
            实体字段核心类
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityFieldCore._alias">
            <summary>
            别名
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityFieldCore._beginEditIsChangedState">
            <summary>
            开启编辑是否修改状态
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityFieldCore._currentValue">
            <summary>
            当前值
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityFieldCore._dbValue">
            <summary>
            数据库值
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityFieldCore._dynamicUsageInfo">
            <summary>
            动态字段信息
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityFieldCore._fieldInfo">
            <summary>
            字段信息接口
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityFieldCore._isChanged">
            <summary>
            是否修改
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityFieldCore._isNull">
            <summary>
            是否null值
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityFieldCore._objectAlias">
            <summary>
            对象别名
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityFieldCore._originalValue">
            <summary>
            旧值
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityFieldCore.CaseSensitiveStringHashCodes">
            <summary>
            是否对大小写敏感
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldCore.Clone">
            <summary>
            克隆对象
            </summary>
            <returns>对象</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldCore.#ctor(YDTF.ORMSupportClasses.IFieldInfo)">
            <summary>
            构造函数
            </summary>
            <param name="fieldInfo">字段信息</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldCore.#ctor(System.String,YDTF.ORMSupportClasses.IExpression,YDTF.ORMSupportClasses.AggregateFunction,System.Type,System.String,System.Int32,System.Byte,System.Byte)">
            <summary>
            构造函数
            </summary>
            <param name="name">字段名称</param>
            <param name="expressionToApply">应用计算表达式</param>
            <param name="aggregateFunctionToApply">应用聚合表达式计算</param>
            <param name="dataType">数据类型</param>
            <param name="objectAlias">对象别名</param>
            <param name="maxLength">最大长度</param>
            <param name="precision">精度</param>
            <param name="scale">小数位</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldCore.AcceptChange">
            <summary>
            提交修改
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldCore.YDTF#ORMSupportClasses#IEntityFieldCore#Clone">
            <summary>
            克隆对象
            </summary>
            <returns>实体字段接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldCore.RejectChange">
            <summary>
            重置修改
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldCore.YDTF#ORMSupportClasses#IEntityFieldCore#SetDbValue(System.Object)">
            <summary>
            设置数据库值
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldCore.SetDbValue(System.Object)">
            <summary>
            设置数据库值
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldCore.YDTF#ORMSupportClasses#IEntityFieldCore#SetFieldIndex(System.Int32)">
            <summary>
            设置字段索引
            </summary>
            <param name="newIndex">新索引</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldCore.SetFieldIndex(System.Int32)">
            <summary>
            设置字段索引
            </summary>
            <param name="newIndex">新索引</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldCore.ForcedCurrentValueWrite(System.Object)">
            <summary>
            强迫写入当前值
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldCore.ForcedCurrentValueWrite(System.Object,System.Object)">
            <summary>
            强迫写入当前值
            </summary>
            <param name="value">值</param>
            <param name="dbValue">数据库值</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldCore.ForcedChangedWrite(System.Boolean)">
            <summary>
            强迫写入修改标记
            </summary>
            <param name="isChangedValue">是否修改值</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldCore.ForcedIsNullWrite(System.Boolean)">
            <summary>
            强迫写是有允许空
            </summary>
            <param name="isNull">是否允许null</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldCore.BeginEdit">
            <summary>
            开启修改
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldCore.CancelEdit">
            <summary>
            取消修改
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldCore.EndEdit">
            <summary>
            结束修改
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldCore.CompareTo(System.Object)">
            <summary>
            将此实例与指定的 System.Object 进行比较，并指示此实例在排序顺序中是位于指定的 System.Object 之前、之后还是与其出现在同一位置。
            </summary>
            <param name="fieldToCompare">字段</param>
            <returns>整数结果</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldCore.YDTF#ORMSupportClasses#IEntityFieldCoreInterpret#GetValue(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            根据实体获取当前字段的值
            </summary>
            <param name="entity">实体接口</param>
            <returns>当前字段值</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldCore.YDTF#ORMSupportClasses#IEntityFieldCoreInternal#GetState">
            <summary>
            获取状态
            </summary>
            <returns>状态类</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldCore.YDTF#ORMSupportClasses#IEntityFieldCoreInternal#SetState(YDTF.ORMSupportClasses.FieldStateBucket)">
            <summary>
            设置状态
            </summary>
            <param name="state">字段状态</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldCore.CloneInternals">
            <summary>
            克隆内容
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldCore.SetAggregateFunction(YDTF.ORMSupportClasses.AggregateFunction)">
            <summary>
            设置聚合表达式应用
            </summary>
            <param name="aggregateFunctionToApply">聚合枚举</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldCore.SetExpressionToApply(YDTF.ORMSupportClasses.IExpression)">
            <summary>
            设置计算表达式应用
            </summary>
            <param name="expressionToApply">计算表达式接口</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldCore.CleanUpDynamicUsageInfoIfRequired">
            <summary>
            如果能为空折清空
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldCore.EntityFieldCoreInterpretGetValueInternal(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            根据实体判断是否存在当前字段
            </summary>
            <param name="entity">实体</param>
            <returns>当前字段值</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldCore.GetAggregateFunctionToApply">
            <summary>
            获取聚合表达式应用
            </summary>
            <returns></returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldCore.GetExpressionToApply">
            <summary>
            获取计算表达式
            </summary>
            <returns>表达式接口</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldCore.GetFakeFieldIndex">
            <summary>
            获取动态索引
            </summary>
            <returns>字段索引</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldCore.GetHashCode">
            <summary>
            用作特定类型的哈希函数。
            </summary>
            <returns>当前的哈希代码</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldCore.Equals(System.Object)">
            <summary>
            确定指定的 System.Object 是否等于当前的 System.Object。
            </summary>
            <param name="obj">与当前的 System.Object 进行比较的 System.Object。</param>
            <returns>如果指定的 System.Object 等于当前的 System.Object，则为 true；否则为 false。</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldCore.SetFakeFieldIndex(System.Int32)">
            <summary>
            设置动态索引
            </summary>
            <param name="fakeFieldIndex">字段索引</param>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldCore.AggregateFunctionToApply">
            <summary>
            获取或设置聚合表达式
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldCore.Alias">
            <summary>
            获取或设置别名
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldCore.CurrentValue">
            <summary>
            获取或设置当前值
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldCore.CurrentValueInternal">
            <summary>
            获取或设置内部当前值
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldCore.DbValue">
            <summary>
            获取数据库值
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldCore.DbValueInternal">
            <summary>
            获取或设置内部数据库值
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldCore.ExpressionToApply">
            <summary>
            获取或设置计算表达式应用
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldCore.IsChanged">
            <summary>
            获取或设置是否修改
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldCore.IsNull">
            <summary>
            获取或设置是否为null
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldCore.ObjectAlias">
            <summary>
            获取或设置对象别名
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldCore.ActualContainingObjectName">
            <summary>
            获取真实包含的对象名
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldCore.ContainingObjectName">
            <summary>
            获取包含的对象名
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldCore.DataType">
            <summary>
            获取字段值的数据类型
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldCore.FieldIndex">
            <summary>
            获取字段的索引
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldCore.IsForeignKey">
            <summary>
            获取是否外键字段
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldCore.IsNullable">
            <summary>
            获取数据库字段是否可以为Null
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldCore.IsOfEnumDataType">
            <summary>
            获取是否为枚举类型
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldCore.IsPrimaryKey">
            <summary>
            获取是否为主键
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldCore.IsReadOnly">
            <summary>
            获取是否只读
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldCore.MaxLength">
            <summary>
            获取最大长度
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldCore.Name">
            <summary>
            获取名称
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldCore.Precision">
            <summary>
            获取精度
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldCore.RealDataType">
            <summary>
            获取真实数据类型
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldCore.Scale">
            <summary>
            获取小数位
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.EntityFieldCore.DynamicFieldInfo">
            <summary>
            动态字段信息类
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityFieldCore.DynamicFieldInfo._aggregateFunctionToApply">
            <summary>
            聚合状态枚举
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityFieldCore.DynamicFieldInfo._expressionToApply">
            <summary>
            计算表达式接口
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityFieldCore.DynamicFieldInfo._fakeFieldIndex">
            <summary>
            动态索引
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldCore.DynamicFieldInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityFieldCore.DynamicFieldInfo.Clone">
            <summary>
            克隆
            </summary>
            <returns></returns>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldCore.DynamicFieldInfo.AggregateFunctionToApply">
            <summary>
            获取或设置聚合表达式
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldCore.DynamicFieldInfo.ExpressionToApply">
            <summary>
            获取或设置计算表达式
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldCore.DynamicFieldInfo.FakeFieldIndex">
            <summary>
            获取或设置动态索引
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityFieldCore.DynamicFieldInfo.IsEmpty">
            <summary>
            获取是否为空
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.EntityField2">
            <summary>
            实体字段
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.EntityField2._typeConverterToUse">
            <summary>
            类型转换器
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.#ctor(YDTF.ORMSupportClasses.IFieldInfo)">
            <summary>
            构造函数
            </summary>
            <param name="fieldInfo">字段信息接口</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.#ctor(System.String,YDTF.ORMSupportClasses.IExpression)">
            <summary>
            构造函数
            </summary>
            <param name="name">字段名称</param>
            <param name="expressionToApply">计算表达式</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.#ctor(System.String,YDTF.ORMSupportClasses.IExpression,YDTF.ORMSupportClasses.AggregateFunction)">
            <summary>
            构造函数
            </summary>
            <param name="name">字段名称</param>
            <param name="expressionToApply">计算表达式</param>
            <param name="aggregateFunctionToApply">聚合标志</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.#ctor(System.String,YDTF.ORMSupportClasses.IExpression,System.Type)">
            <summary>
            构造函数
            </summary>
            <param name="name">字段名称</param>
            <param name="expressionToApply">计算表达式</param>
            <param name="dataType">数据类型</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.#ctor(System.String,System.String,System.Type)">
            <summary>
            构造函数
            </summary>
            <param name="name">字段名称</param>
            <param name="objectAlias">对象别名</param>
            <param name="dataType">数据类型</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.#ctor(System.String,YDTF.ORMSupportClasses.IExpression,YDTF.ORMSupportClasses.AggregateFunction,System.Type)">
            <summary>
            构造函数
            </summary>
            <param name="name">字段名称</param>
            <param name="expressionToApply">计算表达式</param>
            <param name="aggregateFunctionToApply">聚合标志</param>
            <param name="dataType">数据类型</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.#ctor(System.String,System.String,System.Type,System.Int32,System.Byte,System.Byte)">
            <summary>
            构造函数
            </summary>
            <param name="name">字段名称</param>
            <param name="objectAlias">对象别名</param>
            <param name="dataType">数据类型</param>
            <param name="maxLength">最大长度</param>
            <param name="precision">精度</param>
            <param name="scale">小数位</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.#ctor(System.String,YDTF.ORMSupportClasses.IExpression,YDTF.ORMSupportClasses.AggregateFunction,System.Type,System.String,System.Int32,System.Byte,System.Byte)">
            <summary>
            构造函数
            </summary>
            <param name="name">字段名称</param>
            <param name="expressionToApply">计算表达式</param>
            <param name="aggregateFunctionToApply">聚合标志</param>
            <param name="dataType">数据类型</param>
            <param name="objectAlias">对象别名</param>
            <param name="maxLength">最大长度</param>
            <param name="precision">精度</param>
            <param name="scale">小数位</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.Clone">
            <summary>
            克隆对象
            </summary>
            <returns>对象</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.Equals(System.Object)">
            <summary>
            确定指定的 System.Object 是否等于当前的 System.Object。
            </summary>
            <param name="obj">与当前的 System.Object 进行比较的 System.Object。</param>
            <returns>如果指定的 System.Object 等于当前的 System.Object，则为 true；否则为 false。</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.GetHashCode">
            <summary>
            用作特定类型的哈希函数。
            </summary>
            <returns>当前的哈希代码</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_Addition(YDTF.ORMSupportClasses.EntityField2,YDTF.ORMSupportClasses.EntityField2)">
            <summary>
            +操作
            </summary>
            <param name="leftOperand">左边字段</param>
            <param name="rightOperand">右边字段</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_Addition(YDTF.ORMSupportClasses.EntityField2,YDTF.ORMSupportClasses.EntityProperty)">
            <summary>
            +操作
            </summary>
            <param name="leftOperand">左边字段</param>
            <param name="rightOperand">右边属性</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_Addition(YDTF.ORMSupportClasses.EntityField2,YDTF.ORMSupportClasses.Expression)">
            <summary>
            +操作
            </summary>
            <param name="leftOperand">左边字段</param>
            <param name="rightOperand">右边表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_Addition(YDTF.ORMSupportClasses.EntityField2,System.Object)">
            <summary>
            +操作
            </summary>
            <param name="leftOperand">左边字段</param>
            <param name="value">右边值</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_Addition(YDTF.ORMSupportClasses.Expression,YDTF.ORMSupportClasses.EntityField2)">
            <summary>
            +操作
            </summary>
            <param name="leftOperand">左边表达式</param>
            <param name="rightOperand">右边字段</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_Addition(System.Object,YDTF.ORMSupportClasses.EntityField2)">
            <summary>
            +操作
            </summary>
            <param name="value">左边值</param>
            <param name="rightOperand">右边字段</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_BitwiseOr(YDTF.ORMSupportClasses.EntityField2,YDTF.ORMSupportClasses.SortOperator)">
            <summary>
            | 操作 排序
            </summary>
            <param name="field">字段</param>
            <param name="operatorToUse">排序标志</param>
            <returns>排序表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_Division(YDTF.ORMSupportClasses.EntityField2,YDTF.ORMSupportClasses.EntityField2)">
            <summary>
            /操作
            </summary>
            <param name="leftOperand">左边字段</param>
            <param name="rightOperand">右边字段</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_Division(YDTF.ORMSupportClasses.EntityField2,YDTF.ORMSupportClasses.EntityProperty)">
            <summary>
            /操作
            </summary>
            <param name="leftOperand">左边字段</param>
            <param name="rightOperand">右边属性</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_Division(YDTF.ORMSupportClasses.EntityField2,YDTF.ORMSupportClasses.Expression)">
            <summary>
            /操作
            </summary>
            <param name="leftOperand">左边字段</param>
            <param name="rightOperand">右边表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_Division(YDTF.ORMSupportClasses.EntityField2,System.Object)">
            <summary>
            /操作
            </summary>
            <param name="leftOperand">左边字段</param>
            <param name="value">右边值</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_Division(YDTF.ORMSupportClasses.Expression,YDTF.ORMSupportClasses.EntityField2)">
            <summary>
            /操作
            </summary>
            <param name="leftOperand">左边表达式</param>
            <param name="rightOperand">右边字段</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_Division(System.Object,YDTF.ORMSupportClasses.EntityField2)">
            <summary>
            /操作
            </summary>
            <param name="value">左边值</param>
            <param name="rightOperand">右边字段</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_Equality(YDTF.ORMSupportClasses.EntityField2,YDTF.ORMSupportClasses.EntityField2)">
            <summary>
            ==操作
            </summary>
            <param name="leftOperand">左边字段</param>
            <param name="rightOperand">右边字段</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_Equality(YDTF.ORMSupportClasses.EntityField2,YDTF.ORMSupportClasses.EntityProperty)">
            <summary>
            ==操作
            </summary>
            <param name="leftOperand">左边字段</param>
            <param name="rightOperand">右边属性</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_Equality(YDTF.ORMSupportClasses.EntityField2,YDTF.ORMSupportClasses.IExpression)">
            <summary>
            ==操作
            </summary>
            <param name="field">左边字段</param>
            <param name="toCompareWith">右边表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_Equality(YDTF.ORMSupportClasses.EntityField2,System.Collections.IList)">
            <summary>
            ==操作
            </summary>
            <param name="field">左边字段</param>
            <param name="values">右边值集合</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_Equality(YDTF.ORMSupportClasses.EntityField2,System.Object)">
            <summary>
            ==操作
            </summary>
            <param name="field">左边字段</param>
            <param name="value">右边值</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_GreaterThan(YDTF.ORMSupportClasses.EntityField2,YDTF.ORMSupportClasses.EntityField2)">
            <summary>
            >操作
            </summary>
            <param name="leftOperand">左边字段</param>
            <param name="rightOperand">右边字段</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_GreaterThan(YDTF.ORMSupportClasses.EntityField2,YDTF.ORMSupportClasses.EntityProperty)">
            <summary>
            >操作
            </summary>
            <param name="leftOperand">左边字段</param>
            <param name="rightOperand">右边属性</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_GreaterThan(YDTF.ORMSupportClasses.EntityField2,YDTF.ORMSupportClasses.IExpression)">
            <summary>
            >操作
            </summary>
            <param name="field">左边字段</param>
            <param name="toCompareWith">右边表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_GreaterThan(YDTF.ORMSupportClasses.EntityField2,System.Object)">
            <summary>
            >操作
            </summary>
            <param name="field">左边字段</param>
            <param name="value">右边值</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_GreaterThanOrEqual(YDTF.ORMSupportClasses.EntityField2,YDTF.ORMSupportClasses.EntityField2)">
            <summary>
            >=操作
            </summary>
            <param name="leftOperand">左边字段</param>
            <param name="rightOperand">右边字段</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_GreaterThanOrEqual(YDTF.ORMSupportClasses.EntityField2,YDTF.ORMSupportClasses.EntityProperty)">
            <summary>
            >=操作
            </summary>
            <param name="leftOperand">左边字段</param>
            <param name="rightOperand">右边属性</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_GreaterThanOrEqual(YDTF.ORMSupportClasses.EntityField2,YDTF.ORMSupportClasses.IExpression)">
            <summary>
            >=操作
            </summary>
            <param name="field">左边字段</param>
            <param name="toCompareWith">右边表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_GreaterThanOrEqual(YDTF.ORMSupportClasses.EntityField2,System.Object)">
            <summary>
            >=操作
            </summary>
            <param name="field">左边字段</param>
            <param name="value">右边值</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_Inequality(YDTF.ORMSupportClasses.EntityField2,YDTF.ORMSupportClasses.EntityField2)">
            <summary>
            !=操作
            </summary>
            <param name="leftOperand">左边字段</param>
            <param name="rightOperand">右边字段</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_Inequality(YDTF.ORMSupportClasses.EntityField2,YDTF.ORMSupportClasses.EntityProperty)">
            <summary>
            !=操作
            </summary>
            <param name="leftOperand">左边字段</param>
            <param name="rightOperand">右边属性</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_Inequality(YDTF.ORMSupportClasses.EntityField2,YDTF.ORMSupportClasses.IExpression)">
            <summary>
            !=操作
            </summary>
            <param name="field">左边字段</param>
            <param name="toCompareWith">右边表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_Inequality(YDTF.ORMSupportClasses.EntityField2,System.Collections.IList)">
            <summary>
            !=操作
            </summary>
            <param name="field">左边字段</param>
            <param name="values">右边值集合</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_Inequality(YDTF.ORMSupportClasses.EntityField2,System.Object)">
            <summary>
            !=操作
            </summary>
            <param name="field">左边字段</param>
            <param name="value">右边值</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_LessThan(YDTF.ORMSupportClasses.EntityField2,YDTF.ORMSupportClasses.EntityField2)">
            <summary>
             ＜操作
            </summary>
            <param name="leftOperand">左边字段</param>
            <param name="rightOperand">右边字段</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_LessThan(YDTF.ORMSupportClasses.EntityField2,YDTF.ORMSupportClasses.EntityProperty)">
            <summary>
            ＜操作
            </summary>
            <param name="leftOperand">左边字段</param>
            <param name="rightOperand">右边属性</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_LessThan(YDTF.ORMSupportClasses.EntityField2,YDTF.ORMSupportClasses.IExpression)">
            <summary>
            ＜操作
            </summary>
            <param name="field">左边字段</param>
            <param name="toCompareWith">右边表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_LessThan(YDTF.ORMSupportClasses.EntityField2,System.Object)">
            <summary>
            ＜操作
            </summary>
            <param name="field">左边字段</param>
            <param name="value">右边值</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_LessThanOrEqual(YDTF.ORMSupportClasses.EntityField2,YDTF.ORMSupportClasses.EntityField2)">
            <summary>
            ＜=操作
            </summary>
            <param name="leftOperand">左边字段</param>
            <param name="rightOperand">右边字段</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_LessThanOrEqual(YDTF.ORMSupportClasses.EntityField2,YDTF.ORMSupportClasses.EntityProperty)">
            <summary>
            ＜=操作
            </summary>
            <param name="leftOperand">左边字段</param>
            <param name="rightOperand">右边属性</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_LessThanOrEqual(YDTF.ORMSupportClasses.EntityField2,YDTF.ORMSupportClasses.IExpression)">
            <summary>
            ＜=操作
            </summary>
            <param name="field">左边字段</param>
            <param name="toCompareWith">右边表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_LessThanOrEqual(YDTF.ORMSupportClasses.EntityField2,System.Object)">
            <summary>
            ＜=操作
            </summary>
            <param name="field">左边字段</param>
            <param name="value">右边值</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_Modulus(YDTF.ORMSupportClasses.EntityField2,System.String)">
            <summary>
            %操作
            </summary>
            <param name="field">左边字段</param>
            <param name="pattern">右边"% %"字符串</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_Multiply(YDTF.ORMSupportClasses.EntityField2,YDTF.ORMSupportClasses.EntityField2)">
            <summary>
            *操作
            </summary>
            <param name="leftOperand">左边字段</param>
            <param name="rightOperand">右边字段</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_Multiply(YDTF.ORMSupportClasses.EntityField2,YDTF.ORMSupportClasses.EntityProperty)">
            <summary>
            *操作
            </summary>
            <param name="leftOperand">左边字段</param>
            <param name="rightOperand">右边属性</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_Multiply(YDTF.ORMSupportClasses.EntityField2,YDTF.ORMSupportClasses.Expression)">
            <summary>
            *操作
            </summary>
            <param name="leftOperand">左边字段</param>
            <param name="rightOperand">右边表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_Multiply(YDTF.ORMSupportClasses.EntityField2,System.Object)">
            <summary>
            *操作
            </summary>
            <param name="leftOperand">左边字段</param>
            <param name="value">右边值</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_Multiply(YDTF.ORMSupportClasses.Expression,YDTF.ORMSupportClasses.EntityField2)">
            <summary>
            *操作
            </summary>
            <param name="leftOperand">左边表达式</param>
            <param name="rightOperand">右边字段</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_Multiply(System.Object,YDTF.ORMSupportClasses.EntityField2)">
            <summary>
            *操作
            </summary>
            <param name="value">左边值</param>
            <param name="rightOperand">右边字段</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_Subtraction(YDTF.ORMSupportClasses.EntityField2,YDTF.ORMSupportClasses.EntityField2)">
            <summary>
            -操作
            </summary>
            <param name="leftOperand">左边字段</param>
            <param name="rightOperand">右边字段</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_Subtraction(YDTF.ORMSupportClasses.EntityField2,YDTF.ORMSupportClasses.EntityProperty)">
            <summary>
            -操作
            </summary>
            <param name="leftOperand">左边字段</param>
            <param name="rightOperand">右边属性</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_Subtraction(YDTF.ORMSupportClasses.EntityField2,YDTF.ORMSupportClasses.Expression)">
            <summary>
            -操作
            </summary>
            <param name="leftOperand">左边字段</param>
            <param name="rightOperand">右边表达式</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_Subtraction(YDTF.ORMSupportClasses.EntityField2,System.Object)">
            <summary>
            -操作
            </summary>
            <param name="leftOperand">左边字段</param>
            <param name="value">右边值</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_Subtraction(YDTF.ORMSupportClasses.Expression,YDTF.ORMSupportClasses.EntityField2)">
            <summary>
            -操作
            </summary>
            <param name="leftOperand">左边表达式</param>
            <param name="rightOperand">右边字段</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.op_Subtraction(System.Object,YDTF.ORMSupportClasses.EntityField2)">
            <summary>
            -操作
            </summary>
            <param name="value">左边值</param>
            <param name="rightOperand">右边字段</param>
            <returns>表达式</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.SetAggregateFunction(YDTF.ORMSupportClasses.AggregateFunction)">
            <summary>
            设置聚合表达式
            </summary>
            <param name="functionToToApply">聚合标志</param>
            <returns>当前字段</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.SetExpression(YDTF.ORMSupportClasses.IExpression)">
            <summary>
            设置计算表达式
            </summary>
            <param name="expressionToToApply">计算表达式</param>
            <returns>当前字段</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.SetFieldAlias(System.String)">
            <summary>
            设置别名
            </summary>
            <param name="fieldAlias">字段别名</param>
            <returns>当前字段</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.EntityField2.SetObjectAlias(System.String)">
            <summary>
            设置对象别名
            </summary>
            <param name="objectAlias">对象别名</param>
            <returns>当前字段</returns>
        </member>
        <member name="P:YDTF.ORMSupportClasses.EntityField2.TypeConverterToUse">
            <summary>
            获取或设置类型转换器
            </summary>
        </member>
        <member name="T:YDTF.VO.FieldInfoProviderSingleton">
            <summary>
            字段信息提供者
            </summary>
        </member>
        <member name="F:YDTF.VO.FieldInfoProviderSingleton._providerInstance">
            <summary>
            默认的实体信息提供者
            </summary>
        </member>
        <member name="M:YDTF.VO.FieldInfoProviderSingleton.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YDTF.VO.FieldInfoProviderSingleton.GetInstance">
            <summary>
            获取实例
            </summary>
            <returns>默认的实体信息提供者</returns>
        </member>
        <member name="T:YDTF.VO.FieldInfoProviderCore">
            <summary>
            字段信息提供者核心类
            </summary>
        </member>
        <member name="M:YDTF.VO.FieldInfoProviderCore.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YDTF.VO.FieldInfoProviderCore.AddElementFieldInfo(System.String,System.String,System.Type,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Byte,System.Byte)">
            <summary>
            新增元素字段信息
            </summary>
            <param name="elementName">元素名称(实体名称)</param>
            <param name="elementFieldName">元素字段名称(属性名称)</param>
            <param name="dataType">数据类型</param>
            <param name="isPrimaryKey">是否主键</param>
            <param name="isPrimaryKey">是否能为null</param>
            <param name="fieldIndex">字段索引</param>
            <param name="maxLength">最大长度</param>
            <param name="scale">小数位</param>
            <param name="precision">精度</param>
        </member>
        <member name="M:YDTF.VO.FieldInfoProviderCore.ConstructFieldStructures(System.String)">
            <summary>
            建造字段结构
            </summary>
            <param name="elementName">实体名称</param>
        </member>
        <member name="T:YDTF.ORMSupportClasses.ORMEntityIsDeletedException">
            <summary>
            删除异常
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.ORMEntityIsDeletedException._deletedEntity">
            <summary>
            删除实体
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ORMEntityIsDeletedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            构造函数
            </summary>
            <param name="info">序列化信息</param>
            <param name="context">上下文</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ORMEntityIsDeletedException.#ctor(System.String,YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="deletedEntity"></param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ORMEntityIsDeletedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="P:YDTF.ORMSupportClasses.ORMEntityIsDeletedException.DeletedEntity">
            <summary>
            
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.PredicateExpressionElementType">
            <summary>
            断言表达式元素类型
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.PredicateExpressionElementType.Operator">
            <summary>
            操作
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.PredicateExpressionElementType.Predicate">
            <summary>
            断言
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.PredicateExpressionElementType.Empty">
            <summary>
            空
            </summary>
        </member>
        <member name="T:YDTF.VO.EntityFactoryBase2">
            <summary>
            实体工厂基类
            </summary>
        </member>
        <member name="F:YDTF.VO.EntityFactoryBase2._entityName">
            <summary>
            实体名称
            </summary>
        </member>
        <member name="M:YDTF.VO.EntityFactoryBase2.#ctor(System.String)">
            <summary>
            实体名称
            </summary>
            <param name="entityName"></param>
        </member>
        <member name="M:YDTF.VO.EntityFactoryBase2.CreateFields">
            <summary>
            创建字段集合
            </summary>
            <returns>字段集合接口</returns>
        </member>
        <member name="P:YDTF.VO.EntityFactoryBase2.ForEntityName">
            <summary>
            实体名称
            </summary>
        </member>
        <member name="T:YDTF.ISOAClientBase">
            <summary>
            编写人：  罗林
            功  能：  ISOA服务调用
            编写时间：2012.03.09
            
            修改人：罗林
            修改原因：重构
            </summary>
        </member>
        <member name="F:YDTF.ISOAClientBase.HEAD_FLAG_SIZE">
            包头*
        </member>
        <member name="F:YDTF.ISOAClientBase.REQUEST_SERVICE_SIZE">
            动作请求包*
        </member>
        <member name="F:YDTF.ISOAClientBase.RESPONSE_SERVICE_SIZE">
            数据响应包*
        </member>
        <member name="M:YDTF.ISOAClientBase.CallService(System.Byte[])">
            <summary>
            调用ISOA平台服务
            </summary>
            <param name="requestMsg"></param>
            <returns></returns>
        </member>
        <member name="M:YDTF.ISOAClientBase.HeadPacketToBytes(YDTF.ISOAClientBase.isoa_head)">
            <summary>
            Head结构体转成字节流
            </summary>
            <param name="head"></param>
            <returns></returns>
        </member>
        <member name="M:YDTF.ISOAClientBase.PutBytesInHeadStruct(YDTF.ISOAClientBase.isoa_head@,System.Byte[])">
            <summary>
            把对应字节流转成Head结构体;
            </summary>
            <param name="head"></param>
            <param name="dataBuffer"></param>
        </member>
        <member name="M:YDTF.ISOAClientBase.PutBytesInResponseStruct(YDTF.ISOAClientBase.isoa_response@,System.Byte[])">
            <summary>
            把对应字节流转成Response结构体;
            </summary>
            <param name="response"></param>
            <param name="dataBuffer"></param>
        </member>
        <member name="M:YDTF.ISOAClientBase.ReadHeadPacketInfo(YDTF.ISOAClientBase.isoa_head@,System.Net.Sockets.NetworkStream)">
            <summary>
            读取并判断包头信息
            </summary>
            <param name="head"></param>
            <param name="stream"></param>
        </member>
        <member name="M:YDTF.ISOAClientBase.ReadResponseDataPacketInfo(YDTF.ISOAClientBase.isoa_head@,System.Net.Sockets.NetworkStream,YDTF.AccessPointMode)">
            <summary>
            读取响应数据包信息
            </summary>
        </member>
        <member name="M:YDTF.ISOAClientBase.Read(System.Net.Sockets.NetworkStream,System.Byte[],System.Int32,System.Int32)">
            <summary>
            从networkStream读Length字节的数据;
            为防止网络状况问题和数据报大小缓冲限制;
            要读取多次,直至读出指定数目的字节.
            </summary>
            <param name="stream">NetworkStrean对象</param>
            <param name="data">字节数组缓冲</param>
            <param name="offset">偏移,从offset字节处装入读入的数据</param>
            <param name="Length">需要读出的字节总数</param>
            <returns></returns>
        </member>
        <member name="M:YDTF.ISOAClientBase.Compress(System.Byte[])">
            <summary>
            压缩数据
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:YDTF.ISOAClientBase.Decompress(System.Byte[],System.Int32)">
            <summary>
            解压数据
            </summary>
            <param name="source"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="T:YDTF.ISOAClientBase.isoa_head">
            <summary>
            包头定义
            每个数据包中都带有包头
            </summary>
        </member>
        <member name="F:YDTF.ISOAClientBase.isoa_head.flag">
            <summary>
            标志位:4字节
            </summary>
        </member>
        <member name="F:YDTF.ISOAClientBase.isoa_head.ssize">
            <summary>
            数据长度:4字节[数据加密或者压缩之后的实际长度]
            </summary>
        </member>
        <member name="F:YDTF.ISOAClientBase.isoa_head.osize">
            <summary>
            数据原始长度：4字节
            </summary>
        </member>
        <member name="F:YDTF.ISOAClientBase.isoa_head.mac">
            <summary>
            数据校检：130字节
            </summary>
        </member>
        <member name="T:YDTF.ISOAClientBase.isoa_stub">
            <summary>
            动作响应包定义
            </summary>
        </member>
        <member name="F:YDTF.ISOAClientBase.isoa_stub.service">
            <summary>
            请求服务名称:128字节
            </summary>
        </member>
        <member name="F:YDTF.ISOAClientBase.isoa_stub.ip">
            <summary>
            服务器IP地址:40字节;
            IPv4=111.111.111.111=[15];
            </summary>
        </member>
        <member name="F:YDTF.ISOAClientBase.isoa_stub.port">
            <summary>
            服务器端口:128字节
            </summary>
        </member>
        <member name="F:YDTF.ISOAClientBase.isoa_stub.tunnel">
            <summary>
            服务通道名:128字节
            </summary>
        </member>
        <member name="F:YDTF.ISOAClientBase.isoa_stub.remsgid">
            <summary>
            消息ID:20字节
            </summary>
        </member>
        <member name="T:YDTF.ISOAClientBase.isoa_react">
            <summary>
            数据请求包定义
            </summary>
        </member>
        <member name="F:YDTF.ISOAClientBase.isoa_react.service">
            <summary>
            请求服务名称:128字节
            </summary>
        </member>
        <member name="F:YDTF.ISOAClientBase.isoa_react.tunnel">
            <summary>
            服务通道名:128字节
            </summary>
        </member>
        <member name="F:YDTF.ISOAClientBase.isoa_react.remsgid">
            <summary>
            消息ID:20字节
            </summary>
        </member>
        <member name="T:YDTF.ISOAClientBase.isoa_response">
            <summary>
            数据响应包定义
            </summary>
        </member>
        <member name="F:YDTF.ISOAClientBase.isoa_response.service">
            <summary>
            服务名称:128字节
            </summary>
        </member>
        <member name="F:YDTF.ISOAClientBase.isoa_response.service_cost">
            <summary>
            服务花费的服务器本地时钟时间毫秒数
            从调用服务函数开始到其返回的时间：20字节
            </summary>
        </member>
        <member name="F:YDTF.ISOAClientBase.isoa_response.react_size">
            <summary>
            响应信息长度:4字节
            </summary>
        </member>
        <member name="F:YDTF.ISOAClientBase.isoa_response.react_data">
            <summary>
            实际响应数据:长度在react_size中定义
            </summary>
        </member>
        <member name="T:YDTF.ISOAClientForGroup">
            <summary>
            ISOA服务集群调用
            </summary>
        </member>
        <member name="M:YDTF.ISOAClientForGroup.CallService(System.Byte[])">
            <summary>
            调用ISOA平台服务
            </summary>
            <param name="requestMsg"></param>
            <returns></returns>
        </member>
        <member name="M:YDTF.ISOAClientForGroup.PacketActionRequest(System.String,System.Byte[])">
            <summary>
            打包动作请求数据
            </summary>
            <param name="service"></param>
            <param name="request_data"></param>
            <returns></returns>
        </member>
        <member name="M:YDTF.ISOAClientForGroup.RequestPacketToBytes(YDTF.ISOAClientForGroup.isoa_request)">
            <summary>
            Request结构体转成字节流
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:YDTF.ISOAClientForGroup.isoa_request">
            <summary>
            动作请求包定义
            </summary>
        </member>
        <member name="F:YDTF.ISOAClientForGroup.isoa_request.user">
            <summary>
            用户:支持集群方式调用
            </summary>
        </member>
        <member name="F:YDTF.ISOAClientForGroup.isoa_request.service">
            <summary>
            请求服务名称:128字节
            </summary>
        </member>
        <member name="F:YDTF.ISOAClientForGroup.isoa_request.request_size">
            <summary>
            请求数据长度:4字节
            </summary>
        </member>
        <member name="F:YDTF.ISOAClientForGroup.isoa_request.request_data">
            <summary>
            实际请求数据:长度在request_size中定义    
            </summary>
        </member>
        <member name="T:YDTF.ISOAClientForSingle">
            <summary>
            ISOA服务单点调用
            </summary>
        </member>
        <member name="F:YDTF.ISOAClientForSingle.STUB_SERVICE_SIZE">
            动作响应包*
        </member>
        <member name="F:YDTF.ISOAClientForSingle.REQUEST_REACT_SERVICE_SIZE">
            数据请求包*
        </member>
        <member name="M:YDTF.ISOAClientForSingle.PacketActionRequest(System.String,System.Byte[])">
            <summary>
            打包动作请求数据
            </summary>
            <param name="service"></param>
            <param name="request_data"></param>
            <returns></returns>
        </member>
        <member name="M:YDTF.ISOAClientForSingle.RequestPacketToBytes(YDTF.ISOAClientForSingle.isoa_request)">
            <summary>
            Request结构体转成字节流
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:YDTF.ISOAClientForSingle.PutBytesInStubStruct(YDTF.ISOAClientBase.isoa_stub@,System.Byte[])">
            <summary>
            把对应字节流转成Stub结构体(存根信息)
            </summary>
            <param name="Stub"></param>
            <param name="data"></param>
        </member>
        <member name="M:YDTF.ISOAClientForSingle.PacketDataRequest(YDTF.ISOAClientBase.isoa_stub)">
            <summary>
            打包数据请求
            </summary>
            <param name="Stub"></param>
            <returns></returns>
        </member>
        <member name="M:YDTF.ISOAClientForSingle.StubPacketToBytes(YDTF.ISOAClientBase.isoa_stub)">
            <summary>
            Stub结构体(存根信息)转成字节流
            </summary>
            <param name="Stub"></param>
            <returns></returns>
        </member>
        <member name="T:YDTF.ISOAClientForSingle.isoa_request">
            <summary>
            动作请求包定义
            </summary>
        </member>
        <member name="F:YDTF.ISOAClientForSingle.isoa_request.service">
            <summary>
            请求服务名称:128字节
            </summary>
        </member>
        <member name="F:YDTF.ISOAClientForSingle.isoa_request.request_size">
            <summary>
            请求数据长度:4字节
            </summary>
        </member>
        <member name="F:YDTF.ISOAClientForSingle.isoa_request.request_data">
            <summary>
            实际请求数据:长度在request_size中定义    
            </summary>
        </member>
        <member name="T:YDTF.AccessPointMode">
            <summary>
            前端调ISOA服务的模式
            </summary>
        </member>
        <member name="F:YDTF.AccessPointMode.Group">
            <summary>
            集群
            </summary>
        </member>
        <member name="F:YDTF.AccessPointMode.Single">
            <summary>
            单点
            </summary>
        </member>
        <member name="T:YDTF.ORMExpand.Common">
            <summary>
            公共方法
            </summary>
        </member>
        <member name="F:YDTF.ORMExpand.Common.VOPrefix">
            <summary>
            VO前缀 (VO_)
            </summary>
        </member>
        <member name="F:YDTF.ORMExpand.Common.ORMAssemblyName">
            <summary>
            ORM程序集完全名称
            </summary>
        </member>
        <member name="F:YDTF.ORMExpand.Common._sysHeader">
            <summary>
            系统头包
            </summary>
        </member>
        <member name="F:YDTF.ORMExpand.Common._sysError">
            <summary>
            系统错误包
            </summary>
        </member>
        <member name="F:YDTF.ORMExpand.Common._entityAssemblyName">
            <summary>
            实体程序集名称
            </summary>
        </member>
        <member name="M:YDTF.ORMExpand.Common.GetEntityType(System.String)">
            <summary>
            获取实体类型
            </summary>
            <param name="typeName">类型名称</param>
            <returns>类型</returns>
        </member>
        <member name="M:YDTF.ORMExpand.Common.ConvertXMLSpecialChar(System.String)">
            <summary>
            转换XML的特殊字符
            </summary>
            <param name="str">需要转换的字符串</param>
            <returns>转换后的字符串</returns>
        </member>
        <member name="M:YDTF.ORMExpand.Common.ConvertToXMLSpecialChar(System.String)">
            <summary>
            转换成XML的特殊字符
            </summary>
            <param name="value">需要转换的字符串</param>
            <returns>转换后的字符串</returns>
        </member>
        <member name="M:YDTF.ORMExpand.Common.GetBytesFromString(System.String)">
            <summary>
            字符串转字节流UTF8编码
            </summary>
            <param name="msg"></param>
            <returns></returns>
        </member>
        <member name="M:YDTF.ORMExpand.Common.GetBytesFromString2(System.String)">
            <summary>
            字符串转字节流
            </summary>
            <param name="msg"></param>
            <returns></returns>
        </member>
        <member name="M:YDTF.ORMExpand.Common.GetStringFromBytes(System.Byte[])">
            <summary>
            字节流转字符串-UTF8编码
            </summary>
            <param name="msg"></param>
            <returns></returns>
        </member>
        <member name="M:YDTF.ORMExpand.Common.GetStringFromBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>
            字节流转字符串-UTF8编码
            </summary>
            <param name="msg"></param>
            <param name="index"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:YDTF.ORMExpand.Common.Compress(System.Byte[])">
            <summary>
            压缩数据
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:YDTF.ORMExpand.Common.CopyStream(System.IO.Stream,System.IO.Stream)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="output"></param>
        </member>
        <member name="M:YDTF.ORMExpand.Common.Decompress(System.Byte[],System.Int32)">
            <summary>
            解压数据
            </summary>
            <param name="source"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:YDTF.ORMExpand.Common.ConvertDecimalToDateTime(System.Decimal,YDTF.ORMExpand.DateTimeConvertScope)">
            <summary>
            转换Decimal到DateTime
            </summary>
            <param name="value">Decimal类型的时间</param>
            <param name="dateTimeConvertScope">转换范围</param>
            <returns>时间</returns>
        </member>
        <member name="M:YDTF.ORMExpand.Common.GetFormatByDateTimeConvertScope(YDTF.ORMExpand.DateTimeConvertScope)">
            <summary>
            获取时间范围的时间格式
            </summary>
            <param name="dateTimeConvertScope">时间范围</param>
            <returns>时间格式</returns>
        </member>
        <member name="M:YDTF.ORMExpand.Common.ConvertDateTimeToDecimal(System.Nullable{System.DateTime},YDTF.ORMExpand.DateTimeConvertScope)">
            <summary>
            转换DateTime到Decimal
            </summary>
            <param name="dateTime">时间</param>
            <param name="dateTimeConvertScope">转换范围</param>
            <returns>decimal类型数据</returns>
        </member>
        <member name="M:YDTF.ORMExpand.Common.GetDateTimeByDecimal(System.Decimal,System.Decimal)">
            <summary>
            获取日期值
            </summary>
            <param name="date">日期</param>
            <param name="time">时间</param>
            <returns>DateTime</returns>
        </member>
        <member name="M:YDTF.ORMExpand.Common.SetDateTimeToDecimal(System.Nullable{System.DateTime},System.Decimal@,System.Decimal@)">
            <summary>
            设置日期和时间的值
            </summary>
            <param name="dateTime">DateTime</param>
            <param name="date">日期</param>
            <param name="time">时间</param>
        </member>
        <member name="M:YDTF.ORMExpand.Common.GetDataErrorInfo(System.Object)">
            <summary>
            获取数据错误信息
            </summary>
            <param name="value">数据</param>
            <returns>string为空无错误</returns>
        </member>
        <member name="P:YDTF.ORMExpand.Common.SysHeader">
            <summary>
            获取或设置系统头包
            </summary>
        </member>
        <member name="P:YDTF.ORMExpand.Common.SysError">
            <summary>
            获取或设置系统错误包
            </summary>
        </member>
        <member name="P:YDTF.ORMExpand.Common.EntityAssemblyName">
            <summary>
            获取或设置实体程序集名称
            </summary>
        </member>
        <member name="T:YDTF.ORMExpand.DateTimeConvertScope">
             <summary>
            时间转换范围
             </summary>
        </member>
        <member name="F:YDTF.ORMExpand.DateTimeConvertScope.YearMonth">
            <summary>
            转换年月
            </summary>
        </member>
        <member name="F:YDTF.ORMExpand.DateTimeConvertScope.Date">
            <summary>
            转换年月日
            </summary>
        </member>
        <member name="F:YDTF.ORMExpand.DateTimeConvertScope.DateTime">
            <summary>
            转换年月日时分秒
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.ValidatorChangeBase">
            <summary>
            验证和修改基类
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ValidatorChangeBase.OnAssignedToEntity(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            添加验证修改
            </summary>
            <param name="involvedEntity">添加验证修改的实体接口</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ValidatorChangeBase.OnUnassignedFromEntity(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            移除验证修改
            </summary>
            <param name="involvedEntity">移除验证修改的实体接口</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ValidatorChangeBase.OnValidateEntity(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            验证实体
            </summary>
            <param name="involvedEntity">实体接口</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ValidatorChangeBase.OnValidateEntityAfterLoad(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            验证实体加载后
            </summary>
            <param name="involvedEntity">实体接口</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ValidatorChangeBase.OnValidateEntityAfterSave(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            验证实体保存后
            </summary>
            <param name="involvedEntity">实体接口</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ValidatorChangeBase.OnValidateEntityBeforeDelete(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            验证实体删除前
            </summary>
            <param name="involvedEntity">实体接口</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ValidatorChangeBase.OnValidateEntityBeforeSave(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            验证实体保存前
            </summary>
            <param name="involvedEntity">实体接口</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ValidatorChangeBase.OnValidateFieldValue(YDTF.ORMSupportClasses.IEntityCore,System.Int32,System.Object)">
            <summary>
            验证字段值
            </summary>
            <param name="involvedEntity">实体接口</param>
            <param name="fieldIndex">字段索引</param>
            <param name="value">值</param>
            <returns>true 验证成功 false 验证失败</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ValidatorChangeBase.OnBeforeEntitySave(YDTF.ORMSupportClasses.IEntityCore)">
            <summary>
            实体保存前
            </summary>
            <param name="involvedEntity">实体接口</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.ValidatorChangeBase.OnFieldValueChanged(YDTF.ORMSupportClasses.IEntityCore,System.Object,YDTF.ORMSupportClasses.IEntityFieldCore)">
            <summary>
            字段值修改
            </summary>
            <param name="involvedEntity">实体接口</param>
            <param name="originalValue">旧值</param>
            <param name="field">字段</param>
        </member>
        <member name="T:YDTF.ORMSupportClasses.FieldInfo">
            <summary>
            字段信息类
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldInfo._actualContainingObjectName">
            <summary>
            真实包含的对象名
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldInfo._containingObjectName">
            <summary>
            包含的对象名
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldInfo._dataType">
            <summary>
            数据类型
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldInfo._fieldIndex">
            <summary>
            字段索引
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldInfo._isForeignKey">
            <summary>
            外键
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldInfo._isNullable">
            <summary>
            是否能为null
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldInfo._isOfEnumDataType">
            <summary>
            是否枚举类型
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldInfo._isPrimaryKey">
            <summary>
            是否主键
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldInfo._isReadOnly">
            <summary>
            是否只读
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldInfo._maxLength">
            <summary>
            最大长度
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldInfo._name">
            <summary>
            名称
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldInfo._precision">
            <summary>
            精度
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldInfo._realDataType">
            <summary>
            去除Nullable的类型
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.FieldInfo._scale">
            <summary>
            小数位
            </summary>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldInfo.#ctor(System.String,System.String,System.Type,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Byte,System.Byte)">
            <summary>
            构造函数
            </summary>
            <param name="name">名称</param>
            <param name="containingObjectName">包含的对象名</param>
            <param name="dataType">数据类型</param>
            <param name="isPrimaryKey">是否主键</param>
            <param name="isForeignKey">外键</param>
            <param name="isReadOnly">是否只读</param>
            <param name="isNullable">是否能为null</param>
            <param name="fieldIndex">字段索引</param>
            <param name="maxLength">最大长度</param>
            <param name="scale">小数位</param>
            <param name="precision">精度</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldInfo.CreateClone(System.String)">
            <summary>
            克隆实体信息
            </summary>
            <param name="actualContainingObjectName">真实包含的对象名</param>
            <returns>实体信息</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldInfo.CreateClone(System.String,System.String)">
            <summary>
            克隆实体信息
            </summary>
            <param name="containingObjectName">包含的对象名</param>
            <param name="actualContainingObjectName">真实包含的对象名</param>
            <returns>实体信息</returns>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldInfo.InitClass(System.String,System.String,System.Type,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Byte,System.Byte)">
            <summary>
            初始化类
            </summary>
            <param name="name">名称</param>
            <param name="containingObjectName">包含的对象名</param>
            <param name="dataType">数据类型</param>
            <param name="isPrimaryKey">是否主键</param>
            <param name="isForeignKey">外键</param>
            <param name="isReadOnly">是否只读</param>
            <param name="isNullable">是否能为null</param>
            <param name="fieldIndex">字段索引</param>
            <param name="maxLength">最大长度</param>
            <param name="scale">小数位</param>
            <param name="precision">精度</param>
        </member>
        <member name="M:YDTF.ORMSupportClasses.FieldInfo.SetActualContainingObjectName(System.String)">
            <summary>
            设置真实包含的对象名
            </summary>
            <param name="actualContainingObjectName">真实包含的对象名</param>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldInfo.ActualContainingObjectName">
            <summary>
            获取真实包含的对象名
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldInfo.ContainingObjectName">
            <summary>
            获取包含的对象名
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldInfo.DataType">
            <summary>
            获取数据类型
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldInfo.FieldIndex">
            <summary>
            获取字段索引
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldInfo.IsForeignKey">
            <summary>
            获取是否是外键
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldInfo.IsNullable">
            <summary>
            获取是否能为null
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldInfo.IsOfEnumDataType">
            <summary>
            获取是否枚举类型
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldInfo.IsPrimaryKey">
            <summary>
            获取是否主键
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldInfo.IsReadOnly">
            <summary>
            获取是否只读
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldInfo.MaxLength">
            <summary>
            获取最大长度
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldInfo.Name">
            <summary>
            获取字段名
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldInfo.Precision">
            <summary>
            获取精度
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldInfo.RealDataType">
            <summary>
            获取去除Nullable的数据类型
            </summary>
        </member>
        <member name="P:YDTF.ORMSupportClasses.FieldInfo.Scale">
            <summary>
            获取小数位
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.PredicateExpressionOperator">
            <summary>
            断言表达式操作符
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.PredicateExpressionOperator.And">
            <summary>
            和
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.PredicateExpressionOperator.Or">
            <summary>
            或
            </summary>
        </member>
        <member name="T:YDTF.ORMSupportClasses.PostCollectionChangeAction">
            <summary>
            集合数据修改后关联状态
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.PostCollectionChangeAction.NoAction">
            <summary>
            不重置刷选和排序
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.PostCollectionChangeAction.ReapplyFilterAndSorter">
            <summary>
            重置刷选和排序
            </summary>
        </member>
        <member name="F:YDTF.ORMSupportClasses.PostCollectionChangeAction.ReapplySorter">
            <summary>
            重置排序
            </summary>
        </member>
        <member name="T:YDTF.CallServiceByHTTPISOA605">
            <summary>
            调用HTTP服务
            传输协议: HTTP
            ISOA版本: 605
            </summary>
        </member>
        <member name="F:YDTF.CallServiceByHTTPISOA605.dicServiceCallBacks">
            <summary>
            服务回调返回参数接口
            </summary>
        </member>
        <member name="M:YDTF.CallServiceByHTTPISOA605.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YDTF.CallServiceByHTTPISOA605.Initial">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:YDTF.CallServiceByHTTPISOA605.OrganizeInput(System.String,System.Object[])">
            <summary>
            组织输入参数
            </summary>
            <param name="serviceName">服务名称</param>
            <param name="inputValues">输入参数</param>
            <returns>转换后的输入参数</returns>
        </member>
        <member name="M:YDTF.CallServiceByHTTPISOA605.VerifyInputValues(System.String,System.Object[])">
            <summary>
            核实输入参数
            </summary>
            <param name="serviceName">服务名称</param>
            <param name="inputValues">输入参数</param>
            <returns>核实是否成功 成功：返回空字符串 失败：返回错误消息</returns>
        </member>
        <member name="M:YDTF.CallServiceByHTTPISOA605.UnPackToHttpStr(System.Text.StringBuilder,YDTF.ORMSupportClasses.IEntity2)">
            <summary>
            实体对象转换成Http字符串
            </summary>
            <param name="strParam">需要拼接的输入参数</param>
            <param name="entity">实体接口</param>      
        </member>
        <member name="M:YDTF.CallServiceByHTTPISOA605.InvokeService(System.String,System.Object)">
            <summary>
            HTTP调用服务
            </summary>
            <param name="serviceName">服务名称</param>
            <param name="inputParm">输入参数</param>
            <returns>字符串</returns>
        </member>
        <member name="M:YDTF.CallServiceByHTTPISOA605.OrganizeOutput``1(System.String,System.Object)">
            <summary>
            组织输出数据集
            </summary>
            <param name="serviceName">服务名称</param>
            <param name="outputParm">输入参数</param>
            <returns>数据集</returns>
        </member>
    </members>
</doc>
